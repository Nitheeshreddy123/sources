RequestText
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC10_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC10_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                              '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC10_GL_HIST_LOAD_DW2 AS (

----------------------------OA3NF_GL_BALANCES_C_MRC-----------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_C_MRC_HIST 
(BEGIN_BALANCE_CR_BEQ_CORR, 
BEGIN_BALANCE_DR_BEQ_CORR, 
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, 
CURRENCY_CD_MRC_BASE, 
GL_PERIOD_ID, 
PERIOD_NET_CR_BEQ_CORR,
PERIOD_NET_DR_BEQ_CORR, 
SET_OF_BOOKS_ID)



SELECT  
BEGIN_BALANCE_CR_BEQ_CORR, 
BEGIN_BALANCE_DR_BEQ_CORR, 
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, 
CURRENCY_CD_MRC_BASE, 
GL_PERIOD_ID, 
PERIOD_NET_CR_BEQ_CORR,
PERIOD_NET_DR_BEQ_CORR, 
SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_GL_BALANCES_C_MRC
WHERE
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;

);
--- Request Text
--------------------------------------------------------------------------------


--MAC11_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC11_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC11_GL_HIST_LOAD_DW2 AS (





-----------------------------------OA3NF_GL_BALANCES_CORR-----------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR_HIST 
(ACTUAL_FLAG, 
BEGIN_BALANCE_CR, 
BEGIN_BALANCE_CR_BEQ, 
BEGIN_BALANCE_CR_BEQ_CORR,
BEGIN_BALANCE_CR_CORR, 
BEGIN_BALANCE_DR, 
BEGIN_BALANCE_DR_BEQ,
BEGIN_BALANCE_DR_BEQ_CORR, 
BEGIN_BALANCE_DR_CORR, 
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, 
ENCUMBRANCE_TYPE_ID, 
FINANCIAL_PLAN_ID, 
GL_PERIOD_ID,
LAST_UPDATE_DTTM, 
PERIOD_NET_CR, 
PERIOD_NET_CR_BEQ, 
PERIOD_NET_CR_BEQ_CORR,
PERIOD_NET_CR_CORR, 
PERIOD_NET_DR, 
PERIOD_NET_DR_BEQ, 
PERIOD_NET_DR_BEQ_CORR,
PERIOD_NET_DR_CORR, 
PERIOD_TO_DATE_ADB, 
PERIOD_YEAR, 
PROJECT_TO_DATE_CR,
PROJECT_TO_DATE_CR_BEQ, 
PROJECT_TO_DATE_DR, 
PROJECT_TO_DATE_DR_BEQ,
QUARTER_TO_DATE_ADB, 
QUARTER_TO_DATE_CR, 
QUARTER_TO_DATE_CR_BEQ,
QUARTER_TO_DATE_DR, 
QUARTER_TO_DATE_DR_BEQ, 
SET_OF_BOOKS_ID,
TRANSLATED_FLAG, 
YEAR_TO_DATE_ADB, 
PERIOD_NUM, 
YEAR_TO_DATE_CR_CORR,
YEAR_TO_DATE_DR_CORR, 
YEAR_TO_DATE_NET_CORR, 
YEAR_TO_DATE_CR_BEQ_CORR,
YEAR_TO_DATE_DR_BEQ_CORR, 
YEAR_TO_DATE_NET_BEQ_CORR)

SELECT  ACTUAL_FLAG, 
BEGIN_BALANCE_CR, 
BEGIN_BALANCE_CR_BEQ, 
BEGIN_BALANCE_CR_BEQ_CORR,
BEGIN_BALANCE_CR_CORR, 
BEGIN_BALANCE_DR, 
BEGIN_BALANCE_DR_BEQ,
BEGIN_BALANCE_DR_BEQ_CORR, 
BEGIN_BALANCE_DR_CORR, 
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, ENCUMBRANCE_TYPE_ID, 
FINANCIAL_PLAN_ID, 
GL_PERIOD_ID,
LAST_UPDATE_DTTM, 
PERIOD_NET_CR, 
PERIOD_NET_CR_BEQ, 
PERIOD_NET_CR_BEQ_CORR,
PERIOD_NET_CR_CORR, 
PERIOD_NET_DR, 
PERIOD_NET_DR_BEQ, 
PERIOD_NET_DR_BEQ_CORR,
PERIOD_NET_DR_CORR, 
PERIOD_TO_DATE_ADB, 
PERIOD_YEAR, 
PROJECT_TO_DATE_CR,
PROJECT_TO_DATE_CR_BEQ, 
PROJECT_TO_DATE_DR, 
PROJECT_TO_DATE_DR_BEQ,
QUARTER_TO_DATE_ADB, 
QUARTER_TO_DATE_CR, 
QUARTER_TO_DATE_CR_BEQ,
QUARTER_TO_DATE_DR, 
QUARTER_TO_DATE_DR_BEQ, 
SET_OF_BOOKS_ID,
TRANSLATED_FLAG, 
YEAR_TO_DATE_ADB, 
PERIOD_NUM, 
YEAR_TO_DATE_CR_CORR,
YEAR_TO_DATE_DR_CORR, 
YEAR_TO_DATE_NET_CORR, 
YEAR_TO_DATE_CR_BEQ_CORR,
YEAR_TO_DATE_DR_BEQ_CORR, 
YEAR_TO_DATE_NET_BEQ_CORR
FROM FDM_TABLES_DB.OA3NF_GL_BALANCES_CORR
WHERE
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC12_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC12_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, 
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC12_GL_HIST_LOAD_DW2 AS (

DELETE FROM  FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F WHERE SET_OF_BOOKS_KEY=1002;
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
		ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
		BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
		BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
		CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, GL_ACCOUNT_KEY,
		GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
		PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
		PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
		PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
		PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
		PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
		PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
		PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
		PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
		PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
		PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
		PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
		PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
		P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
		P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
		P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
		P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
		QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
		QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
		QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
		QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
		QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
		QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
		TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
		YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
		YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
		YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
		YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
		YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
		P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
		P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
SELECT	ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
		ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
		BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
		BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
		CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, FUTURE_KEY, GL_ACCOUNT_KEY,
		GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
		PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
		PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
		PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
		PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
		PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
		PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
		PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
		PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
		PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
		PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
		PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
		PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
		P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
		P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
		P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
		P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
		QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
		QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
		QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
		QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
		QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
		QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
		TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
		YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
		YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
		YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
		YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
		YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
		P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
		P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
		 FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F 
		 where 
		 PERIOD_KEY IN 
		 ('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
		  'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
		  'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
		  'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
		  'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
		  'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
		  'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
		  'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
		  'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
		  'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
		  'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
                  'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16');
		  
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC13_GL_HIST_WOD_LOAD_DW2 AS (

----------OA3NF_EMPLOYEE_ADDRESS---------------




INSERT INTO FDW_TABLES_DB.OA3NF_EMPLOYEE_ADDRESS
 (
ADDRESS_ID,
EMPLOYEE_ID,
EFF_START_DATE,
PRIMARY_FLAG,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
COUNTRY,
EFF_END_DATE,
POSTAL_CODE,
COUNTY,
STATE_CD,
TELEPHONE_NUMBER_1,
TELEPHONE_NUMBER_2,
TELEPHONE_NUMBER_3,
CITY

)
SELECT 
ADDRESS_ID,
EMPLOYEE_ID,
EFF_START_DATE,
PRIMARY_FLAG,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
COUNTRY,
EFF_END_DATE,
POSTAL_CODE,
COUNTY,
STATE_CD,
TELEPHONE_NUMBER_1,
TELEPHONE_NUMBER_2,
TELEPHONE_NUMBER_3,
CITY
FROM FDM_TABLES_DB.OA3NF_EMPLOYEE_ADDRESS;


---------------------------------------------OA3NF_HR_JOBS----------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_HR_JOBS(
	JOB_ID,
	BUSINESS_GROUP_ID,
	JOB_DEFINITION_ID,
	EFF_START_DATE,
	EFF_END_DATE,
	JOB_NAME,
	LAST_UPDATE_DATE
)
SELECT
	JOB_ID,
	BUSINESS_GROUP_ID,
	JOB_DEFINITION_ID,
	EFF_START_DATE,
	EFF_END_DATE,
	JOB_NAME,
	LAST_UPDATE_DATE
FROM FDM_TABLES_DB.OA3NF_HR_JOBS;


--------------------------OA3NF_HR_LOCATION_ALL_TL--------------------------------------------

DELETE FROM FDW_TABLES_DB.OA3NF_HR_LOCATION_ALL_TL WHERE SET_OF_BOOKS_ID=1002;

INSERT INTO FDW_TABLES_DB.OA3NF_HR_LOCATION_ALL_TL(

	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	LOCATION_CODE,
	LOCATION_ID,
	SOURCE_LANG,
	SET_OF_BOOKS_ID
)
SELECT

	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	LOCATION_CODE,
	LOCATION_ID,
	SOURCE_LANG,
	1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_HR_LOCATION_ALL_TL;


---------------------------------------------OA3NF_PER_ALL_PEOPLE_F---------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_PER_ALL_PEOPLE_F
(
APPLICANT_NUMBER,
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE16,
ATTRIBUTE17,
ATTRIBUTE18,
ATTRIBUTE19,
ATTRIBUTE2,
ATTRIBUTE20,
ATTRIBUTE21,
ATTRIBUTE22,
ATTRIBUTE23,
ATTRIBUTE24,
ATTRIBUTE25,
ATTRIBUTE26,
ATTRIBUTE27,
ATTRIBUTE28,
ATTRIBUTE29,
ATTRIBUTE3,
ATTRIBUTE30,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE_CATEGORY,
BACKGROUND_CHECK_STATUS,
BACKGROUND_DATE_CHECK,
BENEFIT_GROUP_ID,
BLOOD_TYPE,
BUSINESS_GROUP_ID,
COMMENT_ID,
COORD_BEN_MED_CVG_END_DT,
COORD_BEN_MED_CVG_STRT_DT,
COORD_BEN_MED_EXT_ER,
COORD_BEN_MED_INSR_CRR_IDENT,
COORD_BEN_MED_INSR_CRR_NAME,
COORD_BEN_MED_PLN_NO,
COORD_BEN_MED_PL_NAME,
COORD_BEN_NO_CVG_FLAG,
CORRESPONDENCE_LANGUAGE,
COUNTRY_OF_BIRTH,
CREATED_BY,
CREATION_DATE,
CURRENT_APPLICANT_FLAG,
CURRENT_EMPLOYEE_FLAG,
CURRENT_EMP_OR_APL_FLAG,
CURRENT_NPW_FLAG,
DATE_EMPLOYEE_DATA_VERIFIED,
DATE_OF_BIRTH,
DATE_OF_DEATH,
DPDNT_ADOPTION_DATE,
DPDNT_VLNTRY_SVCE_FLAG,
EFFECTIVE_END_DATE,
EFFECTIVE_START_DATE,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
EXPENSE_CHECK_SEND_TO_ADDRESS,
FAST_PATH_EMPLOYEE,
FIRST_NAME,
FTE_CAPACITY,
FULL_NAME,
GLOBAL_PERSON_ID,
HOLD_APPLICANT_DATE_UNTIL,
HONORS,
INTERNAL_LOCATION,
KNOWN_AS,
LAST_MEDICAL_TEST_BY,
LAST_MEDICAL_TEST_DATE,
LAST_NAME,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
NATIONALITY,
NATIONAL_IDENTIFIER,
NPW_NUMBER,
OBJECT_VERSION_NUMBER,
OFFICE_NUMBER,
ON_MILITARY_SERVICE,
ORDER_NAME,
ORIGINAL_DATE_OF_HIRE,
PARTY_ID,
PERSON_ID,
PERSON_TYPE_ID,
PER_INFORMATION1,
PER_INFORMATION10,
PER_INFORMATION11,
PER_INFORMATION12,
PER_INFORMATION13,
PER_INFORMATION14,
PER_INFORMATION15,
PER_INFORMATION16,
PER_INFORMATION17,
PER_INFORMATION18,
PER_INFORMATION19,
PER_INFORMATION2,
PER_INFORMATION20,
PER_INFORMATION21,
PER_INFORMATION22,
PER_INFORMATION23,
PER_INFORMATION24,
PER_INFORMATION25,
PER_INFORMATION26,
PER_INFORMATION27,
PER_INFORMATION28,
PER_INFORMATION29,
PER_INFORMATION3,
PER_INFORMATION30,
PER_INFORMATION4,
PER_INFORMATION5,
PER_INFORMATION6,
PER_INFORMATION7,
PER_INFORMATION8,
PER_INFORMATION9,
PER_INFORMATION_CATEGORY,
PREVIOUS_LAST_NAME,
PRE_NAME_ADJUNCT,
PROGRAM_APPLICATION_ID,
PROGRAM_ID,
PROGRAM_UPDATE_DATE,
PROJECTED_START_DATE,
RECEIPT_OF_DEATH_CERT_DATE,
REGION_OF_BIRTH,
REGISTERED_DISABLED_FLAG,
REHIRE_AUTHORIZOR,
REHIRE_REASON,
REHIRE_RECOMMENDATION,
REQUEST_ID,
RESUME_EXISTS,
RESUME_LAST_UPDATED,
SECOND_PASSPORT_EXISTS,
SEX,
START_DATE,
STUDENT_STATUS,
SUFFIX,
TITLE_,
TOWN_OF_BIRTH,
USES_TOBACCO_FLAG,
VENDOR_ID,
WORK_SCHEDULE,
WORK_TELEPHONE)
SELECT
APPLICANT_NUMBER,
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE16,
ATTRIBUTE17,
ATTRIBUTE18,
ATTRIBUTE19,
ATTRIBUTE2,
ATTRIBUTE20,
ATTRIBUTE21,
ATTRIBUTE22,
ATTRIBUTE23,
ATTRIBUTE24,
ATTRIBUTE25,
ATTRIBUTE26,
ATTRIBUTE27,
ATTRIBUTE28,
ATTRIBUTE29,
ATTRIBUTE3,
ATTRIBUTE30,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE_CATEGORY,
BACKGROUND_CHECK_STATUS,
BACKGROUND_DATE_CHECK,
BENEFIT_GROUP_ID,
BLOOD_TYPE,
BUSINESS_GROUP_ID,
COMMENT_ID,
COORD_BEN_MED_CVG_END_DT,
COORD_BEN_MED_CVG_STRT_DT,
COORD_BEN_MED_EXT_ER,
COORD_BEN_MED_INSR_CRR_IDENT,
COORD_BEN_MED_INSR_CRR_NAME,
COORD_BEN_MED_PLN_NO,
COORD_BEN_MED_PL_NAME,
COORD_BEN_NO_CVG_FLAG,
CORRESPONDENCE_LANGUAGE,
COUNTRY_OF_BIRTH,
CREATED_BY,
CREATION_DATE,
CURRENT_APPLICANT_FLAG,
CURRENT_EMPLOYEE_FLAG,
CURRENT_EMP_OR_APL_FLAG,
CURRENT_NPW_FLAG,
DATE_EMPLOYEE_DATA_VERIFIED,
DATE_OF_BIRTH,
DATE_OF_DEATH,
DPDNT_ADOPTION_DATE,
DPDNT_VLNTRY_SVCE_FLAG,
EFFECTIVE_END_DATE,
EFFECTIVE_START_DATE,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
EXPENSE_CHECK_SEND_TO_ADDRESS,
FAST_PATH_EMPLOYEE,
FIRST_NAME,
FTE_CAPACITY,
FULL_NAME,
GLOBAL_PERSON_ID,
HOLD_APPLICANT_DATE_UNTIL,
HONORS,
INTERNAL_LOCATION,
KNOWN_AS,
LAST_MEDICAL_TEST_BY,
LAST_MEDICAL_TEST_DATE,
LAST_NAME,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
NATIONALITY,
NATIONAL_IDENTIFIER,
NPW_NUMBER,
OBJECT_VERSION_NUMBER,
OFFICE_NUMBER,
ON_MILITARY_SERVICE,
ORDER_NAME,
ORIGINAL_DATE_OF_HIRE,
PARTY_ID,
PERSON_ID,
PERSON_TYPE_ID,
PER_INFORMATION1,
PER_INFORMATION10,
PER_INFORMATION11,
PER_INFORMATION12,
PER_INFORMATION13,
PER_INFORMATION14,
PER_INFORMATION15,
PER_INFORMATION16,
PER_INFORMATION17,
PER_INFORMATION18,
PER_INFORMATION19,
PER_INFORMATION2,
PER_INFORMATION20,
PER_INFORMATION21,
PER_INFORMATION22,
PER_INFORMATION23,
PER_INFORMATION24,
PER_INFORMATION25,
PER_INFORMATION26,
PER_INFORMATION27,
PER_INFORMATION28,
PER_INFORMATION29,
PER_INFORMATION3,
PER_INFORMATION30,
PER_INFORMATION4,
PER_INFORMATION5,
PER_INFORMATION6,
PER_INFORMATION7,
PER_INFORMATION8,
PER_INFORMATION9,
PER_INFORMATION_CATEGORY,
PREVIOUS_LAST_NAME,
PRE_NAME_ADJUNCT,
PROGRAM_APPLICATION_ID,
PROGRAM_ID,
PROGRAM_UPDATE_DATE,
PROJECTED_START_DATE,
RECEIPT_OF_DEATH_CERT_DATE,
REGION_OF_BIRTH,
REGISTERED_DISABLED_FLAG,
REHIRE_AUTHORIZOR,
REHIRE_REASON,
REHIRE_RECOMMENDATION,
REQUEST_ID,
RESUME_EXISTS,
RESUME_LAST_UPDATED,
SECOND_PASSPORT_EXISTS,
SEX,
START_DATE,
STUDENT_STATUS,
SUFFIX,
TITLE_,
TOWN_OF_BIRTH,
USES_TOBACCO_FLAG,
VENDOR_ID,
WORK_SCHEDULE,
WORK_TELEPHONE
FROM FDM_TABLES_DB.OA3NF_PER_ALL_PEOPLE_F;


----------------------------------------OA3NF_HR_ASSIGNMENTS--------------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ASSIGNMENTS(
	ASSIGNMENT_ID,
	EMPLOYEE_ID,
	JOB_ID,
	EFFECTIVE_START_DATE,
	EFFECTIVE_END_DATE,
	LAST_UPDATE_DATE,
	ASSIGN_STATUS_TYPE_ID,
	ASSIGNMENT_NUMBER,
	ASSIGNMENT_TYPE,
	EMPLOYEE_CATEGORY,
	FREQUENCY,
	GRADE_ID,
	ORGANIZATION_ID,
	LOCATION_ID,
	MANAGER_FLAG,
	NORMAL_HOURS,
	PAYROLL_ID,
	BUSINESS_GROUP_ID,
	PERF_REVIEW_PERIOD,
	PERF_REVIEW_PER_FREQ,
	POSITION_ID,
	PRIMARY_FLAG,
	SAL_REVIEW_PERIOD,
	SAL_REVIEW_PER_FREQ,
	SUPERVISOR_ID,
	TIME_NORMAL_FINISH,
	TIME_NORMAL_START
)
SELECT
	ASSIGNMENT_ID,
	EMPLOYEE_ID,
	JOB_ID,
	EFFECTIVE_START_DATE,
	EFFECTIVE_END_DATE,
	LAST_UPDATE_DATE,
	ASSIGN_STATUS_TYPE_ID,
	ASSIGNMENT_NUMBER,
	ASSIGNMENT_TYPE,
	EMPLOYEE_CATEGORY,
	FREQUENCY,
	GRADE_ID,
	ORGANIZATION_ID,
	LOCATION_ID,
	MANAGER_FLAG,
	NORMAL_HOURS,
	PAYROLL_ID,
	BUSINESS_GROUP_ID,
	PERF_REVIEW_PERIOD,
	PERF_REVIEW_PER_FREQ,
	POSITION_ID,
	PRIMARY_FLAG,
	SAL_REVIEW_PERIOD,
	SAL_REVIEW_PER_FREQ,
	SUPERVISOR_ID,
	TIME_NORMAL_FINISH,
	TIME_NORMAL_START
FROM FDM_TABLES_DB.OA3NF_HR_ASSIGNMENTS;

----------------------------OA3NF_EMPLOYEE-------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_EMPLOYEE
 (
EMPLOYEE_ID,
EFFECTIVE_START_DATE,
EFFECTIVE_START_DTTM,
EFFECTIVE_END_DATE,
EFFECTIVE_END_DTTM,
DISABLED_CD,
BUSINESS_GROUP_ID,
LAST_NAME,
APPLICANT_NUMBER,
LANGUAGE_CD,
DATE_OF_BIRTH,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
FIRST_NAME,
EMPLOYEE_NAME,
INTERNAL_LOCATION,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
MILITARY_STATUS,
NATIONALITY,
NATIONAL_IDENTIFIER,
OFFICE_NUMBER,
PERSON_TYPE,
SEX,
LAST_UPDATE_DATE
)
SELECT 
EMPLOYEE_ID,
EFFECTIVE_START_DATE,
EFFECTIVE_START_DTTM,
EFFECTIVE_END_DATE,
EFFECTIVE_END_DTTM,
DISABLED_CD,
BUSINESS_GROUP_ID,
LAST_NAME,
APPLICANT_NUMBER,
LANGUAGE_CD,
DATE_OF_BIRTH,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
FIRST_NAME,
EMPLOYEE_NAME,
INTERNAL_LOCATION,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
MILITARY_STATUS,
NATIONALITY,
NATIONAL_IDENTIFIER,
OFFICE_NUMBER,
PERSON_TYPE,
SEX,
LAST_UPDATE_DATE
FROM FDM_TABLES_DB.OA3NF_EMPLOYEE;


---------------------------------------------------OA3NF_HR_ORG_UNITS--------------------------------------------


DELETE FROM FDW_TABLES_DB.OA3NF_HR_ORG_UNITS WHERE SET_OF_BOOKS_ID=1002;

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ORG_UNITS(
	ORGANIZATION_ID,
	BUSINESS_GROUP_ID,
	NAME,
	TRANSLATED_NAME,
	LANGUAGE_TL,
	SOURCE_LANGUAGE,
	LAST_UPDATE_DTTM,
	PROJECT_ORGANIZATION_NUMBER,
	ORG_TYPE,
	SET_OF_BOOKS_ID
)
SELECT
	ORGANIZATION_ID,
	BUSINESS_GROUP_ID,
	NAME,
	TRANSLATED_NAME,
	LANGUAGE_TL,
	SOURCE_LANGUAGE,
	LAST_UPDATE_DTTM,
	PROJECT_ORGANIZATION_NUMBER,
	ORG_TYPE,
	1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_HR_ORG_UNITS;


-----------------------------------------------------------OA3NF_HR_ORG_INFO-------------------------------------------------------------

DELETE FROM FDW_TABLES_DB.OA3NF_HR_ORG_INFO WHERE SET_OF_BOOKS_ID=1002;

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ORG_INFO(
	ORG_INFORMATION_ID,
	ORG_INFORMATION_CONTEXT,
	ORGANIZATION_ID,
	ORG_INFORMATION1,
	ORG_INFORMATION2,
	ORG_INFORMATION3,
	ORG_INFORMATION4,
	LAST_UPDATE_DTTM,
	SET_OF_BOOKS_ID
)

SELECT
	ORG_INFORMATION_ID,
	ORG_INFORMATION_CONTEXT,
	ORGANIZATION_ID,
	ORG_INFORMATION1,
	ORG_INFORMATION2,
	ORG_INFORMATION3,
	ORG_INFORMATION4,
	LAST_UPDATE_DTTM,
	1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_HR_ORG_INFO;

--------------------------------------------------------------------OA3NF_CUSTOMER_ACCT-----------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER_ACCT
 (
CUSTOMER_ACCOUNT_ID,
CUSTOMER_ID,
OA_LAST_UPDATE_DTTM,
CUSTOMER_ACCOUNT_NUMBER,
OA_CUSTOMER_CLASS_CD,
OA_SALES_CHANNEL_CODE
)
SELECT 
CUSTOMER_ACCOUNT_ID,
CUSTOMER_ID,
OA_LAST_UPDATE_DTTM,
CUSTOMER_ACCOUNT_NUMBER,
OA_CUSTOMER_CLASS_CD,
OA_SALES_CHANNEL_CODE
FROM FDM_TABLES_DB.OA3NF_CUSTOMER_ACCT;

---------------------------------------------------------------OA3NF_DB_CALENDAR---------------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_DB_CALENDAR(
CALENDAR_DATE,
CALENDAR_MONTH,
CALENDAR_QUARTER,
CALENDAR_WEEK_ENDING,
CALENDAR_YEAR,
CALENDAR_PERIOD,
CALENDAR_PERIOD_NAME,
CALENDAR_PERIOD_QUARTER)
SELECT 
CALENDAR_DATE,
CALENDAR_MONTH,
CALENDAR_QUARTER,
CALENDAR_WEEK_ENDING,
CALENDAR_YEAR,
CALENDAR_PERIOD,
CALENDAR_PERIOD_NAME,
CALENDAR_PERIOD_QUARTER
FROM FDM_TABLES_DB.OA3NF_DB_CALENDAR; 

----------------------------------------------------------OA3NF_CUSTOMER------------------------------------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER
 (
CUSTOMER_ID,
CUSTOMER_NUMBER,
CUSTOMER_NAME,
CUSTOMER_TYPE_CD,
OA_LAST_UPDATE_DTTM,
OA_CUSTOMER_STATUS_CD,
OA_CUST_FISCAL_YEAREND_MONTH,
OA_YEAR_ESTABLISHED

)
SELECT 
CUSTOMER_ID,
CUSTOMER_NUMBER,
CUSTOMER_NAME,
CUSTOMER_TYPE_CD,
OA_LAST_UPDATE_DTTM,
OA_CUSTOMER_STATUS_CD,
OA_CUST_FISCAL_YEAREND_MONTH,
OA_YEAR_ESTABLISHED
FROM FDM_TABLES_DB.OA3NF_CUSTOMER;

-------------------------------------------------------------------------OA3NF_CUSTOMER_ACCT_SITE-------------------------
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC1_AP_HIST_LOAD_DW2 AS (

----------------------------------OA3NF_AP_INV_LN_PO_LN----------------------------------




INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_PO_LN
(
VENDOR_PO_ID,
PO_DISTRIBUTION_ID,
AP_INVOICE_ID,
SET_OF_BOOKS_ID,
AP_INVOICE_LINE_NUM,
VENDOR_PO_LINE_QTY,
VENDOR_PO_LN_UOM_CD,
LAST_UPDATE_DTTM
)
SELECT
VENDOR_PO_ID,
PO_DISTRIBUTION_ID,
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID,
AP_INVOICE_LINE_NUM,
VENDOR_PO_LINE_QTY,
VENDOR_PO_LN_UOM_CD,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_INV_LN_PO_LN;






----------------------------------OA3NF_AP_INV_LN_RCPT_LN----------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_RCPT_LN
(
VENDOR_RECEIPT_LINE_UOM_CD,
AP_INVOICE_ID,
AP_INVOICE_LINE_NUM,
VENDOR_RECEIPT_ID,
VENDOR_RECEIPT_LINE_NUM,
SET_OF_BOOKS_ID,
VENDOR_RECEIPT_LINE_QTY,
LAST_UPDATE_DTTM
)
SELECT
VENDOR_RECEIPT_LINE_UOM_CD,
AP_INVOICE_ID,
AP_INVOICE_LINE_NUM,
VENDOR_RECEIPT_ID,
VENDOR_RECEIPT_LINE_NUM,
1002 AS SET_OF_BOOKS_ID,
VENDOR_RECEIPT_LINE_QTY,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_INV_LN_RCPT_LN;





----------------------------------OA3NF_AP_INV_RELATION----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_RELATION
(
AP_INVOICE_ID,
SET_OF_BOOKS_ID,
RELATED_INVOICE_ID,
INVOICE_RELATIONSHIP_TYPE_CD,
LAST_UPDATE_DTTM
)
SELECT
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID,
RELATED_INVOICE_ID,
INVOICE_RELATIONSHIP_TYPE_CD,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_INV_RELATION;






----------------------------------OA3NF_AP_OA_EXP_RPT_LINE----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_LINE
(
REPORT_HEADER_ID,
REPORT_LINE_NUMBER,
AMOUNT,
END_EXPENSE_DATE,
START_EXPENSE_DATE,
CURRENCY_CODE,
WEB_PARAMETER_ID,
EXPENDITURE_TYPE,
ITEM_DESCRIPTION,
JUSTIFICATION,
RECEIPT_CURRENCY_AMOUNT,
EXP_RPT_CHART_OF_ACCOUNT_ID,
SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
PROJECT_ID,
TASK_ID
)
SELECT
REPORT_HEADER_ID,
REPORT_LINE_NUMBER,
AMOUNT,
END_EXPENSE_DATE,
START_EXPENSE_DATE,
CURRENCY_CODE,
WEB_PARAMETER_ID,
EXPENDITURE_TYPE,
ITEM_DESCRIPTION,
JUSTIFICATION,
RECEIPT_CURRENCY_AMOUNT,
EXP_RPT_CHART_OF_ACCOUNT_ID,
SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
PROJECT_ID,
TASK_ID
FROM FDM_TABLES_DB.OA3NF_AP_OA_EXP_RPT_LINE;





----------------------------------OA3NF_AP_OA_EX_RPTHD_DEL----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTHD_DEL
(
REPORT_HEADER_ID,
SET_OF_BOOKS_ID
)
SELECT
REPORT_HEADER_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_OA_EX_RPTHD_DEL;





----------------------------------OA3NF_AP_OA_EX_RPTLN_DEL----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTLN_DEL
(
REPORT_HEADER_ID,
SET_OF_BOOKS_ID,
REPORT_LINE_NUMBER
)
SELECT
REPORT_HEADER_ID,
1002 AS SET_OF_BOOKS_ID,
REPORT_LINE_NUMBER
FROM FDM_TABLES_DB.OA3NF_AP_OA_EX_RPTLN_DEL;


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC1_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC1_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, FUTURE_KEY, VENDOR_KEY, GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                                 '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC1_GL_HIST_LOAD_DW2 AS (

-----------------OA3NF_PO_VNDR_PO_LN_DEL-----------------------------




INSERT INTO FDW_TABLES_DB.OA3NF_PO_VNDR_PO_LN_DEL
 (
VENDOR_PO_ID,
VENDOR_PO_LINE_ID,
SET_OF_BOOKS_ID
)
SELECT 
VENDOR_PO_ID,
VENDOR_PO_LINE_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_PO_VNDR_PO_LN_DEL; 


---------------------OA3NF_PO_DISTRIBUTIONS--------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS (
                VENDOR_PO_LN_ACCRUED_CD,
                ACCRUE_ON_RECEIPT_CD,
                AMOUNT_BILLED,
                AWARD_ID,
                CHART_OF_ACCOUNT_ID,
                CREATION_DATE,
                DELIVER_TO_PERSON_ID,
                DESTINATION_TYPE_CODE,
                DISTRIBUTION_NUM,
                ENCUMBERED_FLAG,
                EXPENDITURE_ITEM_DATE,
                EXPENDITURE_ORGANIZATION_ID,
                EXPENDITURE_TYPE,
                GL_CANCELLED_DATE,
                GL_CLOSED_DATE,
                LAST_UPDATE_DTTM,
                PO_LINE_LOCATION_ID,
                NONRECOVERABLE_TAX,
                ORG_ID,
                PO_DISTRIBUTION_ID,
                VENDOR_PO_ID,
                VENDOR_PO_LINE_ID,
                PROJECT_ID,
                QUANTITY_BILLED,
                QUANTITY_CANCELLED,
                QUANTITY_DELIVERED,
                QUANTITY_ORDERED,
                RATE,
                SOURCE_SYSTEM_ID,
                TASK_ID,
                AUTHORIZATION_STATUS,
                SET_OF_BOOKS_ID,
                P_SET_OF_BOOKS_ID,
                P_AMOUNT_BILLED,
                P_NONRECOVERABLE_TAX
)
                  
 SELECT   
                VENDOR_PO_LN_ACCRUED_CD,
                ACCRUE_ON_RECEIPT_CD,
                AMOUNT_BILLED,
                AWARD_ID,
                CHART_OF_ACCOUNT_ID,
                CREATION_DATE,
                DELIVER_TO_PERSON_ID,
                DESTINATION_TYPE_CODE,
                DISTRIBUTION_NUM,
                ENCUMBERED_FLAG,
                EXPENDITURE_ITEM_DATE,
                EXPENDITURE_ORGANIZATION_ID,
                EXPENDITURE_TYPE,
                GL_CANCELLED_DATE,
                GL_CLOSED_DATE,
                LAST_UPDATE_DTTM,
                PO_LINE_LOCATION_ID,
                NONRECOVERABLE_TAX,
                ORG_ID,
                PO_DISTRIBUTION_ID,
                VENDOR_PO_ID,
                VENDOR_PO_LINE_ID,
                PROJECT_ID,
                QUANTITY_BILLED,
                QUANTITY_CANCELLED,
                QUANTITY_DELIVERED,
                QUANTITY_ORDERED,
                RATE,
                SOURCE_SYSTEM_ID,
                TASK_ID,
                AUTHORIZATION_STATUS,
                SET_OF_BOOKS_ID,
                P_SET_OF_BOOKS_ID,
                P_AMOUNT_BILLED,
                P_NONRECOVERABLE_TAX

FROM FDM_TABLES_DB.OA3NF_PO_DISTRIBUTIONS; 


-----------------------------------OA3NF_PO_DISTRIB_DEL----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_PO_DISTRIB_DEL (

                PO_DISTRIBUTION_ID,
                VENDOR_PO_ID,
				SET_OF_BOOKS_ID
)
SELECT
                PO_DISTRIBUTION_ID,
                VENDOR_PO_ID,
			1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_PO_DISTRIB_DEL;  


---------------------------------OA3NF_PO_VENDOR_PO-----------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_PO (
                AUTHORIZATION_STATUS,
                CLOSED_DATE,
                CURRENCY_CODE,
                CURR_CONV_DATE,
                CURR_CONV_RATE,
                CURR_CONV_RATE_TYPE,
                LAST_UPDATE_DTTM,
                NOTE_TO_RECEIVER,
                OA_BLANKET_TOTAL_AMOUNT,
                OA_ORG_ID,
                OA_PO_CLOSURE_STATUS,
                OA_REVISED_DATE,
                OA_VENDOR_CONTACT_ID,
                OA_VENDOR_SITE_ID,
                PO_APPROVED_DATE,
                PURCH_ORDER_DESC,
                PURCH_ORDER_NUMBER,
                VENDOR_ID,
                VENDOR_PO_BILL_TO_ADDRESS_ID,
                VENDOR_PO_CREATED_BY_PARTY_ID,
                VENDOR_PO_CREATE_DATE,
                VENDOR_PO_CREATE_DTTM,
                VENDOR_PO_ID,
                VENDOR_PO_REVISION_NUM,
                VENDOR_PO_SENT_TO_ADDRESS_ID,
                VENDOR_PO_TERM_ID,
                VENDOR_PO_TRANS_MODE_TYPE_CD,
                VENDOR_PO_TYPE_CD,
                VENDOR_SITE_ORG_ID,
                P_BLANKET_TOTAL_AMOUNT,
				SET_OF_BOOKS_ID
)
SELECT

                AUTHORIZATION_STATUS,
                CLOSED_DATE,
                CURRENCY_CODE,
                CURR_CONV_DATE,
                CURR_CONV_RATE,
                CURR_CONV_RATE_TYPE,
                LAST_UPDATE_DTTM,
                NOTE_TO_RECEIVER,
                OA_BLANKET_TOTAL_AMOUNT,
                OA_ORG_ID,
                OA_PO_CLOSURE_STATUS,
                OA_REVISED_DATE,
                OA_VENDOR_CONTACT_ID,
                OA_VENDOR_SITE_ID,
                PO_APPROVED_DATE,
                PURCH_ORDER_DESC,
                PURCH_ORDER_NUMBER,
                VENDOR_ID,
                VENDOR_PO_BILL_TO_ADDRESS_ID,
                VENDOR_PO_CREATED_BY_PARTY_ID,
                VENDOR_PO_CREATE_DATE,
                VENDOR_PO_CREATE_DTTM,
                VENDOR_PO_ID,
                VENDOR_PO_REVISION_NUM,
                VENDOR_PO_SENT_TO_ADDRESS_ID,
                VENDOR_PO_TERM_ID,
                VENDOR_PO_TRANS_MODE_TYPE_CD,
                VENDOR_PO_TYPE_CD,
                VENDOR_SITE_ORG_ID,
                P_BLANKET_TOTAL_AMOUNT,
				1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_PO_VENDOR_PO;


--------------------------OA3NF_PO_VENDOR_PO_LINE-----------------------------------------------




INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_PO_LINE (

                AUTHORIZATION_STATUS,
                FUNC_CURR_UNIT_PRICE,
                LAST_UPDATE_DTTM,
                OA_ORG_ID,
                OA_PO_LINE_CLOSURE_STATUS,
                OA_PO_LINE_TRANS_REASON_CODE,
                OA_VENDOR_PO_LINE_TYPE_ID,
                OA_VENDOR_PRODUCT_NUM,
                PO_LINE_CANCEL_DATE,
                PO_LINE_CANCEL_FLAG,
                PO_LINE_CANCEL_REASON,
                PO_LINE_CLOSED_DATE,
                PO_LINE_CLOSED_FLAG,
                PO_LINE_CREATED_BY,
                VENDOR_PO_ID,
                VENDOR_PO_LINE_BUYER_PARTY_ID,
                VENDOR_PO_LINE_CONTRACT_ID,
                VENDOR_PO_LINE_CREATE_DTTM,
                VENDOR_PO_LINE_DESC,
                VENDOR_PO_LINE_ID,
                VENDOR_PO_LINE_ITEM_ID,
                VENDOR_PO_LINE_NUM,
                VENDOR_PO_LINE_TAXABLE_IND,
                VENDOR_PO_LINE_UNIT_PRICE,
                VENDOR_PO_LN_PRICE_CURRENCY_CD,
                VENDOR_PO_LN_PURCHASE_AMT,
                VENDOR_PO_LN_PURCHASE_UNIT_QTY,
                VENDOR_PO_LN_PURCHASE_UOM_CD,
                P_CURR_UNIT_PRICE,
                P_VENDOR_PO_LINE_UNIT_PRICE,
                P_VENDOR_PO_LN_PURCHASE_AMT,
                OA_PO_LINE_AMOUNT,
				SET_OF_BOOKS_ID
)
SELECT
                AUTHORIZATION_STATUS,
                FUNC_CURR_UNIT_PRICE,
                LAST_UPDATE_DTTM,
                OA_ORG_ID,
                OA_PO_LINE_CLOSURE_STATUS,
                OA_PO_LINE_TRANS_REASON_CODE,
                OA_VENDOR_PO_LINE_TYPE_ID,
                OA_VENDOR_PRODUCT_NUM,
                PO_LINE_CANCEL_DATE,
                PO_LINE_CANCEL_FLAG,
                PO_LINE_CANCEL_REASON,
                PO_LINE_CLOSED_DATE,
                PO_LINE_CLOSED_FLAG,
                PO_LINE_CREATED_BY,
                VENDOR_PO_ID,
                VENDOR_PO_LINE_BUYER_PARTY_ID,
                VENDOR_PO_LINE_CONTRACT_ID,
                VENDOR_PO_LINE_CREATE_DTTM,
                VENDOR_PO_LINE_DESC,
                VENDOR_PO_LINE_ID,
                VENDOR_PO_LINE_ITEM_ID,
                VENDOR_PO_LINE_NUM,
                VENDOR_PO_LINE_TAXABLE_IND,
                VENDOR_PO_LINE_UNIT_PRICE,
                VENDOR_PO_LN_PRICE_CURRENCY_CD,
                VENDOR_PO_LN_PURCHASE_AMT,
                VENDOR_PO_LN_PURCHASE_UNIT_QTY,
                VENDOR_PO_LN_PURCHASE_UOM_CD,
                P_CURR_UNIT_PRICE,
                P_VENDOR_PO_LINE_UNIT_PRICE,
                P_VENDOR_PO_LN_PURCHASE_AMT,
                OA_PO_LINE_AMOUNT,
				1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_PO_VENDOR_PO_LINE;

----------------------------------------OA3NF_AUTHRZR_S------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AUTHRZR_S(

EMPLOYEE_ID,
OBJECT_ID,
SEQUENCE_NUM,
SET_OF_BOOKS_ID)
SELECT 
EMPLOYEE_ID,
OBJECT_ID,
SEQUENCE_NUM,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AUTHRZR_S;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC2_AP_HIST_LOAD_DW2 AS (


----------------------------OA3NF_AP_OA_EXP_RPT_HDR-----------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_HDR
(
REPORT_HEADER_ID,
SET_OF_BOOKS_ID,
AMT_DUE_CCARD_COMPANY,
AMT_DUE_EMPLOYEE,
WEEK_END_DATE,
EMPLOYEE_ID,
AP_INVOICE_ID,
VENDOR_ID,
REPORT_DESCRIPTION,
REPORT_NUM,
REPORT_TOTAL,
VOUCHER_NUM,
ORG_ID,
VENDOR_SITE_ID,
LAST_UPDATE_DTTM,
ORG_VEND_SITE_ID
)
SELECT
REPORT_HEADER_ID,
1002 AS SET_OF_BOOKS_ID,
AMT_DUE_CCARD_COMPANY,
AMT_DUE_EMPLOYEE,
WEEK_END_DATE,
EMPLOYEE_ID,
AP_INVOICE_ID,
VENDOR_ID,
REPORT_DESCRIPTION,
REPORT_NUM,
REPORT_TOTAL,
VOUCHER_NUM,
ORG_ID,
VENDOR_SITE_ID,
LAST_UPDATE_DTTM,
ORG_VEND_SITE_ID
FROM FDM_TABLES_DB.OA3NF_AP_OA_EXP_RPT_HDR;




------------------------------------OA3NF_AP_OA_HOLD_STATUS------------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS
(
AP_HOLD_STATUS_ID,
SET_OF_BOOKS_ID,
AP_HOLD_STATUS
)
SELECT
AP_HOLD_STATUS_ID,
1002 AS SET_OF_BOOKS_ID,
AP_HOLD_STATUS
FROM FDM_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS;



---------------------------------------OA3NF_AP_OA_GL_TRANSFER-----------------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER
(
AP_GL_TRANSFER_CODE,
AP_GL_TRANSFER_DESC,
AP_GL_TRANSFER_CD,
SET_OF_BOOKS_ID
)
SELECT
AP_GL_TRANSFER_CODE,
AP_GL_TRANSFER_DESC,
AP_GL_TRANSFER_CD,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER;




-------------------------------------OA3NF_AP_OA_DAYS_HELD----------------------------------------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD
(
AP_DAYS_HELD,
SET_OF_BOOKS_ID,
AP_DAYS_HELD_DESC,
AP_DAYS_HELD_ID,
AP_DAYS_HELD_SEQ_NUM
)
SELECT
AP_DAYS_HELD,
1002 AS SET_OF_BOOKS_ID,
AP_DAYS_HELD_DESC,
AP_DAYS_HELD_ID,
AP_DAYS_HELD_SEQ_NUM
FROM FDM_TABLES_DB.OA3NF_AP_OA_DAYS_HELD;





--------------------------------------OA3NF_AP_OA_DAYS_ON_HOLD-----------------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD
(
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
SET_OF_BOOKS_ID,
AP_DAYS_ON_HOLD_SEQ_NUM
)
SELECT
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
1002 AS SET_OF_BOOKS_ID,
AP_DAYS_ON_HOLD_SEQ_NUM
FROM FDM_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD;





--------------------------------------OA3NF_AP_TERMS_TL--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_TERMS_TL
(
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE_CATEGORY,
CREATED_BY,
CREATION_DATE,
DESCRIPTION,
DUE_CUTOFF_DAY,
ENABLED_FLAG,
END_DATE_ACTIVE,
LANGUAGE_,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
NAME,
RANK_,
SOURCE_LANG,
START_DATE_ACTIVE,
TERM_ID,
TYPE_,
SET_OF_BOOKS_ID
)
SELECT
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE_CATEGORY,
CREATED_BY,
CREATION_DATE,
DESCRIPTION,
DUE_CUTOFF_DAY,
ENABLED_FLAG,
END_DATE_ACTIVE,
LANGUAGE_,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
NAME,
RANK_,
SOURCE_LANG,
START_DATE_ACTIVE,
TERM_ID,
TYPE_,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_TERMS_TL;




--------------------------------------OA3NF_AP_PYMNT_TERM_TYPE----------------------------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_TERM_TYPE
(
PAYMENT_TERM_TYPE_DESC,
PAYMENT_TERM_TYPE_CD,
SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
OA_NAME,
LANGUAGE_CD,
PAYMENT_TERM_TYPE_END_DTTM,
PAYMENT_TERM_TYPE_START_DTTM
)
SELECT
PAYMENT_TERM_TYPE_DESC,
PAYMENT_TERM_TYPE_CD,
1002 AS SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
OA_NAME,
LANGUAGE_CD,
PAYMENT_TERM_TYPE_END_DTTM,
PAYMENT_TERM_TYPE_START_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_PYMNT_TERM_TYPE;




--------------------------------------OA3NF_AP_OA_ER_ITEM_TYPE--------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_ER_ITEM_TYPE
(
PARAMETER_ID,
SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
PROMPT
)
SELECT
PARAMETER_ID,
1002 AS SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
PROMPT
FROM FDM_TABLES_DB.OA3NF_AP_OA_ER_ITEM_TYPE;




--------------------------------------OA3NF_AP_OA_HOLD_CODE--------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_HOLD_CODE
(
DESCRIPTION,
HOLD_LOOKUP_CODE,
SET_OF_BOOKS_ID,
HOLD_TYPE
)
SELECT
DESCRIPTION,
HOLD_LOOKUP_CODE,
1002 AS SET_OF_BOOKS_ID,
HOLD_TYPE
FROM FDM_TABLES_DB.OA3NF_AP_OA_HOLD_CODE;




--------------------------------------OA3NF_AP_OA_INV_HOLD--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
(
AP_INVOICE_ID,
SET_OF_BOOKS_ID,
HOLD_LOOKUP_CODE,
LINE_LOCATION_ID,
AP_HOLD_DATE,
HELD_BY,
HOLD_REASON,
RELEASE_LOOKUP_CODE,
RELEASE_REASON,
LAST_UPDATED_BY,
LAST_UPDATE_DTTM,
PO_NUMBER,
AP_HOLD_REL_DATE,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_HELD_ID,
AP_HOLD_STATUS_ID,
LAST_UPDATE_DATE,
AP_HOLD_REL_BY_ID
)
SELECT
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID,
HOLD_LOOKUP_CODE,
LINE_LOCATION_ID,
AP_HOLD_DATE,
HELD_BY,
HOLD_REASON,
RELEASE_LOOKUP_CODE,
RELEASE_REASON,
LAST_UPDATED_BY,
LAST_UPDATE_DTTM,
PO_NUMBER,
AP_HOLD_REL_DATE,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_HELD_ID,
AP_HOLD_STATUS_ID,
LAST_UPDATE_DATE,
AP_HOLD_REL_BY_ID
FROM FDM_TABLES_DB.OA3NF_AP_OA_INV_HOLD;




--------------------------------------OA3NF_AP_OA_BANK_BRANCH--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_BANK_BRANCH
(
BANK_BRANCH_PARTY_ID,
SET_OF_BOOKS_ID,
BANK_BRANCH_NAME,
BANK_NUM,
BANK_NUMBER,
BANK_NAME,
BANK_BRANCH_TYPE,
INSTITUTION_TYPE,
LAST_UPDATE_DTTM,
ADDRESS_LINES_ALT,
BANK_NAME_ALT,
BANK_BRANCH_NAME_ALT,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
CONTACT_FIRST_NAME,
CONTACT_LAST_NAME,
CONTACT_MIDDLE_NAME,
PHONE,
CONTACT_PREFIX,
CONTACT_TITLE,
COUNTRY,
CREATION_DATE,
ZIP,
STATE,
CONTACT_AREA_CODE,
CONTACT_PHONE,
BRANCH_CONTACT_AREA_CODE,
EFT_SWIFT_CODE,
END_DATE
)
SELECT
BANK_BRANCH_PARTY_ID,
1002 AS SET_OF_BOOKS_ID,
BANK_BRANCH_NAME,
BANK_NUM,
BANK_NUMBER,
BANK_NAME,
BANK_BRANCH_TYPE,
INSTITUTION_TYPE,
LAST_UPDATE_DTTM,
ADDRESS_LINES_ALT,
BANK_NAME_ALT,
BANK_BRANCH_NAME_ALT,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
CONTACT_FIRST_NAME,
CONTACT_LAST_NAME,
CONTACT_MIDDLE_NAME,
PHONE,
CONTACT_PREFIX,
CONTACT_TITLE,
COUNTRY,
CREATION_DATE,
ZIP,
STATE,
CONTACT_AREA_CODE,
CONTACT_PHONE,
BRANCH_CONTACT_AREA_CODE,
EFT_SWIFT_CODE,
END_DATE
FROM FDM_TABLES_DB.OA3NF_AP_OA_BANK_BRANCH;



--------------------------------------OA3NF_AP_OA_CHECK_STOCK--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_CHECK_STOCK
(
CHECK_STOCK_ID,
SET_OF_BOOKS_ID,
NAME,
CHECK_FORMAT_NAME,
DISBURSEMENT_TYPE,
PAYMENT_ACCOUNT_ID,
ORG_ID,
LAST_UPDATE_DTTM
)
SELECT
CHECK_STOCK_ID,
1002 AS SET_OF_BOOKS_ID,
NAME,
CHECK_FORMAT_NAME,
DISBURSEMENT_TYPE,
PAYMENT_ACCOUNT_ID,
ORG_ID,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_OA_CHECK_STOCK;





--------------------------------------OA3NF_AP_PAYMENT_ACCOUNT--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_ACCOUNT
(
PAYMENT_ACCOUNT_ID,
PAYMENT_ACCOUNT_NUM,
PAYMENT_ACCOUNT_NAME,
PAYMENT_ACCOUNT_TYPE_CD,
PAYMENT_ACCOUNT_CURRENCY_CD,
BANK_BRANCH_PARTY_ID,
OA_DESCRIPTION,
OA_ACCOUNT_TYPE,
OA_SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
INACTIVE_DATE,
MAX_CHECK_AMOUNT,
MIN_CHECK_AMOUNT,
MULTI_CURRENCY_FLAG,
ZERO_AMOUNTS_ALLOWED,
BANK_ACCOUNT_NAME_ALT,
BANK_CODE,
POSITIVE_PAYEE_INDICATOR,
ATTRIBUTE_CATEGORY,
INACTIVE_FLAG,
IBAN_NUMBER,
ALLOW_MULTI_ASSIGNMENTS_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4
)
SELECT
PAYMENT_ACCOUNT_ID,
PAYMENT_ACCOUNT_NUM,
PAYMENT_ACCOUNT_NAME,
PAYMENT_ACCOUNT_TYPE_CD,
PAYMENT_ACCOUNT_CURRENCY_CD,
BANK_BRANCH_PARTY_ID,
OA_DESCRIPTION,
OA_ACCOUNT_TYPE,
OA_SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
INACTIVE_DATE,
MAX_CHECK_AMOUNT,
MIN_CHECK_AMOUNT,
MULTI_CURRENCY_FLAG,
ZERO_AMOUNTS_ALLOWED,
BANK_ACCOUNT_NAME_ALT,
BANK_CODE,
POSITIVE_PAYEE_INDICATOR,
ATTRIBUTE_CATEGORY,
INACTIVE_FLAG,
IBAN_NUMBER,
ALLOW_MULTI_ASSIGNMENTS_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4
FROM FDM_TABLES_DB.OA3NF_AP_PAYMENT_ACCOUNT;






---------------------------------------------OA3NF_AP_CHECK-------------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_CHECK
(
PAYMENT_ACCOUNT_ID,
CHECK_ID,
CHECK_AMT,
CHECK_NUM,
SET_OF_BOOKS_ID,
CHECK_CLEARED_DTTM,
CHECK_CREATE_DTTM,
LAST_UPDATE_DTTM,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
BANK_ACCOUNT_NUM,
CHECK_CREATION_DATE,
CHECK_VOUCHER_NUMBER,
CITY,
CLEARED_AMOUNT,
COUNTRY,
FUTURE_PAY_DUE_DATE,
POSTAL_CODE,
RELEASED_AT,
RELEASED_DATE,
STATE,
STATUS_LOOKUP_CODE,
STOPPED_AT,
STOPPED_BY,
TREASURY_PAY_DATE,
TREASURY_PAY_NUMBER,
VENDOR_BANK_ACCOUNT_TYPE,
STOPPED_DATE,
VENDOR_BANK_ACCOUNT_NUMBER,
VENDOR_BANK_NUMBER,
VENDOR_SITE_CODE,
VOID_DATE,
PAYMENT_TYPE_FLAG,
PAYMENT_DOCUMENT_NAME,
STOPPED_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
VOID_FLAG,
CHECKRUN_ID,
CHECKRUN_NAME,
VENDOR_ID,
VENDOR_NAME
)
SELECT
PAYMENT_ACCOUNT_ID,
CHECK_ID,
CHECK_AMT,
CHECK_NUM,
1002 AS SET_OF_BOOKS_ID,
CHECK_CLEARED_DTTM,
CHECK_CREATE_DTTM,
LAST_UPDATE_DTTM,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
BANK_ACCOUNT_NUM,
CHECK_CREATION_DATE,
CHECK_VOUCHER_NUMBER,
CITY,
CLEARED_AMOUNT,
COUNTRY,
FUTURE_PAY_DUE_DATE,
POSTAL_CODE,
RELEASED_AT,
RELEASED_DATE,
STATE,
STATUS_LOOKUP_CODE,
STOPPED_AT,
STOPPED_BY,
TREASURY_PAY_DATE,
TREASURY_PAY_NUMBER,
VENDOR_BANK_ACCOUNT_TYPE,
STOPPED_DATE,
VENDOR_BANK_ACCOUNT_NUMBER,
VENDOR_BANK_NUMBER,
VENDOR_SITE_CODE,
VOID_DATE,
PAYMENT_TYPE_FLAG,
PAYMENT_DOCUMENT_NAME,
STOPPED_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
VOID_FLAG,
CHECKRUN_ID,
CHECKRUN_NAME,
VENDOR_ID,
VENDOR_NAME
FROM FDM_TABLES_DB.OA3NF_AP_CHECK;






--------------------------------------OA3NF_AP_CHECK_CBS--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_CHECK_CBS
(
PAYMENT_ACCOUNT_ID,
CHECK_ID,
CHECK_AMT,
CHECK_NUM,
CHECK_CLEARED_DTTM,
CHECK_CREATE_DTTM,
LAST_UPDATE_DTTM,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
BANK_ACCOUNT_NUM,
CHECK_CREATION_DATE,
CHECK_VOUCHER_NUMBER,
CITY,
CLEARED_AMOUNT,
COUNTRY,
FUTURE_PAY_DUE_DATE,
POSTAL_CODE,
RELEASED_AT,
RELEASED_DATE,
STATE,
STATUS_LOOKUP_CODE,
STOPPED_AT,
STOPPED_BY,
TREASURY_PAY_DATE,
TREASURY_PAY_NUMBER,
VENDOR_BANK_ACCOUNT_TYPE,
STOPPED_DATE,
VENDOR_BANK_ACCOUNT_NUMBER,
VENDOR_BANK_NUMBER,
VENDOR_SITE_CODE,
VOID_DATE,
PAYMENT_TYPE_FLAG,
PAYMENT_DOCUMENT_NAME,
STOPPED_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
VOID_FLAG,
CHECKRUN_ID,
CHECKRUN_NAME,
VENDOR_ID,
VENDOR_NAME,
SET_OF_BOOKS_ID
)
SELECT
PAYMENT_ACCOUNT_ID,
CHECK_ID,
CHECK_AMT,
CHECK_NUM,
CHECK_CLEARED_DTTM,
CHECK_CREATE_DTTM,
LAST_UPDATE_DTTM,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
BANK_ACCOUNT_NUM,
CHECK_CREATION_DATE,
CHECK_VOUCHER_NUMBER,
CITY,
CLEARED_AMOUNT,
COUNTRY,
FUTURE_PAY_DUE_DATE,
POSTAL_CODE,
RELEASED_AT,
RELEASED_DATE,
STATE,
STATUS_LOOKUP_CODE,
STOPPED_AT,
STOPPED_BY,
TREASURY_PAY_DATE,
TREASURY_PAY_NUMBER,
VENDOR_BANK_ACCOUNT_TYPE,
STOPPED_DATE,
VENDOR_BANK_ACCOUNT_NUMBER,
VENDOR_BANK_NUMBER,
VENDOR_SITE_CODE,
VOID_DATE,
PAYMENT_TYPE_FLAG,
PAYMENT_DOCUMENT_NAME,
STOPPED_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
VOID_FLAG,
CHECKRUN_ID,
CHECKRUN_NAME,
VENDOR_ID,
VENDOR_NAME,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_CHECK_CBS;




--------------------------------------OA3NF_AP_PAYMENT--------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT
(
PAYMENT_ID,
PAYMENT_CURRENCY_CD,
PAYMENT_TRANSACTION_AMT,
PAYMENT_LOCAL_AMT,
PAYMENT_ACCOUNT_ID,
PAYMENT_METHOD_TYPE_CD,
PAYMENT_TYPE_CD,
PAYMENT_COMMENTS_TXT,
PAYMENT_PARTY_ID,
OA_EXCHANGE_RATE,
OA_BANK_ACCOUNT_NAME,
OA_VOID_DATE,
OA_ORG_ID,
OA_VENDOR_ID,
OA_VENDOR_SITE_ID,
OA_CHECKRUN_NAME,
OA_CHECK_NUM,
OA_CHECK_DATE,
OA_CHECK_STOCK_ID,
OA_EXCHANGE_DATE,
OA_CLEARED_DATE,
LAST_UPDATE_DTTM,
ORG_VEND_SITE_ID,
OA_ORG_CRNAME_ID,
OA_SET_OF_BOOKS_ID,
P_SET_OF_BOOKS_ID,
P_BASE_AMOUNT,
OA_CHECK_DTTM
)
SELECT
PAYMENT.PAYMENT_ID,
PAYMENT.PAYMENT_CURRENCY_CD,
PAYMENT.PAYMENT_TRANSACTION_AMT,
PAYMENT.PAYMENT_LOCAL_AMT,
PAYM
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC2_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC2_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, FUTURE_KEY,VENDOR_KEY, GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC2_GL_HIST_LOAD_DW2 AS (

--------------------------OA3NF_FND_SECURITY_GRPS-------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FND_SECURITY_GRPS(
CREATED_BY,
SET_OF_BOOKS_ID,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
SECURITY_GROUP_ID,
SECURITY_GROUP_KEY)
SELECT 
CREATED_BY,
1002 AS SET_OF_BOOKS_ID,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
SECURITY_GROUP_ID,
SECURITY_GROUP_KEY
FROM FDM_TABLES_DB.OA3NF_FND_SECURITY_GRPS;

----------------------------OA3NF_SET_OF_BOOKS----------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_SET_OF_BOOKS
 (
OA_ACCOUNTED_PERIOD_TYPE,
COA_STRUCTURE_ID,
CURRENCY_CD,
LAST_UPDATE_DTTM,
OA_PERIOD_SET_NAME,
SET_OF_BOOKS_DESC,
SET_OF_BOOKS_ID,
SET_OF_BOOKS_NAME,
OA_MRC_TYPE_CD,
OA_SHORT_NAME

)
SELECT 
OA_ACCOUNTED_PERIOD_TYPE,
COA_STRUCTURE_ID,
CURRENCY_CD,
LAST_UPDATE_DTTM,
OA_PERIOD_SET_NAME,
SET_OF_BOOKS_DESC,
SET_OF_BOOKS_ID,
SET_OF_BOOKS_NAME,
OA_MRC_TYPE_CD,
OA_SHORT_NAME
FROM FDM_TABLES_DB.OA3NF_SET_OF_BOOKS;



---------------------------------OA3NF_OA_OPERATING_UNITS--------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_OA_OPERATING_UNITS(

	BUSINESS_GROUP_ID,
	OPERATING_UNIT_ID,
	OPERATING_UNIT,
	LEGAL_ENTITY_ID,
	SET_OF_BOOKS_ID
)

SELECT
	BUSINESS_GROUP_ID,
	OPERATING_UNIT_ID,
	OPERATING_UNIT,
	LEGAL_ENTITY_ID,
	1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_OA_OPERATING_UNITS;

--------------------------------------OA3NF_COA_SEGMENT-------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_COA_SEGMENT
 (
COA_STRUCTURE_ID,
APPLICATION_COLUMN_NAME,
COA_SEGMENT_NAME,
COA_SEGMENT_ID,
 SET_OF_BOOKS_ID
)
SELECT 
COA_STRUCTURE_ID,
APPLICATION_COLUMN_NAME,
COA_SEGMENT_NAME,
COA_SEGMENT_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_COA_SEGMENT;

----------------------------------------OA3NF_GL_FIN_PLAN-----------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_FIN_PLAN
 (
FINANCIAL_PLAN_ID,
LAST_UPDATE_DTTM,
FINANCIAL_PLAN_NAME,
FINANCIAL_PLAN_REVISION_NUM,
FINANCIAL_PLAN_STATUS_CD,
FINANCIAL_PLAN_DESC,
SET_OF_BOOKS_ID
)
SELECT 
FINANCIAL_PLAN_ID,
LAST_UPDATE_DTTM,
FINANCIAL_PLAN_NAME,
FINANCIAL_PLAN_REVISION_NUM,
FINANCIAL_PLAN_STATUS_CD,
FINANCIAL_PLAN_DESC,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_GL_FIN_PLAN;


----------------------------------------OA3NF_FLX_VAL_RL_VL-----------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RL_VL
 (
FLEX_VALUE_RULE_ID,
FLEX_VALUE_RULE_NAME,
FLEX_VALUE_SET_ID,
ERROR_MESSAGE,
DESCRIPTION,
SET_OF_BOOKS_ID
)
SELECT 
FLEX_VALUE_RULE_ID,
FLEX_VALUE_RULE_NAME,
FLEX_VALUE_SET_ID,
ERROR_MESSAGE,
DESCRIPTION,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_FLX_VAL_RL_VL;

-----------------------------------------OA3NF_FLX_VAL_RUL_VL------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_VL(
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	ERROR_MESSAGE,
	FLEX_VALUE_RULE_ID,
	SET_OF_BOOKS_ID,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
	)
	
SELECT 
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	ERROR_MESSAGE,
	FLEX_VALUE_RULE_ID,
	1002 AS SET_OF_BOOKS_ID,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
FROM FDM_TABLES_DB.OA3NF_FLX_VAL_RUL_VL;	

------------------------------------------OA3NF_GL_OA_JE_SOURCES-----------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_OA_JE_SOURCES
 (
JE_SOURCE_NAME,
LANGUAGE_CD,
LAST_UPDATE_DTTM,
USER_JE_SOURCE_NAME,
SET_OF_BOOKS_ID
)
SELECT 
JE_SOURCE_NAME,
LANGUAGE_CD,
LAST_UPDATE_DTTM,
USER_JE_SOURCE_NAME,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_GL_OA_JE_SOURCES;

------------------------------------------OA3NF_FLX_VAL_RUL_UG-------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_UG(

	APPLICATION_ID,
	CREATED_BY,
	CREATION_DATE,
	FLEX_VALUE_RULE_ID,
	SET_OF_BOOKS_ID,
	FLEX_VALUE_SET_ID,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	PARENT_FLEX_VALUE_HIGH,
	PARENT_FLEX_VALUE_LOW,
	RESPONSIBILITY_ID
)

SELECT  
	APPLICATION_ID,
	CREATED_BY,
	CREATION_DATE,
	FLEX_VALUE_RULE_ID,
	1002 AS  SET_OF_BOOKS_ID,
	FLEX_VALUE_SET_ID,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	PARENT_FLEX_VALUE_HIGH,
	PARENT_FLEX_VALUE_LOW,
	RESPONSIBILITY_ID  
FROM FDM_TABLES_DB.OA3NF_FLX_VAL_RUL_UG;

---------------------------------OA3NF_COA_STRUCTURE-----------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_COA_STRUCTURE
 (
COA_STRUCTURE_TYPE,
COA_STRUCTURE_ID,
COA_STRUCTURE_NAME,
 SET_OF_BOOKS_ID

)
SELECT 
COA_STRUCTURE_TYPE,
COA_STRUCTURE_ID,
COA_STRUCTURE_NAME,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_COA_STRUCTURE;


----------------------------------------OA3NF_GL_OA_JE_CATEGORY---------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_OA_JE_CATEGORY
 (
JE_CATEGORY_CD,
LANGUAGE_CD,
USER_JE_CATEGORY_NAME,
LAST_UPDATE_DTTM,
DESCRIPTION,
SET_OF_BOOKS_ID
)
SELECT 
JE_CATEGORY_CD,
LANGUAGE_CD,
USER_JE_CATEGORY_NAME,
LAST_UPDATE_DTTM,
DESCRIPTION,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_GL_OA_JE_CATEGORY;


------------------------------------------------------OA3NF_CURRENCY--------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_CURRENCY
 (
CURRENCY_CD,
LANGUAGE_CD,
CURRENCY_NAME,
LAST_UPDATE_DTTM,
CURRENCY_DESC,
SET_OF_BOOKS_ID

)
SELECT 
CURRENCY_CD,
LANGUAGE_CD,
CURRENCY_NAME,
LAST_UPDATE_DTTM,
CURRENCY_DESC,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_CURRENCY;

---------------------------------------------------------------OA3NF_FND_APPL_TL--------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FND_APPL_TL(

	APPLICATION_ID,
	SET_OF_BOOKS_ID,
	APPLICATION_NAME,
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
)

SELECT
	APPLICATION_ID,
	1002  AS SET_OF_BOOKS_ID,
	APPLICATION_NAME,
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
FROM FDM_TABLES_DB.OA3NF_FND_APPL_TL;

----------------------------------------------------------OA3NF_GL_SUMM_TEMPLATES-------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_SUMM_TEMPLATES
 (
TEMPLATE_ID,
SET_OF_BOOKS_ID,
STATUS,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
TEMPLATE_NAME,
CONCATENATED_DESCRIPTION,
ACCOUNT_CATEGORY_CODE,
FUNDS_CHECK_LEVEL_CODE,
MAX_CODE_COMBINATION_ID,
START_ACTUALS_PERIOD_NAME,
AMOUNT_TYPE,
BOUNDARY_CODE,
CREATED_BY,
CREATION_DATE,
FCS_FLASH_SUMMARY_GRP,
FCS_FLASH_DTL_GRP,
DR_CR_CODE,
LAST_UPDATE_LOGIN,
FUNDING_BUDGET_VERSION_ID,
SEGMENT1_TYPE,
SEGMENT2_TYPE,
SEGMENT3_TYPE,
SEGMENT4_TYPE,
SEGMENT5_TYPE,
SEGMENT6_TYPE,
SEGMENT7_TYPE,
SEGMENT8_TYPE,
SEGMENT9_TYPE,
SEGMENT10_TYPE,
SEGMENT11_TYPE,
SEGMENT12_TYPE,
SEGMENT13_TYPE,
SEGMENT14_TYPE,
SEGMENT15_TYPE,
SEGMENT16_TYPE,
SEGMENT17_TYPE,
SEGMENT18_TYPE,
SEGMENT19_TYPE,
SEGMENT20_TYPE,
SEGMENT21_TYPE,
SEGMENT22_TYPE,
SEGMENT23_TYPE,
SEGMENT24_TYPE,
SEGMENT25_TYPE,
SEGMENT26_TYPE,
SEGMENT27_TYPE,
SEGMENT28_TYPE,
SEGMENT29_TYPE,
SEGMENT30_TYPE,
DESCRIPTION,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
CONTEXT

)
SELECT 
TEMPLATE_ID,
SET_OF_BOOKS_ID,
STATUS,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
TEMPLATE_NAME,
CONCATENATED_DESCRIPTION,
ACCOUNT_CATEGORY_CODE,
FUNDS_CHECK_LEVEL_CODE,
MAX_CODE_COMBINATION_ID,
START_ACTUALS_PERIOD_NAME,
AMOUNT_TYPE,
BOUNDARY_CODE,
CREATED_BY,
CREATION_DATE,
FCS_FLASH_SUMMARY_GRP,
FCS_FLASH_DTL_GRP,
DR_CR_CODE,
LAST_UPDATE_LOGIN,
FUNDING_BUDGET_VERSION_ID,
SEGMENT1_TYPE,
SEGMENT2_TYPE,
SEGMENT3_TYPE,
SEGMENT4_TYPE,
SEGMENT5_TYPE,
SEGMENT6_TYPE,
SEGMENT7_TYPE,
SEGMENT8_TYPE,
SEGMENT9_TYPE,
SEGMENT10_TYPE,
SEGMENT11_TYPE,
SEGMENT12_TYPE,
SEGMENT13_TYPE,
SEGMENT14_TYPE,
SEGMENT15_TYPE,
SEGMENT16_TYPE,
SEGMENT17_TYPE,
SEGMENT18_TYPE,
SEGMENT19_TYPE,
SEGMENT20_TYPE,
SEGMENT21_TYPE,
SEGMENT22_TYPE,
SEGMENT23_TYPE,
SEGMENT24_TYPE,
SEGMENT25_TYPE,
SEGMENT26_TYPE,
SEGMENT27_TYPE,
SEGMENT28_TYPE,
SEGMENT29_TYPE,
SEGMENT30_TYPE,
DESCRIPTION,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
CONTEXT
FROM FDM_TABLES_DB.OA3NF_GL_SUMM_TEMPLATES;

-------------------------------------OA3NF_PO_VENDOR_CONTACT---------------------------------------------------------------

                    
INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_CONTACT (

                ALTERNATE_PHONE_AREA_CODE,
                ALTERNATE_PHONE_NUMNER,
                ALTERNATE_CONTACT_NAME,
                AREA_CODE,
                CONTACT_CREATION_DATE,
                DEPARTMENT,
                EMAIL_ADDRESS,
                FAX_NUMBER,
                FAX_AREA_CODE,
                FIRST_NAME,
                INACTIVE_DATE,
                LAST_NAME,
                MAIL_STOP,
                MIDDLE_NAME,
                PHONE,
                PREFIX,
                URL_ADDRESS,
                INACTIVE_FLAG,
                TITLE_CODE,
                VENDOR_SITE_ID,
				SET_OF_BOOKS_ID
)
SELECT
                ALTERNATE_PHONE_AREA_CODE,
                ALTERNATE_PHONE_NUMNER,
                ALTERNATE_CONTACT_NAME,
                AREA_CODE,
                CONTACT_CREATION_DATE,
                DEPARTMENT,
                EMAIL_ADDRESS,
                FAX_NUMBER,
                FAX_AREA_CODE,
                FIRST_NAME,
                INACTIVE_DATE,
                LAST_NAME,
                MAIL_STOP,
                MIDDLE_NAME,
                PHONE,
                PREFIX,
                URL_ADDRESS,
                INACTIVE_FLAG,
                TITLE_CODE,
                VENDOR_SITE_ID,
				1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_PO_VENDOR_CONTACT; 


-----------------------------------------------------------OA3NF_FLX_VAL_RUL_LN------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_LN(
      CREATED_BY, 
      CREATION_DATE ,
      FLEX_VALUE_HIGH, 
      FLEX_VALUE_LOW ,
      FLEX_VALUE_RULE_ID ,
      SET_OF_BOOKS_ID ,
      FLEX_VALUE_SET_ID, 
      INCLUDE_EXCLUDE_INDICATOR ,
      LAST_UPDATED_BY ,
      LAST_UPDATE_DATE ,
      LAST_UPDATE_LOGIN ,
      PARENT_FLEX_VALUE_HIGH ,
      PARENT_FLEX_VALUE_LOW )
	  
 SELECT   
	  CREATED_BY, 
      CREATION_DATE ,
      FLEX_VALUE_HIGH, 
      FLEX_VALUE_LOW ,
      FLEX_VALUE_RULE_ID ,
      1002 AS  SET_OF_BOOKS_ID ,
      FLEX_VALUE_SET_ID, 
      INCLUDE_EXCLUDE_INDICATOR ,
      LAST_UPDATED_BY ,
      LAST_UPDATE_DATE ,
      LAST_UPDATE_LOGIN ,
      PARENT_FLEX_VALUE_HIGH ,
      PARENT_FLEX_VALUE_LOW 
FROM FDM_TABLES_DB.OA3NF_FLX_VAL_RUL_LN;

--------------------------------------------------------------OA3NF_FND_USER--------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_FND_USER(
CREATED_BY,
CREATION_DATE,
CUSTOMER_ID,
DESCRIPTION,
EMAIL_ADDRESS,
EMPLOYEE_ID,
ENCRYPTED_FOUNDATION_PASSWORD,
ENCRYPTED_USER_PASSWORD,
END_DATE,
FAX,
GCN_CODE_COMBINATION_ID,
LAST_LOGON_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
PASSWORD_ACCESSES_LEFT,
PASSWORD_DATE,
PASSWORD_LIFESPAN_ACCESSES,
PASSWORD_LIFESPAN_DAYS,
PERSON_PARTY_ID,
SESSION_NUMBER,
START_DATE,
SUPPLIER_ID,
USER_GUID,
USER_ID,
SET_OF_BOOKS_ID,
USER_NAME,
WEB_PASSWORD)
SELECT 
CREATED_BY,
CREATION_DATE,
CUSTOMER_ID,
DESCRIPTION,
EMAIL_ADDRESS,
EMPLOYEE_ID,
ENCRYPTED_FOUNDATION_PASSWORD,
ENCRYPTED_USER_PASSWORD,
END_DATE,
FAX,
GCN_CODE_COMBINATION_ID,
LAST_LOGON_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
PASSWORD_ACCESSES_LEFT,
PASSWORD_DATE,
PASSWORD_LIFESPAN_ACCESSES,
PASSWORD_LIFESPAN_DAYS,
PERSON_PARTY_ID,
SESSION_NUMBER,
START_DATE,
SUPPLIER_ID,
USER_GUID,
USER_ID,
1002 AS SET_OF_BOOKS_ID,
USER_NAME,
WEB_PASSWORD
FROM FDM_TABLES_DB.OA3NF_FND_USER;



-----------------------------------------------------------OA3NF_USER_LIST------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_USER_LIST(

DESCRIPTION,
EMPLOYEE_ID,
LAST_UPDATE_DTTM,
USER_ID,
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC3_AP_HIST_LOAD_DW2 AS (

-----------------------------------------OA3NF_AP_INVOICE_STATUS-----------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_STATUS
(
AP_INVOICE_ID,
SET_OF_BOOKS_ID,
AP_INVOICE_STATUS_TYPE_CD,
AP_INV_STATUS_ASSIGN_DTTM,
LAST_UPDATE_DTTM
)
SELECT
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID,
AP_INVOICE_STATUS_TYPE_CD,
AP_INV_STATUS_ASSIGN_DTTM,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_INVOICE_STATUS;






-----------------------------------------OA3NF_AP_INVOICE_DEL-----------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_DEL
(
AP_INVOICE_ID,
SET_OF_BOOKS_ID
)
SELECT
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_INVOICE_DEL;





-----------------------------------------OA3NF_AP_INVOICE-----------------------------------------





INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE
(
INVOICE_DESCRIPTION_TXT,
INVOICE_CURRENCY_CODE,
INVOICE_DTTM,
AP_INVOICE_ID,
HOST_INVOICE_NUM,
AP_INVOICE_TYPE_CD,
RECURRING_PAYMENT_ID,
OA_SET_OF_BOOKS_ID,
INVOICE_SOURCE_TYPE_CD,
INVOICE_PAYMENT_TERM_CD,
OA_VOUCHER_NUM,
CONSOL_INVOICE_ID,
AP_INV_CHART_OF_ACCOUNT_ID,
OA_ORG_ID,
OA_VENDOR_SITE_ID,
OA_CREATION_DATE,
LOCAL_FREIGHT_AMOUNT,
LOCAL_INVOICE_AMOUNT,
LOCAL_INVOICE_DISC_AMT,
LOCAL_INVOICE_TAX_AMOUNT,
LOCAL_PAID_AMOUNT,
TRX_FREIGHT_AMOUNT,
TRX_INVOICE_AMOUNT,
TRX_INVOICE_DISC_AMT,
TRX_INVOICE_TAX_AMOUNT,
TRX_PAID_AMOUNT,
LAST_UPDATE_DTTM,
CREATED_BY,
REQUESTER_ID,
VENDOR_ID,
INVOICE_DATE,
VENDOR_SITE_ORG_ID,
P_BASE_INVOICE_AMOUNT,
P_SET_OF_BOOKS_ID,
ATTRIBUTE_CATEGORY,
BANK_CODE,
PAYMENT_METHOD,
CHECK_DETAILS,
APPROVAL_DESCRIPTION,
EXCLUSIVE_PAYMENT_FLAG,
PAYMENT_STATUS_FLAG,
APPROVAL_STATUS,
TERMS_DATE,
AMOUNT_APPLICABLE_TO_DISCOUNT,
PAYMENT_AMOUNT_TOTAL,
INVOICE_DISTRIBUTION_TOTAL,
PAY_GROUP_LOOKUP_CODE,
GOODS_RECEIVED_DATE,
INVOICE_RECEIVED_DATE,
PROJECT_ID,
ACCTS_PAY_CODE_COMBINATION_ID,
PA_DEFAULT_DIST_CCID,
AMOUNT_PAID,
AMT_DUE_CCARD_COMPANY,
AMT_DUE_EMPLOYEE,
APPROVAL_ITERATION,
APPROVAL_READY_FLAG,
APPROVED_AMOUNT,
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
AUTHORIZED_BY,
AUTO_TAX_CALC_FLAG,
AWARD_ID,
AWT_FLAG,
AWT_GROUP_ID,
BASE_AMOUNT,
BATCH_ID,
CANCELLED_AMOUNT,
CANCELLED_BY,
CANCELLED_DATE,
CREATION_DATE,
DESCRIPTION,
DISCOUNT_AMOUNT_TAKEN,
DOC_CATEGORY_CODE,
DOC_SEQUENCE_ID,
DOC_SEQUENCE_VALUE,
EARLIEST_SETTLEMENT_DATE,
EXCHANGE_DATE,
EXCHANGE_RATE,
EXCHANGE_RATE_TYPE,
EXPENDITURE_ITEM_DATE,
EXPENDITURE_ORGANIZATION_ID,
EXPENDITURE_TYPE,
FREIGHT_AMOUNT,
GLOBAL_ATTRIBUTE1,
GLOBAL_ATTRIBUTE10,
GLOBAL_ATTRIBUTE11,
GLOBAL_ATTRIBUTE12,
GLOBAL_ATTRIBUTE13,
GLOBAL_ATTRIBUTE14,
GLOBAL_ATTRIBUTE15,
GLOBAL_ATTRIBUTE16,
GLOBAL_ATTRIBUTE17,
GLOBAL_ATTRIBUTE18,
GLOBAL_ATTRIBUTE19,
GLOBAL_ATTRIBUTE2,
GLOBAL_ATTRIBUTE20,
GLOBAL_ATTRIBUTE3,
GLOBAL_ATTRIBUTE4,
GLOBAL_ATTRIBUTE5,
GLOBAL_ATTRIBUTE6,
GLOBAL_ATTRIBUTE7,
GLOBAL_ATTRIBUTE8,
GLOBAL_ATTRIBUTE9,
GLOBAL_ATTRIBUTE_CATEGORY,
GL_DATE,
INVOICE_AMOUNT,
INVOICE_TYPE_LOOKUP_CODE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
MRC_BASE_AMOUNT,
MRC_EXCHANGE_DATE,
MRC_EXCHANGE_RATE,
MRC_EXCHANGE_RATE_TYPE,
ORG_ID,
ORIGINAL_PREPAYMENT_AMOUNT,
PAID_ON_BEHALF_EMPLOYEE_ID,
PAYMENT_CROSS_RATE,
PAYMENT_CROSS_RATE_DATE,
PAYMENT_CROSS_RATE_TYPE,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAY_CURR_INVOICE_AMOUNT,
PA_QUANTITY,
POSTING_STATUS,
PO_HEADER_ID,
PREPAY_FLAG,
PRE_WITHHOLDING_AMOUNT,
PROJECT_ACCOUNTING_CONTEXT,
REFERENCE_1,
REFERENCE_2,
SET_OF_BOOKS_ID,
SOURCE,
TASK_ID,
TAX_AMOUNT,
TEMP_CANCELLED_AMOUNT,
TERMS_ID,
USSGL_TRANSACTION_CODE,
USSGL_TRX_CODE_CONTEXT,
VALIDATED_TAX_AMOUNT,
VALIDATION_REQUEST_ID,
VAT_CODE,
VENDOR_PREPAY_AMOUNT,
VENDOR_SITE_ID,
VOUCHER_NUM,
WFAPPROVAL_STATUS
)
SELECT
INVOICE.INVOICE_DESCRIPTION_TXT,
INVOICE.INVOICE_CURRENCY_CODE,
INVOICE.INVOICE_DTTM,
INVOICE.AP_INVOICE_ID,
INVOICE.HOST_INVOICE_NUM,
INVOICE.AP_INVOICE_TYPE_CD,
INVOICE.RECURRING_PAYMENT_ID,
INVOICE.OA_SET_OF_BOOKS_ID,
INVOICE.INVOICE_SOURCE_TYPE_CD,
INVOICE.INVOICE_PAYMENT_TERM_CD,
INVOICE.OA_VOUCHER_NUM,
INVOICE.CONSOL_INVOICE_ID,
INVOICE.AP_INV_CHART_OF_ACCOUNT_ID,
--INVOICE.OA_ORG_ID,
(CASE 

WHEN VSP.NEW_VENDOR_SITE_ID IS NOT NULL THEN

(CASE INVOICE.OA_ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)
ELSE 
INVOICE.OA_ORG_ID END)

 AS OA_ORG_ID,
--INVOICE.OA_VENDOR_SITE_ID,
COALESCE(VSP.NEW_VENDOR_SITE_ID,INVOICE.OA_VENDOR_SITE_ID) AS OA_VENDOR_SITE_ID,
INVOICE.OA_CREATION_DATE,
INVOICE.LOCAL_FREIGHT_AMOUNT,
INVOICE.LOCAL_INVOICE_AMOUNT,
INVOICE.LOCAL_INVOICE_DISC_AMT,
INVOICE.LOCAL_INVOICE_TAX_AMOUNT,
INVOICE.LOCAL_PAID_AMOUNT,
INVOICE.TRX_FREIGHT_AMOUNT,
INVOICE.TRX_INVOICE_AMOUNT,
INVOICE.TRX_INVOICE_DISC_AMT,
INVOICE.TRX_INVOICE_TAX_AMOUNT,
INVOICE.TRX_PAID_AMOUNT,
INVOICE.LAST_UPDATE_DTTM,
INVOICE.CREATED_BY,
INVOICE.REQUESTER_ID,
--OA3NF_AP_INVOICE.VENDOR_ID,
COALESCE(SRC.NEW_VENDOR_ID,INVOICE.VENDOR_ID) AS VENDOR_ID,
INVOICE.INVOICE_DATE,
--INVOICE.VENDOR_SITE_ORG_ID,
CASE WHEN INVOICE.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID THEN  ((CASE INVOICE.ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)||'-'||TRIM(CAST(SRC.NEW_VENDOR_ID AS INTEGER))||'-'||TRIM(CAST(VSP.NEW_VENDOR_SITE_ID AS INTEGER))) ELSE INVOICE.VENDOR_SITE_ORG_ID END AS VENDOR_SITE_ORG_ID,
INVOICE.P_BASE_INVOICE_AMOUNT,
INVOICE.P_SET_OF_BOOKS_ID,
INVOICE.ATTRIBUTE_CATEGORY,
INVOICE.BANK_CODE,
INVOICE.PAYMENT_METHOD,
INVOICE.CHECK_DETAILS,
INVOICE.APPROVAL_DESCRIPTION,
INVOICE.EXCLUSIVE_PAYMENT_FLAG,
INVOICE.PAYMENT_STATUS_FLAG,
INVOICE.APPROVAL_STATUS,
INVOICE.TERMS_DATE,
INVOICE.AMOUNT_APPLICABLE_TO_DISCOUNT,
INVOICE.PAYMENT_AMOUNT_TOTAL,
INVOICE.INVOICE_DISTRIBUTION_TOTAL,
INVOICE.PAY_GROUP_LOOKUP_CODE,
INVOICE.GOODS_RECEIVED_DATE,
INVOICE.INVOICE_RECEIVED_DATE,
INVOICE.PROJECT_ID,
INVOICE.ACCTS_PAY_CODE_COMBINATION_ID,
INVOICE.PA_DEFAULT_DIST_CCID,
INVOICE.AMOUNT_PAID,
INVOICE.AMT_DUE_CCARD_COMPANY,
INVOICE.AMT_DUE_EMPLOYEE,
INVOICE.APPROVAL_ITERATION,
INVOICE.APPROVAL_READY_FLAG,
INVOICE.APPROVED_AMOUNT,
INVOICE.ATTRIBUTE1,
INVOICE.ATTRIBUTE10,
INVOICE.ATTRIBUTE11,
INVOICE.ATTRIBUTE12,
INVOICE.ATTRIBUTE13,
INVOICE.ATTRIBUTE14,
INVOICE.ATTRIBUTE15,
INVOICE.ATTRIBUTE2,
INVOICE.ATTRIBUTE3,
INVOICE.ATTRIBUTE4,
INVOICE.ATTRIBUTE5,
INVOICE.ATTRIBUTE6,
INVOICE.ATTRIBUTE7,
INVOICE.ATTRIBUTE8,
INVOICE.ATTRIBUTE9,
INVOICE.AUTHORIZED_BY,
INVOICE.AUTO_TAX_CALC_FLAG,
INVOICE.AWARD_ID,
INVOICE.AWT_FLAG,
INVOICE.AWT_GROUP_ID,
INVOICE.BASE_AMOUNT,
INVOICE.BATCH_ID,
INVOICE.CANCELLED_AMOUNT,
INVOICE.CANCELLED_BY,
INVOICE.CANCELLED_DATE,
INVOICE.CREATION_DATE,
INVOICE.DESCRIPTION,
INVOICE.DISCOUNT_AMOUNT_TAKEN,
INVOICE.DOC_CATEGORY_CODE,
INVOICE.DOC_SEQUENCE_ID,
INVOICE.DOC_SEQUENCE_VALUE,
INVOICE.EARLIEST_SETTLEMENT_DATE,
INVOICE.EXCHANGE_DATE,
INVOICE.EXCHANGE_RATE,
INVOICE.EXCHANGE_RATE_TYPE,
INVOICE.EXPENDITURE_ITEM_DATE,
INVOICE.EXPENDITURE_ORGANIZATION_ID,
INVOICE.EXPENDITURE_TYPE,
INVOICE.FREIGHT_AMOUNT,
INVOICE.GLOBAL_ATTRIBUTE1,
INVOICE.GLOBAL_ATTRIBUTE10,
INVOICE.GLOBAL_ATTRIBUTE11,
INVOICE.GLOBAL_ATTRIBUTE12,
INVOICE.GLOBAL_ATTRIBUTE13,
INVOICE.GLOBAL_ATTRIBUTE14,
INVOICE.GLOBAL_ATTRIBUTE15,
INVOICE.GLOBAL_ATTRIBUTE16,
INVOICE.GLOBAL_ATTRIBUTE17,
INVOICE.GLOBAL_ATTRIBUTE18,
INVOICE.GLOBAL_ATTRIBUTE19,
INVOICE.GLOBAL_ATTRIBUTE2,
INVOICE.GLOBAL_ATTRIBUTE20,
INVOICE.GLOBAL_ATTRIBUTE3,
INVOICE.GLOBAL_ATTRIBUTE4,
INVOICE.GLOBAL_ATTRIBUTE5,
INVOICE.GLOBAL_ATTRIBUTE6,
INVOICE.GLOBAL_ATTRIBUTE7,
INVOICE.GLOBAL_ATTRIBUTE8,
INVOICE.GLOBAL_ATTRIBUTE9,
INVOICE.GLOBAL_ATTRIBUTE_CATEGORY,
INVOICE.GL_DATE,
INVOICE.INVOICE_AMOUNT,
INVOICE.INVOICE_TYPE_LOOKUP_CODE,
INVOICE.LAST_UPDATED_BY,
INVOICE.LAST_UPDATE_DATE,
INVOICE.LAST_UPDATE_LOGIN,
INVOICE.MRC_BASE_AMOUNT,
INVOICE.MRC_EXCHANGE_DATE,
INVOICE.MRC_EXCHANGE_RATE,
INVOICE.MRC_EXCHANGE_RATE_TYPE,
--INVOICE.ORG_ID,
(CASE 

WHEN VSP.NEW_VENDOR_SITE_ID IS NOT NULL THEN

(CASE INVOICE.ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)
ELSE 
INVOICE.ORG_ID END)

 AS ORG_ID,
INVOICE.ORIGINAL_PREPAYMENT_AMOUNT,
INVOICE.PAID_ON_BEHALF_EMPLOYEE_ID,
INVOICE.PAYMENT_CROSS_RATE,
INVOICE.PAYMENT_CROSS_RATE_DATE,
INVOICE.PAYMENT_CROSS_RATE_TYPE,
INVOICE.PAYMENT_CURRENCY_CODE,
INVOICE.PAYMENT_METHOD_LOOKUP_CODE,
INVOICE.PAY_CURR_INVOICE_AMOUNT,
INVOICE.PA_QUANTITY,
INVOICE.POSTING_STATUS,
INVOICE.PO_HEADER_ID,
INVOICE.PREPAY_FLAG,
INVOICE.PRE_WITHHOLDING_AMOUNT,
INVOICE.PROJECT_ACCOUNTING_CONTEXT,
INVOICE.REFERENCE_1,
INVOICE.REFERENCE_2,
INVOICE.SET_OF_BOOKS_ID, 
INVOICE.SOURCE,
INVOICE.TASK_ID,
INVOICE.TAX_AMOUNT,
INVOICE.TEMP_CANCELLED_AMOUNT,
INVOICE.TERMS_ID,
INVOICE.USSGL_TRANSACTION_CODE,
INVOICE.USSGL_TRX_CODE_CONTEXT,
INVOICE.VALIDATED_TAX_AMOUNT,
INVOICE.VALIDATION_REQUEST_ID,
INVOICE.VAT_CODE,
INVOICE.VENDOR_PREPAY_AMOUNT,
INVOICE.VENDOR_SITE_ID,
INVOICE.VOUCHER_NUM,
INVOICE.WFAPPROVAL_STATUS
FROM FDM_TABLES_DB.OA3NF_AP_INVOICE INVOICE
LEFT JOIN FDW_STAGE_DB.LOAD_VENDOR_SITE_MAP VSP
ON (INVOICE.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID)
LEFT JOIN (SELECT   
 VO.VENDOR_ID AS OLD_VENDOR_ID,VN.VENDOR_ID AS NEW_VENDOR_ID
FROM FDM_TABLES_DB.OA3NF_VENDOR VO,FDW_TABLES_DB.OA3NF_VENDOR VN,FDW_STAGE_DB.LOAD_VENDOR_MAP M
WHERE (VO.OA_VENDOR_NUMBER = M.OLD_VENDOR_NBR) AND
(VN.OA_VENDOR_NUMBER = M.NEW_VENDOR_NBR)) SRC
ON (INVOICE.VENDOR_ID=SRC.OLD_VENDOR_ID) 
and INVOICE.OA_SET_OF_BOOKS_ID = 1002;




-----------------------------------------OA3NF_AP_INVOICE_LINE-----------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_LINE
(
AP_INVOICE_LINE_DESC,
AP_INVOICE_LINE_NUM,
AP_INVOICE_ID,
AP_INVOICE_LN_MERCHANT_DOC_NUM,
AP_INV_LN_CHART_OF_ACCOUNT_ID,
OA_LINE_TYPE_CODE,
OA_EXPENDITURE_TYPE,
OA_MATCH_STATUS_FLAG,
OA_PERIOD_NAME,
OA_POSTED_FLAG,
OA_ACCOUNTING_DATE,
SOURCE_SYSTEM_ID,
GL_JE_LINE_ID,
OA_SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
AP_INVOICE_LN_AMT_LOCAL_AMT,
AP_INVOICE_LN_AMT_TRX_AMT,
OA_EXCHANGE_RATE_VARIANCE,
OA_LOCAL_AWT_AMOUNT,
OA_LOCAL_INV_PRICE_VARIANCE,
OA_LOCAL_PREPAY_AMOUNT,
OA_TRX_AWT_AMOUNT,
OA_TRX_INV_PRICE_VARIANCE,
OA_TRX_PREPAY_AMOUNT,
AP_INVOICE_LINE_QTY,
AP_INVOICE_LINE_QTY_UOM_CD,
PROJECT_ID,
TASK_ID,
P_BASE_INVOICE_LINE_AMOUNT,
P_SET_OF_BOOKS_ID,
P_BASE_AWT_AMOUNT,
P_BASE_INV_PRICE_VARIANCE,
P_BASE_PREPAY_AMOUNT,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE6,
ATTRIBUTE1,
ATTRIBUTE5,
ATTRIBUTE7,
ACCRUAL_POSTED_FLAG,
AMOUNT,
ASSETS_ADDITION_FLAG,
ASSETS_TRACKING_FLAG,
DESCRIPTION,
DISTRIBUTION_CREATION_DATE,
DISTRIBUTION_LINE_NUMBER,
EARLIEST_SETTLEMENT_DATE,
EXPENDITURE_ITEM_DATE,
EXPENDITURE_ORGANIZATION_ID,
EXPENDITURE_TYPE,
JUSTIFICATION,
FINAL_MATCH_FLAG,
GL_DATE,
MATCH_STATUS_FLAG,
ATTRIBUTE10,
ATTRIBUTE_CATEGORY,
SECONDARY_VENDOR_NO,
INCOME_TAX_REGION,
INCOME_TAX_TYPE,
LINE_TYPE_LOOKUP_CODE,
PA_ADDITION_FLAG,
PA_QUANTITY,
PERIOD_NAME,
POSTED_AMOUNT,
POSTED_FLAG,
PREPAY_AMOUNT_REMAINING,
QUANTITY_INVOICED,
QUANTITY_VARIANCE,
REVERSAL_FLAG,
STAT_AMOUNT
)
SELECT
AP_INVOICE_LINE_DESC,
AP_INVOICE_LINE_NUM,
AP_INVOICE_ID,
AP_INVOICE_LN_MERCHANT_DOC_NUM,
AP_INV_LN_CHART_OF_ACCOUNT_ID,
OA_LINE_TYPE_CODE,
OA_EXPENDITURE_TYPE,
OA_MATCH_STATUS_FLAG,
OA_PERIOD_NAME,
OA_POSTED_FLAG,
OA_ACCOUNTING_DATE,
SOURCE_SYSTEM_ID,
GL_JE_LINE_ID,
OA_SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
AP_INVOICE_LN_AMT_LOCAL_AMT,
AP_INVOICE_LN_AMT_TRX_AMT,
OA_EXCHANGE_RATE_VARIANCE,
OA_LOCAL_AWT_AMOUNT,
OA_LOCAL_INV_PRICE_VARIANCE,
OA_LOCAL_PREPAY_AMOUNT,
OA_TRX_AWT_AMOUNT,
OA_TRX_INV_PRICE_VARIANCE,
OA_TRX_PREPAY_AMOUNT,
AP_INVOICE_LINE_QTY,
AP_INVOICE_LINE_QTY_UOM_CD,
PROJECT_ID,
TASK_ID,
P_BASE_INVOICE_LINE_AMOUNT,
P_SET_OF_BOOKS_ID,
P_BASE_AWT_AMOUNT,
P_BASE_INV_PRICE_VARIANCE,
P_BASE_PREPAY_AMOUNT,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE6,
ATTRIBUTE1,
ATTRIBUTE5,
ATTRIBUTE7,
ACCRUAL_POSTED_FLAG,
AMOUNT,
ASSETS_ADDITION_FLAG,
ASSETS_TRACKING_FLAG,
DESCRIPTION,
DISTRIBUTION_CREATION_DATE,
DISTRIBUTION_LINE_NUMBER,
EARLIEST_SETTLEMENT_DATE,
EXPENDITURE_ITEM_DATE,
EXPENDITURE_ORGANIZATION_ID,
EXPENDITURE_TYPE,
JUSTIFICATION,
FINAL_MATCH_FLAG,
GL_DATE,
MATCH_STATUS_FLAG,
ATTRIBUTE10,
ATTRIBUTE_CATEGORY,
SECONDARY_VENDOR_NO,
INCOME_TAX_REGION,
INCOME_TAX_TYPE,
LINE_TYPE_LOOKUP_CODE,
PA_ADDITION_FLAG,
PA_QUANTITY,
PERIOD_NAME,
POSTED_AMOUNT,
POSTED_FLAG,
PREPA
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC3_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC3_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, 
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC3_GL_HIST_LOAD_DW2 AS (

---------------------------------------------------------OA3NF_LOOKUP_VALUES_DEL-----------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_VALUES_DEL(
LOOKUP_CODE, 
SET_OF_BOOKS_ID,	
LOOKUP_TYPE,	
LANGUAGE_CD	,
SECURITY_GROUP_ID,	
VIEW_APPLICATION_ID	)
SELECT  
LOOKUP_CODE,
1002 AS SET_OF_BOOKS_ID	,
LOOKUP_TYPE	,
LANGUAGE_CD	,
SECURITY_GROUP_ID,
VIEW_APPLICATION_ID
FROM FDM_TABLES_DB.OA3NF_LOOKUP_VALUES_DEL;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC4_AP_HIST_LOAD_DW2 AS (

------------------------------------OA3NF_AP_INV_LN_STATUS------------------------------------




INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_STATUS
(
INVOICE_DISTRIBUTION_ID, 
AP_INVOICE_ID,
AP_INVOICE_LINE_NUM,
SET_OF_BOOKS_ID,
AP_INV_LN_STATUS_TYPE_CD,
AP_INV_LN_STATUS_DTTM,
LAST_UPDATE_DTTM
)
SELECT
-9999 AS INVOICE_DISTRIBUTION_ID, 
AP_INVOICE_ID,
AP_INVOICE_LINE_NUM,
1002 AS SET_OF_BOOKS_ID,
AP_INV_LN_STATUS_TYPE_CD,
AP_INV_LN_STATUS_DTTM,
LAST_UPDATE_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_INV_LN_STATUS;




------------------------------------OA3NF_AP_PAYMENT_DIST------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_DIST
(
OA_EVENT_NUMBER, 
OA_AE_CATEGORY, 
OA_AE_HEADER_DESCRIPTION,
OA_AE_LINE_DESCRIPTION, 
OA_AE_LINE_NUMBER, 
AP_ACCOUNTING_DATE,
OA_AE_LINE_TYPE_CODE,
OA_AP_EVENT_TYPE_CODE, 
AP_GL_TRANSFER_CD,
LOCAL_CREDIT_AMOUNT, 
LOCAL_DEBIT_AMOUNT, 
INVOICE_NUMBER, 
PERIOD_NAME,
OA_SET_OF_BOOKS_ID, 
TRX_CREDIT_AMOUNT, 
TRX_DEBIT_AMOUNT, 
CURRENCY_CODE,
TRX_EXCHANGE_DATE, 
TRX_EXCHANGE_RATE, 
PAYMENT_ID, 
CHART_OF_ACCOUNT_ID,
OA_AE_HEADER_ID, 
OA_GL_SL_LINK_ID, 
OA_ACCOUNTING_EVENT_ID, 
OA_AE_LINE_ID,
SOURCE_SYSTEM_ID, 
LAST_UPDATE_DTTM, 
JE_HEADER_ID, 
JE_LINE_NUM,
JE_HDR_ID_LINE_NUM,
AP_ACCOUNTING_DTTM, 
CROSS_CURRENCY_FLAG,
EVENT_STATUS_CODE, 
GL_TRANSFER_FLAG
)
SELECT  
OA_EVENT_NUMBER, 
OA_AE_CATEGORY, 
OA_AE_HEADER_DESCRIPTION,
OA_AE_LINE_DESCRIPTION, 
OA_AE_LINE_NUMBER, 
AP_ACCOUNTING_DATE,
OA_AE_LINE_TYPE_CODE, 
OA_AP_EVENT_TYPE_CODE, 
AP_GL_TRANSFER_CD,
LOCAL_CREDIT_AMOUNT, 
LOCAL_DEBIT_AMOUNT, 
INVOICE_NUMBER, 
PERIOD_NAME,
OA_SET_OF_BOOKS_ID, 
TRX_CREDIT_AMOUNT, 
TRX_DEBIT_AMOUNT, 
CURRENCY_CODE,
TRX_EXCHANGE_DATE, 
TRX_EXCHANGE_RATE, 
PAYMENT_ID, 
CHART_OF_ACCOUNT_ID,
OA_AE_HEADER_ID, 
OA_GL_SL_LINK_ID, 
OA_ACCOUNTING_EVENT_ID, 
OA_AE_LINE_ID,
SOURCE_SYSTEM_ID, 
LAST_UPDATE_DTTM, 
JE_HEADER_ID, 
JE_LINE_NUM,
JE_HDR_ID_LINE_NUM, 
AP_ACCOUNTING_DTTM, 
CROSS_CURRENCY_FLAG,
EVENT_STATUS_CODE, 
GL_TRANSFER_FLAG
FROM FDM_TABLES_DB.OA3NF_AP_PAYMENT_DIST;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC4_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC4_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, 
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC4_GL_HIST_LOAD_DW2 AS (

----------------------------------------OA3NF_LOOKUP_VALUES----------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_VALUES(
	LOOKUP_TYPE,
	LANGUAGE_CD,
	LOOKUP_CODE,
	SET_OF_BOOKS_ID,
	MEANING,
	DESCRIPTION,
	ENABLED_FLAG,
	START_DATE_ACTIVE,
	END_DATE_ACTIVE,
	LAST_UPDATE_DTTM,
	SECURITY_GROUP_ID,
	VIEW_APPLICATION_ID
)

SELECT
	LOOKUP_TYPE,
	LANGUAGE_CD,
	LOOKUP_CODE,
	1002 AS  SET_OF_BOOKS_ID,
	MEANING,
	DESCRIPTION,
	ENABLED_FLAG,
	START_DATE_ACTIVE,
	END_DATE_ACTIVE,
	LAST_UPDATE_DTTM,
	SECURITY_GROUP_ID,
	VIEW_APPLICATION_ID
FROM FDM_TABLES_DB.OA3NF_LOOKUP_VALUES;

------------------------------------------OA3NF_COA_VALUE_DESC------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_COA_VALUE_DESC
 (
COA_SEGMENT_ID,
COA_VALUE,
COA_VALUE_DESCRIPTION,
LANG,
LAST_UPDATE_DATE,
COA_VALUE_PARENT,
OA_FLEX_VALUE_ID,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE7,
ATTRIBUTE6,
ATTRIBUTE1,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE8,
ATTRIBUTE45,
ATTRIBUTE39,
ATTRIBUTE40,
ATTRIBUTE23,
ATTRIBUTE22,
ATTRIBUTE21,
ATTRIBUTE20,
ATTRIBUTE11,
ATTRIBUTE38,
ATTRIBUTE37,
ATTRIBUTE14,
ATTRIBUTE31,
ATTRIBUTE32,
ATTRIBUTE33,
ATTRIBUTE35,
ATTRIBUTE34,
ATTRIBUTE36,
ATTRIBUTE15,
ATTRIBUTE30,
ATTRIBUTE16,
ATTRIBUTE13,
ATTRIBUTE12,
ATTRIBUTE18,
ATTRIBUTE41,
ATTRIBUTE42,
ATTRIBUTE19,
ATTRIBUTE28,
ATTRIBUTE27,
ATTRIBUTE24,
ATTRIBUTE25,
ATTRIBUTE26,
ATTRIBUTE17,
ATTRIBUTE29,
ATTRIBUTE43,
ENABLED_FLAG,
SET_OF_BOOKS_ID
)
SELECT 
COA_SEGMENT_ID,
COA_VALUE,
COA_VALUE_DESCRIPTION,
LANG,
LAST_UPDATE_DATE,
COA_VALUE_PARENT,
OA_FLEX_VALUE_ID,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE7,
ATTRIBUTE6,
ATTRIBUTE1,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE8,
ATTRIBUTE45,
ATTRIBUTE39,
ATTRIBUTE40,
ATTRIBUTE23,
ATTRIBUTE22,
ATTRIBUTE21,
ATTRIBUTE20,
ATTRIBUTE11,
ATTRIBUTE38,
ATTRIBUTE37,
ATTRIBUTE14,
ATTRIBUTE31,
ATTRIBUTE32,
ATTRIBUTE33,
ATTRIBUTE35,
ATTRIBUTE34,
ATTRIBUTE36,
ATTRIBUTE15,
ATTRIBUTE30,
ATTRIBUTE16,
ATTRIBUTE13,
ATTRIBUTE12,
ATTRIBUTE18,
ATTRIBUTE41,
ATTRIBUTE42,
ATTRIBUTE19,
ATTRIBUTE28,
ATTRIBUTE27,
ATTRIBUTE24,
ATTRIBUTE25,
ATTRIBUTE26,
ATTRIBUTE17,
ATTRIBUTE29,
ATTRIBUTE43,
ENABLED_FLAG,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_COA_VALUE_DESC;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC5_AP_HIST_LOAD_DW2 AS (


--------------------------------OA3NF_AP_INV_LN_STAT_DEL-------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_STAT_DEL
(
AP_INVOICE_LINE_NUM,
AP_INVOICE_ID,
SET_OF_BOOKS_ID
)
SELECT
AP_INVOICE_LINE_NUM,
AP_INVOICE_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_INV_LN_STAT_DEL;




------------------------------------OA3NF_AP_INVOICE_DIST---------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_DIST
(
OA_ACCOUNTING_EVENT_ID,
OA_AE_CATEGORY,
OA_AE_HEADER_DESCRIPTION,
OA_AE_HEADER_ID,
OA_AE_LINE_DESCRIPTION,
OA_AE_LINE_ID,
OA_AE_LINE_NUMBER,
OA_AE_LINE_TYPE_CODE,
AP_ACCOUNTING_DATE,
OA_AP_EVENT_TYPE_CODE,
AP_GL_TRANSFER_FLAG,
BASE_CREDIT_AMOUNT,
BASE_DEBIT_AMOUNT,
CHART_OF_ACCOUNT_ID,
CURRENCY_CODE,
OA_EVENT_NUMBER,
OA_GL_SL_LINK_ID,
INVOICE_NUMBER,
INVOICE_ID,
PERIOD_NAME,
OA_SET_OF_BOOKS_ID,
SOURCE_SYSTEM_ID,
TRX_CREDIT_AMOUNT,
TRX_DEBIT_AMOUNT,
TRX_EXCHANGE_DATE,
TRX_EXCHANGE_RATE,
DISTRIBUTION_LINE_NUMBER,
LAST_UPDATE_DTTM,
SOURCE_TABLE,
JE_HEADER_ID,
JE_LINE_NUM,
JE_HDR_ID_LINE_NUM
)
SELECT
OA_ACCOUNTING_EVENT_ID,
OA_AE_CATEGORY,
OA_AE_HEADER_DESCRIPTION,
OA_AE_HEADER_ID,
OA_AE_LINE_DESCRIPTION,
OA_AE_LINE_ID,
OA_AE_LINE_NUMBER,
OA_AE_LINE_TYPE_CODE,
AP_ACCOUNTING_DATE,
OA_AP_EVENT_TYPE_CODE,
AP_GL_TRANSFER_FLAG,
BASE_CREDIT_AMOUNT,
BASE_DEBIT_AMOUNT,
CHART_OF_ACCOUNT_ID,
CURRENCY_CODE,
OA_EVENT_NUMBER,
OA_GL_SL_LINK_ID,
INVOICE_NUMBER,
INVOICE_ID,
PERIOD_NAME,
OA_SET_OF_BOOKS_ID,
SOURCE_SYSTEM_ID,
TRX_CREDIT_AMOUNT,
TRX_DEBIT_AMOUNT,
TRX_EXCHANGE_DATE,
TRX_EXCHANGE_RATE,
DISTRIBUTION_LINE_NUMBER,
LAST_UPDATE_DTTM,
SOURCE_TABLE,
JE_HEADER_ID,
JE_LINE_NUM,
JE_HDR_ID_LINE_NUM
FROM FDM_TABLES_DB.OA3NF_AP_INVOICE_DIST;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC5_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC5_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC5_GL_HIST_LOAD_DW2 AS (

------------------------------------------OA3NF_GL_ACCOUNT_HIER-----------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_ACCOUNT_HIER(

	DETAIL_CODE_COMBINATION_ID,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	ORDERING_VALUE,
	SET_OF_BOOKS_ID,
	CHART_OF_ACCOUNT_ID,
	SUMMARY_CODE_COMBINATION_ID,
	TEMPLATE_ID
)
SELECT
	DETAIL_CODE_COMBINATION_ID,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	ORDERING_VALUE,
    SET_OF_BOOKS_ID,
	'50269' AS CHART_OF_ACCOUNT_ID,
	SUMMARY_CODE_COMBINATION_ID,
	TEMPLATE_ID
FROM FDM_TABLES_DB.OA3NF_GL_ACCOUNT_HIER;

----------------------------------------------OA3NF_COA---------------------------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_COA
 (
CHART_OF_ACCOUNT_ID,
 SET_OF_BOOKS_ID,
LAST_UPDATE_DTTM,
COA_STRUCTURE_ID,
ACCOUNT_TYPE,
ENABLED_FLAG,
SUMMARY_FLAG,
SEGMENT1,
SEGMENT2,
SEGMENT3,
SEGMENT4,
SEGMENT5,
SEGMENT6,
SEGMENT7,
SEGMENT8,
SEGMENT9,
SEGMENT10,
SEGMENT11,
SEGMENT12,
SEGMENT13,
SEGMENT14,
SEGMENT15,
SEGMENT16,
SEGMENT17,
SEGMENT18,
SEGMENT19,
SEGMENT20,
SEGMENT21,
SEGMENT22,
SEGMENT23,
SEGMENT24,
SEGMENT25,
SEGMENT26,
SEGMENT27,
SEGMENT28,
SEGMENT29,
SEGMENT30,
TEMPLATE_ID,
START_DATE_ACTIVE,
END_DATE_ACTIVE



)
SELECT 
OA3NF_COA.CHART_OF_ACCOUNT_ID,
1002 AS SET_OF_BOOKS_ID,
OA3NF_COA.LAST_UPDATE_DTTM,
OA3NF_COA.COA_STRUCTURE_ID,
OA3NF_COA.ACCOUNT_TYPE,
OA3NF_COA.ENABLED_FLAG,
OA3NF_COA.SUMMARY_FLAG,
OA3NF_COA.SEGMENT1,
OA3NF_COA.SEGMENT2,
OA3NF_COA.SEGMENT3,
OA3NF_COA.SEGMENT4,
OA3NF_COA.SEGMENT5,
OA3NF_COA.SEGMENT6,
OA3NF_COA.SEGMENT7,
OA3NF_COA.SEGMENT8,
OA3NF_COA.SEGMENT9,
COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OA3NF_COA.SEGMENT10) AS SEGMENT10,
 '00000000' As SEGMENT11,
OA3NF_COA.SEGMENT12,
OA3NF_COA.SEGMENT13,
OA3NF_COA.SEGMENT14,
OA3NF_COA.SEGMENT15,
OA3NF_COA.SEGMENT16,
OA3NF_COA.SEGMENT17,
OA3NF_COA.SEGMENT18,
OA3NF_COA.SEGMENT19,
OA3NF_COA.SEGMENT20,
OA3NF_COA.SEGMENT21,
OA3NF_COA.SEGMENT22,
OA3NF_COA.SEGMENT23,
OA3NF_COA.SEGMENT24,
OA3NF_COA.SEGMENT25,
OA3NF_COA.SEGMENT26,
OA3NF_COA.SEGMENT27,
OA3NF_COA.SEGMENT28,
OA3NF_COA.SEGMENT29,
OA3NF_COA.SEGMENT30,
OA3NF_COA.TEMPLATE_ID,
OA3NF_COA.START_DATE_ACTIVE,
OA3NF_COA.END_DATE_ACTIVE
FROM FDM_TABLES_DB.OA3NF_COA
LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP
ON(OA3NF_COA.SEGMENT10=fdw_stage_DB.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC6_AP_HIST_LOAD_DW2 AS (

-------------------------------OA3NF_AP_PAYMENT_STATUS------------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_STATUS
(
PAYMENT_ID,
SET_OF_BOOKS_ID,
PAYMENT_STATUS_TYPE_CD,
PAYMENT_STATUS_DTTM
)
SELECT
PAYMENT_ID,
1002 AS SET_OF_BOOKS_ID,
PAYMENT_STATUS_TYPE_CD,
PAYMENT_STATUS_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_PAYMENT_STATUS;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC6_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC6_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC6_GL_HIST_LOAD_DW2 AS (


---------------------------------------------------------OA3NF_GL_JE_BATCH------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_BATCH(
JE_BATCH_CREATION_DT,
JE_BATCH_DESC,
JE_BATCH_ID,
JE_BATCH_NAME,
JE_BATCH_POSTED_DTTM,
JE_BATCH_POSTING_STATUS_CD,
JE_BATCH_TYPE_CD,
LAST_UPDATE_DTTM,
SET_OF_BOOKS_ID,
JE_BATCH_ACCOUNTING_DTTM,
POSTED_BY)
SELECT 
JE_BATCH_CREATION_DT,
JE_BATCH_DESC,
JE_BATCH_ID,
JE_BATCH_NAME,
JE_BATCH_POSTED_DTTM,
JE_BATCH_POSTING_STATUS_CD,
JE_BATCH_TYPE_CD,
LAST_UPDATE_DTTM,
SET_OF_BOOKS_ID,
JE_BATCH_ACCOUNTING_DTTM,
POSTED_BY
FROM FDM_TABLES_DB.OA3NF_GL_JE_BATCH;


------------------------------------------------------------OA3NF_GL_JE_BATCH_UNP----------------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_BATCH_UNP(
JE_BATCH_ID,
SET_OF_BOOKS_ID,
JE_BATCH_POSTING_STATUS_CD)
SELECT 
JE_BATCH_ID,
1002 AS SET_OF_BOOKS_ID,
JE_BATCH_POSTING_STATUS_CD
FROM FDM_TABLES_DB.OA3NF_GL_JE_BATCH_UNP;

---------------------------------------------------------------OA3NF_GL_JE_HEADER-------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_HEADER(
CURRENCY_CD,
JE_BATCH_ID ,         
OA_JE_CATEGORY,
JE_HEADER_CREATE_DT,
JE_HEADER_DESC,
JE_HEADER_ID,
JE_HEADER_NAME,
JE_HEADER_POSTED_DT,
OA_JE_SOURCE,
LAST_UPDATE_DTTM,
GL_PERIOD_ID,
SET_OF_BOOKS_ID,
JE_HEADER_REVERSING_IND,
JE_HEADER_REVERSE_PERIOD_DTTM,
JE_HEADER_CONV_DTTM,
OA_JE_HEADER_TRANS_CURRENCY_CD,
JE_HEADER_ACCT_PERIOD_DTTM,
PARENT_JE_HEADER_ID,
HEADER_POSTING_STATUS_CD,
CREATION_DATE,
DATE_CREATED,
DEFAULT_EFFECTIVE_DATE,
LAST_UPDATED_BY,
POSTED_DATE,
CURRENCY_CONVERSION_RATE,
ACCRUAL_REV_FLAG)
SELECT 
CURRENCY_CD,
JE_BATCH_ID,
OA_JE_CATEGORY,
JE_HEADER_CREATE_DT,
JE_HEADER_DESC,
JE_HEADER_ID,
JE_HEADER_NAME,
JE_HEADER_POSTED_DT,
OA_JE_SOURCE,
LAST_UPDATE_DTTM,
GL_PERIOD_ID,
SET_OF_BOOKS_ID,
JE_HEADER_REVERSING_IND,
JE_HEADER_REVERSE_PERIOD_DTTM,
JE_HEADER_CONV_DTTM,
OA_JE_HEADER_TRANS_CURRENCY_CD,
JE_HEADER_ACCT_PERIOD_DTTM,
PARENT_JE_HEADER_ID,
HEADER_POSTING_STATUS_CD,
CREATION_DATE,
DATE_CREATED,
DEFAULT_EFFECTIVE_DATE,
LAST_UPDATED_BY,
POSTED_DATE,
CURRENCY_CONVERSION_RATE,
ACCRUAL_REV_FLAG
FROM FDM_TABLES_DB.OA3NF_GL_JE_HEADER
where 
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;



----------------------------------------------------------------OA3NF_GL_JE_HEADER_UNP-------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_HEADER_UNP(
JE_HEADER_ID,
SET_OF_BOOKS_ID,
HEADER_POSTING_STATUS_CD
)
SELECT 
JE_HEADER_ID,
1002 as SET_OF_BOOKS_ID,
HEADER_POSTING_STATUS_CD
FROM FDM_TABLES_DB.OA3NF_GL_JE_HEADER_UNP;


------------------------------------------------------------------OA3NF_GL_JE_LINE_UNP----------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE_UNP(
JE_HDR_ID_LINE_NUM,
JE_HEADER_ID,
JE_LINE_NUM,
SET_OF_BOOKS_ID,
LINE_POSTING_STATUS_CD
)
SELECT 
JE_HDR_ID_LINE_NUM,
JE_HEADER_ID,
JE_LINE_NUM,
1002 as SET_OF_BOOKS_ID,
LINE_POSTING_STATUS_CD
FROM FDM_TABLES_DB.OA3NF_GL_JE_LINE_UNP;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC7_AP_HIST_LOAD_DW2 AS (

--------------------------------------OA3NF_AP_PYMNT_SCHEDULE-------------------------------------------------------------




INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHEDULE
(
PAYMENT_SCHEDULE_ID,
INVOICE_ID,
SET_OF_BOOKS_ID,
CONSOL_INVOICE_ID,
OA_PAYMENT_NUM,
LAST_UPDATE_DTTM,
DISCOUNT_DATE,
DUE_DATE,
LOCAL_GROSS_AMOUNT,
SECOND_DISCOUNT_DATE,
THIRD_DISCOUNT_DATE,
TRX_AMOUNT_REMAINING,
TRX_FIRST_DISC_AMT_AVAIL,
TRX_GROSS_AMOUNT,
TRX_SECOND_DISC_AMT_AVAIL,
TRX_THIRD_DISC_AMT_AVAIL,
PAYMENT_PRIORITY,
DISCOUNT_AMOUNT_AVAILABLE,
DISCOUNT_AMOUNT_REMAINING,
GROSS_AMOUNT,
HOLD_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
CREATION_DATE,
SECOND_DISC_AMT_AVAILABLE,
THIRD_DISC_AMT_AVAILABLE,
PAYMENT_STATUS_FLAG,
AMOUNT_REMAINING
)
SELECT
PAYMENT_SCHEDULE_ID,
INVOICE_ID,
1002 AS SET_OF_BOOKS_ID,
CONSOL_INVOICE_ID,
OA_PAYMENT_NUM,
LAST_UPDATE_DTTM,
DISCOUNT_DATE,
DUE_DATE,
LOCAL_GROSS_AMOUNT,
SECOND_DISCOUNT_DATE,
THIRD_DISCOUNT_DATE,
TRX_AMOUNT_REMAINING,
TRX_FIRST_DISC_AMT_AVAIL,
TRX_GROSS_AMOUNT,
TRX_SECOND_DISC_AMT_AVAIL,
TRX_THIRD_DISC_AMT_AVAIL,
PAYMENT_PRIORITY,
DISCOUNT_AMOUNT_AVAILABLE,
DISCOUNT_AMOUNT_REMAINING,
GROSS_AMOUNT,
HOLD_FLAG,
PAYMENT_METHOD_LOOKUP_CODE,
CREATION_DATE,
SECOND_DISC_AMT_AVAILABLE,
THIRD_DISC_AMT_AVAILABLE,
PAYMENT_STATUS_FLAG,
AMOUNT_REMAINING
FROM FDM_TABLES_DB.OA3NF_AP_PYMNT_SCHEDULE;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC7_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC7_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC7_GL_HIST_LOAD_DW2 AS (

-----------------------------------------OA3NF_GL_JE_LINE-------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE(
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
ATTRIBUTE19
)
SELECT 
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
JE_HDR_ID_LINE_NUM
FROM FDM_TABLES_DB.OA3NF_GL_JE_LINE
where 
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17') ;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC8_AP_HIST_LOAD_DW2 AS (

----------------------------------OA3NF_AP_PYMNT_SCHED_DEL------------------------------------------------



INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHED_DEL
(
PAYMENT_SCHEDULE_ID,
SET_OF_BOOKS_ID
)
SELECT
PAYMENT_SCHEDULE_ID,
1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OA3NF_AP_PYMNT_SCHED_DEL;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC8_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC8_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------


---  REPLACE MACRO Failed. 3807:  Object 'FDM_TABLES_DB.OASEM_GL_PERIOD_CURRENT' does not exist. 

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC8_GL_HIST_LOAD_DW2 AS (
--------------------------------------------------OA3NF_GL_PERIOD_STATUSES------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_PERIOD_STATUSES
 (
APPLICATION_ID,
SET_OF_BOOKS_ID,
PERIOD_NAME,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CLOSING_STATUS,
START_DATE,
END_DATE,
YEAR_START_DATE,
QUARTER_NUM,
QUARTER_START_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
EFFECTIVE_PERIOD_NUM,
PERIOD_NUM,
ADJUSTMENT_PERIOD_FLAG,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
ELIMINATION_CONFIRMED_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
CONTEXT,
CHRONOLOGICAL_SEQ_STATUS_CODE
)
SELECT 
APPLICATION_ID,
SET_OF_BOOKS_ID,
PERIOD_NAME,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CLOSING_STATUS,
START_DATE,
END_DATE,
YEAR_START_DATE,
QUARTER_NUM,
QUARTER_START_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
EFFECTIVE_PERIOD_NUM,
PERIOD_NUM,
ADJUSTMENT_PERIOD_FLAG,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
ELIMINATION_CONFIRMED_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
CONTEXT,
CHRONOLOGICAL_SEQ_STATUS_CODE
FROM FDM_TABLES_DB.OA3NF_GL_PERIOD_STATUSES
where 
PERIOD_NAME IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;





--------------------------------------------OA3NF_GL_PERIODS-----------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_PERIODS
 (
 SET_OF_BOOKS_ID,
PERIOD_SET_NAME,
PERIOD_NAME,
GL_PERIOD_ID,
PERIOD,
LAST_UPDATE_DTTM,
START_DATE,
END_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
PERIOD_NUM_GEN,
PERIOD_NUM,
QUARTER_NUM,
ADJUSTMENT_PERIOD_FLAG
)
SELECT 
1002 SET_OF_BOOKS_ID,
PERIOD_SET_NAME,
PERIOD_NAME,
GL_PERIOD_ID,
PERIOD,
LAST_UPDATE_DTTM,
START_DATE,
END_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
PERIOD_NUM_GEN,
PERIOD_NUM,
QUARTER_NUM,
ADJUSTMENT_PERIOD_FLAG
FROM FDM_TABLES_DB.OA3NF_GL_PERIODS
where 
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;

--------------------------------------------OA3NF_GL_DAYS-----------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_DAYS
 (
ADJUSTMENT_PERIOD_FLAG,
GL_PERIOD_ID,
PERIOD_NAME,
PERIOD_SET_NAME,
PERIOD_TYPE,
GL_DATE,
END_DATE,
START_DATE
)
SELECT 
ADJUSTMENT_PERIOD_FLAG,
GL_PERIOD_ID,
PERIOD_NAME,
PERIOD_SET_NAME,
PERIOD_TYPE,
GL_DATE,
END_DATE,
START_DATE
FROM FDM_TABLES_DB.OA3NF_GL_DAYS
WHERE 
PERIOD_NAME IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;

----OASEM_BI_SECURITY_TABLE1-------------------------
DELETE FROM fdw_tables_db.OASEM_BI_SECURITY_TABLE1
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_BI_SECURITY_TABLE1
/*(SET_OF_BOOKS_ID, SET_OF_BOOKS_NAME, APPLICATION_NAME, ORACLE_USER_ID,
		USER_NAME, RESPONSIBILITY_NAME, VALUE_SET, RULE_NAME, DESCRIPTION,
		SEGMENT_NAME, TYPE_, FROM_, TO_, LAST_UPDATE_DATE, ERROR_MESSAGE,
		SECURITY_GROUP_KEY, START_DATE, END_DATE)*/
SELECT	'1002' AS SET_OF_BOOKS_ID, SET_OF_BOOKS_NAME, APPLICATION_NAME, ORACLE_USER_ID,
		USER_NAME, RESPONSIBILITY_NAME, VALUE_SET, RULE_NAME, DESCRIPTION,
		SEGMENT_NAME, TYPE_, FROM_, TO_, LAST_UPDATE_DATE, ERROR_MESSAGE,
		SECURITY_GROUP_KEY, START_DATE, END_DATE
FROM FDM_SEM_DB.OASEM_BI_SECURITY_TABLE1
;

----OASEM_BI_SECURITY_TABLE2-------------------------
DELETE FROM fdw_tables_db.OASEM_BI_SECURITY_TABLE2
WHERE SET_OF_BOOKS_ID ='1002' ;


INSERT INTO fdw_tables_db.OASEM_BI_SECURITY_TABLE2 
SELECT	ORACLE_USER_ID, AD_USER_ID, '1002' AS SET_OF_BOOKS_ID, LAST_UPDATE_DATE
FROM FDM_SEM_DB.OASEM_BI_SECURITY_TABLE2
;

----OASEM_BI_SECURITY_TABLE3-------------------------
DELETE FROM fdw_tables_db.OASEM_BI_SECURITY_TABLE3
WHERE SET_OF_BOOKS_ID ='1002' ;


INSERT INTO fdw_tables_db.OASEM_BI_SECURITY_TABLE3
SELECT	'1002' AS SET_OF_BOOKS_ID, SET_OF_BOOKS_NAME, APPLICATION_NAME, ORACLE_USER_ID,
		USER_NAME, AD_USER_ID, SEGMENT_NAME, SEGMENT_VALUE, DESCRIPTION,
		LAST_UPDATE_DATE, SECURITY_GROUP_KEY, START_DATE, END_DATE
FROM FDM_SEM_DB.OASEM_BI_SECURITY_TABLE3
;

----OA3NF_FND_CMPD_MENU_FUNC-------------------------
DELETE FROM fdw_tables_db.OA3NF_FND_CMPD_MENU_FUNC
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OA3NF_FND_CMPD_MENU_FUNC
SELECT	FUNCTION_ID, '1002' AS SET_OF_BOOKS_ID, GRANT_FLAG, MENU_ID
FROM FDM_TABLES_DB.OA3NF_FND_CMPD_MENU_FUNC
;

---------------OASEM_TERRITORY_HIER_D-------------------------
DELETE FROM fdw_tables_db.OASEM_TERRITORY_HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_TERRITORY_HIER_D
SELECT	TERRITORY_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_TERRITORY_HIER_D
;

--------------OASEM_BUSINESS__HIER_D--------------------------
DELETE FROM fdw_tables_db.OASEM_BUSINESS__HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_BUSINESS__HIER_D
SELECT	BUSINESS_ENTITY_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_BUSINESS__HIER_D
;

--------------OASEM_DETAIL_HIER_D--------------------------
DELETE FROM fdw_tables_db.OASEM_DETAIL_HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_DETAIL_HIER_D
SELECT	DETAIL_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_DETAIL_HIER_D
;


--------------OASEM_INTERCOMP_HIER_D--------------------------

DELETE FROM fdw_tables_db.OASEM_INTERCOMP_HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_INTERCOMP_HIER_D
SELECT	INTERCOMPANY_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_INTERCOMP_HIER_D
;

--------------OASEM_MEDIUM_HIER_D--------------------------

DELETE FROM fdw_tables_db.OASEM_MEDIUM_HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_MEDIUM_HIER_D
SELECT	MEDIUM_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_MEDIUM_HIER_D
;

--------------OASEM_USER_DEFI_HIER_D--------------------------

DELETE FROM fdw_tables_db.OASEM_USER_DEFI_HIER_D
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO fdw_tables_db.OASEM_USER_DEFI_HIER_D
SELECT	USER_DEFINED_KEY, LEVEL_2, LEVEL_2_DESC, LEVEL_1, LEVEL_1_DESC,
		'1002' AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_USER_DEFI_HIER_D
;

--------------OA3NF_GL_HIST_RATES_HIST--------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_GL_HIST_RATES_HIST 
(PERIOD_NAME, BUDGET_TYPE, PRODUCT_ID, RATE_TYPE1, RATE_TYPE2,
		RATE_TYPE3, RATE_TYPE4, RATE_TYPE5, RATE_TYPE6, RATE_TYPE7, RATE_TYPE8,
		RATE_TYPE9, RATE_TYPE10, RATE_TYPE11, RATE_TYPE12, RATE_TYPE13,
		RATE_TYPE14, RATE_TYPE15, FLOW_CODE, CREATED_BY, CREATION_DTTM,
		LAST_UPDATED_BY, LAST_UPDATED_DTTM, PRODUCT_ID_VAR, SOP_CAL,
		REQUEST_ID
)
SELECT	PERIOD_NAME, BUDGET_TYPE, PRODUCT_ID, RATE_TYPE1, RATE_TYPE2,
		RATE_TYPE3, RATE_TYPE4, RATE_TYPE5, RATE_TYPE6, RATE_TYPE7, RATE_TYPE8,
		RATE_TYPE9, RATE_TYPE10, RATE_TYPE11, RATE_TYPE12, RATE_TYPE13,
		RATE_TYPE14, RATE_TYPE15, FLOW_CODE, CREATED_BY, CREATION_DTTM,
		LAST_UPDATED_BY, LAST_UPDATED_DTTM, PRODUCT_ID_VAR, SOP_CAL,
		REQUEST_ID
FROM FDM_TABLES_DB.OA3NF_GL_HIST_RATES;

--------------OASEM_GL_PERIOD_CURRENT--------------------------
DELETE FROM fdw_tables_db.OASEM_GL_PERIOD_CURRENT
WHERE SET_OF_BOOKS_ID ='1002' ;

INSERT INTO FDW_TABLES_DB.OASEM_GL_PERIOD_CURRENT
SELECT	CURRENT_PERIOD, CURRENT_QUARTER, CURRENT_YEAR, PERIOD_SET_NAME,
		PERIOD_TYPE, 1002 AS SET_OF_BOOKS_ID
FROM FDM_TABLES_DB.OASEM_GL_PERIOD_CURRENT ;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--MAC9_GL_HIST1_LOAD_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC9_GL_HIST1_LOAD_DW2 AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
								FUTURE_KEY,
								VENDOR_KEY, 
								GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                               '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY IN ('JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13')
and SET_OF_BOOKS_KEY=1002;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC9_GL_HIST_LOAD_DW2 AS (


--------------------------------------OA3NF_GL_BALANCES_------------------------------------------------------

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_HIST
(ACTUAL_FLAG, 
BEGIN_BALANCE_CR, 
BEGIN_BALANCE_DR,
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, 
ENCUMBRANCE_TYPE_ID, 
GL_PERIOD_ID, 
LAST_UPDATE_DTTM,
PERIOD_NET_CR, 
PERIOD_NET_DR, 
PERIOD_TO_DATE_ADB, 
PERIOD_YEAR,
PROJECT_TO_DATE_CR, 
PROJECT_TO_DATE_DR, 
QUARTER_TO_DATE_ADB,
QUARTER_TO_DATE_CR, 
QUARTER_TO_DATE_DR, 
SET_OF_BOOKS_ID, 
TRANSLATED_FLAG,
YEAR_TO_DATE_ADB, 
FINANCIAL_PLAN_ID, 
BEGIN_BALANCE_CR_BEQ, 
BEGIN_BALANCE_DR_BEQ,
PERIOD_NET_CR_BEQ, 
PERIOD_NET_DR_BEQ, 
PROJECT_TO_DATE_CR_BEQ,
PROJECT_TO_DATE_DR_BEQ, 
QUARTER_TO_DATE_CR_BEQ, 
QUARTER_TO_DATE_DR_BEQ,
GL_BUDGET_ID, 
TRANSLATED_FLAG_CD, 
TEMPLATE_ID, 
PERIOD_NUM, 
YEAR_TO_DATE_CR,
YEAR_TO_DATE_DR, 
YEAR_TO_DATE_NET_ACTIVITY)


SELECT  
ACTUAL_FLAG, 
BEGIN_BALANCE_CR, 
BEGIN_BALANCE_DR, 
CHART_OF_ACCOUNT_ID,
CURRENCY_CD, 
ENCUMBRANCE_TYPE_ID, 
GL_PERIOD_ID, 
LAST_UPDATE_DTTM,
PERIOD_NET_CR, 
PERIOD_NET_DR, 
PERIOD_TO_DATE_ADB, 
PERIOD_YEAR,
PROJECT_TO_DATE_CR, 
PROJECT_TO_DATE_DR, 
QUARTER_TO_DATE_ADB,
QUARTER_TO_DATE_CR, 
QUARTER_TO_DATE_DR, 
SET_OF_BOOKS_ID, 
TRANSLATED_FLAG,
YEAR_TO_DATE_ADB, 
FINANCIAL_PLAN_ID, 
BEGIN_BALANCE_CR_BEQ, 
BEGIN_BALANCE_DR_BEQ,
PERIOD_NET_CR_BEQ, 
PERIOD_NET_DR_BEQ, 
PROJECT_TO_DATE_CR_BEQ,
PROJECT_TO_DATE_DR_BEQ, 
QUARTER_TO_DATE_CR_BEQ, 
QUARTER_TO_DATE_DR_BEQ,
GL_BUDGET_ID, 
TRANSLATED_FLAG_CD, 
TEMPLATE_ID, 
PERIOD_NUM, 
YEAR_TO_DATE_CR,
YEAR_TO_DATE_DR, 
YEAR_TO_DATE_NET_ACTIVITY
FROM FDM_TABLES_DB.OA3NF_GL_BALANCES_
where 
GL_PERIOD_ID IN('JAN-05','FEB-05','MAR-05','APR-05','MAY-05','JUN-05','JUL-05','AUG-05','SEP-05','OCT-05','NOV-05','DEC-05',
'JAN-06','FEB-06','MAR-06','APR-06','MAY-06','JUN-06','JUL-06','AUG-06','SEP-06','OCT-06','NOV-06','DEC-06',
'JAN-07','FEB-07','MAR-07','APR-07','MAY-07','JUN-07','JUL-07','AUG-07','SEP-07','OCT-07','NOV-07','DEC-07',
'JAN-08','FEB-08','MAR-08','APR-08','MAY-08','JUN-08','JUL-08','AUG-08','SEP-08','OCT-08','NOV-08','DEC-08',
'JAN-09','FEB-09','MAR-09','APR-09','MAY-09','JUN-09','JUL-09','AUG-09','SEP-09','OCT-09','NOV-09','DEC-09',
'JAN-10','FEB-10','MAR-10','APR-10','MAY-10','JUN-10','JUL-10','AUG-10','SEP-10','OCT-10','NOV-10','DEC-10',
'JAN-11','FEB-11','MAR-11','APR-11','MAY-11','JUN-11','JUL-11','AUG-11','SEP-11','OCT-11','NOV-11','DEC-11',
'JAN-12','FEB-12','MAR-12','APR-12','MAY-12','JUN-12','JUL-12','AUG-12','SEP-12','OCT-12','NOV-12','DEC-12',
'JAN-13','FEB-13','MAR-13','APR-13','MAY-13','JUN-13','JUL-13','AUG-13','SEP-13','OCT-13','NOV-13','DEC-13',
'JAN-14','FEB-14','MAR-14','APR-14','MAY-14','JUN-14','JUL-14','AUG-14','SEP-14','OCT-14','NOV-14','DEC-14',
'JAN-15','FEB-15','MAR-15','APR-15','MAY-15','JUN-15','JUL-15','AUG-15','SEP-15','OCT-15','NOV-15','DEC-15',
'JAN-16','FEB-16','MAR-16','APR-16','MAY-16','JUN-16','JUL-16','AUG-16','SEP-16','OCT-16','NOV-16','DEC-16',
'JAN-17','FEB-17','MAR-17','APR-17','MAY-17','JUN-17','JUL-17','AUG-17','SEP-17','OCT-17','NOV-17','DEC-17')
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_HIST
AS (

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s
where
   LOAD_BI_GL_ACCT_BAL_F_s.CODE_COMBINATION_ID = OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID
   AND LOAD_BI_GL_ACCT_BAL_F_s.CURRENCY_KEY = OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.GL_BUDGET_KEY = OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.PERIOD_KEY = OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.SET_OF_BOOKS_KEY = OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY
   );

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F ( 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD	)
SELECT 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD
   FROM FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s;
   );
--------------------------------------------------------------------------------


--MAC_BI_GL_ACCT_BAL_F_HIST_DW2
 
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_HIST_DW2  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT )  AS (
 
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F (ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY, FUTURE_KEY, VENDOR_KEY, GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD )
               
SELECT 
                                ACCOUNT_TYPE_KEY, ACCOUNT__KEY, ACTUAL_BEGIN_BALANCE_TXN,
                                ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
                                BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
                                BUDGET_ENDING_BALANCE_USD, BUSINESS_ENTITY_KEY, CODE_COMBINATION_ID,
                                CURRENCY_KEY, DEPARTMENT_KEY, DETAIL_KEY,
                                 '00000000' As FUTURE_KEY,
                                COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY) AS VENDOR_KEY,
                                GL_ACCOUNT_KEY,
                                GL_BUDGET_KEY, INTERCOMPANY_KEY, LAST_UPDATE_DATE, MEDIUM_KEY,
                                PERIOD_KEY, PERIOD_YEAR, PRODUCT_SEASON_EPISODE_KEY, PROJECT_TO_DATE_CR_TXN,
                                PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
                                PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
                                PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
                                PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
                                PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
                                PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
                                PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
                                PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
                                PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
                                PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
                                PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
                                P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
                                P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
                                P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
                                QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
                                QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
                                QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
                                QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
                                QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
                                QTD_VARIANCE_TXN, QTD_VARIANCE_USD, SET_OF_BOOKS_KEY, TEMPLATE_KEY,
                                TERRITORY_KEY, USER_DEFINED_KEY, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
                                YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
                                YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
                                YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
                                YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
                                YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
                                P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
                                P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
                                FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
LEFT JOIN fdw_stage_db.LOAD_VENDOR_MAP
ON(OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY=fdw_stage_db.LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = :PARAM_PERIOD_KEY 
and SET_OF_BOOKS_KEY= :PARAM_SET_OF_BOOKS_ID ;
);
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UN_CTD  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UN WHERE  OASEM_BI_GL_ACCT_BAL_F_UN.period_key = :PARAM_PERIOD_KEY  
AND OASEM_BI_GL_ACCT_BAL_F_UN.set_of_books_key = :PARAM_SET_OF_BOOKS_ID;


INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UN
SELECT	SET_OF_BOOKS_KEY, PERIOD_KEY, D.TEMPLATE_NAME AS FCS_ACCOUNT_NUM, BUSINESS_ENTITY_KEY,
		ACCOUNT__KEY, DEPARTMENT_KEY, PRODUCT_SEASON_EPISODE_KEY, MEDIUM_KEY,
		DETAIL_KEY, TERRITORY_KEY, INTERCOMPANY_KEY, USER_DEFINED_KEY,
		VENDOR_KEY, FUTURE_KEY, GL_ACCOUNT_KEY, GL_BUDGET_KEY, LAST_UPDATE_DATE,
		F.TEMPLATE_KEY, CODE_COMBINATION_ID, CURRENCY_KEY, 
		
      COALESCE(ACTUAL_BEGIN_BALANCE_TXN,0) AS ACTUAL_BEGIN_BALANCE_TXN,
      COALESCE(ACTUAL_BEGIN_BALANCE_USD,0)  As ACTUAL_BEGIN_BALANCE_USD,
      COALESCE(ACTUAL_ENDING_BALANCE_TXN,0) As ACTUAL_ENDING_BALANCE_TXN,
      COALESCE(ACTUAL_ENDING_BALANCE_USD,0) As ACTUAL_ENDING_BALANCE_USD,
      COALESCE(BUDGET_BEGIN_BALANCE_TXN,0)  As BUDGET_BEGIN_BALANCE_TXN,
      COALESCE(BUDGET_BEGIN_BALANCE_USD,0) As BUDGET_BEGIN_BALANCE_USD ,
      COALESCE(BUDGET_ENDING_BALANCE_TXN,0) As BUDGET_ENDING_BALANCE_TXN ,
      COALESCE(BUDGET_ENDING_BALANCE_USD,0) As BUDGET_ENDING_BALANCE_USD ,
      COALESCE(PROJECT_TO_DATE_CR_TXN,0)  As PROJECT_TO_DATE_CR_TXN,
      COALESCE(PROJECT_TO_DATE_CR_USD,0) As PROJECT_TO_DATE_CR_USD,
      COALESCE(PROJECT_TO_DATE_DR_TXN,0) As PROJECT_TO_DATE_DR_TXN,
      COALESCE(PROJECT_TO_DATE_DR_USD,0) As PROJECT_TO_DATE_DR_USD ,
      COALESCE(PROJ_BAL_ACTUAL_TXN,0) As PROJ_BAL_ACTUAL_TXN,
      COALESCE(PROJ_BAL_ACTUAL_USD,0) As PROJ_BAL_ACTUAL_USD,
      COALESCE(PROJ_BAL_BUDGET_TXN,0) As PROJ_BAL_BUDGET_TXN,
      COALESCE(PROJ_BAL_BUDGET_USD,0) As PROJ_BAL_BUDGET_USD ,  
      COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_TXN,0) As PTD_ACTUAL_BEGIN_BAL_CR_TXN ,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_USD,0) As PTD_ACTUAL_BEGIN_BAL_CR_USD,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_TXN,0) As PTD_ACTUAL_BEGIN_BAL_DR_TXN,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_USD,0) As PTD_ACTUAL_BEGIN_BAL_DR_USD,
      COALESCE(PTD_ACTUAL_CREDITS_TXN,0) As PTD_ACTUAL_CREDITS_TXN,
      COALESCE(PTD_ACTUAL_CREDITS_USD,0) As PTD_ACTUAL_CREDITS_USD,
      COALESCE(PTD_ACTUAL_DEBITS_TXN,0) As PTD_ACTUAL_DEBITS_TXN,
      COALESCE(PTD_ACTUAL_DEBITS_USD,0) As PTD_ACTUAL_DEBITS_USD,
      COALESCE(PTD_ACTUAL_NET_ACTIVITY_TXN,0) As PTD_ACTUAL_NET_ACTIVITY_TXN ,
      COALESCE(PTD_ACTUAL_NET_ACTIVITY_USD,0) As PTD_ACTUAL_NET_ACTIVITY_USD ,
      COALESCE(PTD_BUDGET_ACTIVITY_TXN,0)  As PTD_BUDGET_ACTIVITY_TXN,
      COALESCE(PTD_BUDGET_ACTIVITY_USD,0)  As PTD_BUDGET_ACTIVITY_USD,
      COALESCE(PTD_BUDGET_BEGIN_BAL_CR_TXN,0)  As PTD_BUDGET_BEGIN_BAL_CR_TXN,
      COALESCE(PTD_BUDGET_BEGIN_BAL_CR_USD,0)  As PTD_BUDGET_BEGIN_BAL_CR_USD,
      COALESCE(PTD_BUDGET_BEGIN_BAL_DR_TXN,0)  As PTD_BUDGET_BEGIN_BAL_DR_TXN,
      COALESCE(PTD_BUDGET_BEGIN_BAL_DR_USD,0)  As PTD_BUDGET_BEGIN_BAL_DR_USD,
      COALESCE(PTD_BUDGET_CREDITS_TXN,0)  As PTD_BUDGET_CREDITS_TXN,
      COALESCE(PTD_BUDGET_CREDITS_USD,0)  As PTD_BUDGET_CREDITS_USD,
      COALESCE(PTD_BUDGET_DEBITS_TXN,0)  As PTD_BUDGET_DEBITS_TXN,
      COALESCE(PTD_BUDGET_DEBITS_USD,0)  As PTD_BUDGET_DEBITS_USD,  
      COALESCE(PTD_BUDGET_NET_ACTIVITY_TXN,0)  As PTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(PTD_BUDGET_NET_ACTIVITY_USD,0)  As PTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(PTD_BUDGET_TXN,0)  As PTD_BUDGET_TXN,
      COALESCE(PTD_BUDGET_USD,0)  As PTD_BUDGET_USD,
      COALESCE(PTD_VARIANCE_TXN,0)  As PTD_VARIANCE_TXN,
      COALESCE(PTD_VARIANCE_USD,0)  As PTD_VARIANCE_USD,
      COALESCE(P_MTD_ACT_NET_ACTIVITY_TXN,0)  As P_MTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_MTD_ACT_NET_ACTIVITY_USD,0)  As P_MTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_QTD_ACT_NET_ACTIVITY_TXN ,0) As P_QTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_QTD_ACT_NET_ACTIVITY_USD ,0) As P_QTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_YR_ACT_NET_ACTIVITY_TXN,0)  As P_YR_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_ACT_NET_ACTIVITY_USD,0)  As P_YR_ACT_NET_ACTIVITY_USD ,
      COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_TXN ,0) P_YR_MTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_USD,0)  As P_YR_MTD_ACT_NET_ACTIVITY_USD ,
      COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_TXN,0)  As P_YR_QTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_USD,0)  As P_YR_QTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_YTD_ACT_NET_ACTIVITY_TXN,0)  As P_YTD_ACT_NET_ACTIVITY_TXN ,
      COALESCE(P_YTD_ACT_NET_ACTIVITY_USD,0)  As P_YTD_ACT_NET_ACTIVITY_USD ,
      COALESCE(QBAL_ACTUAL_TXN,0)  As QBAL_ACTUAL_TXN,
      COALESCE(QBAL_ACTUAL_USD,0)  As QBAL_ACTUAL_USD,
      COALESCE(QBAL_BUDGET_TXN,0)  As QBAL_BUDGET_TXN,
      COALESCE(QBAL_BUDGET_USD,0)  As QBAL_BUDGET_USD,
      COALESCE(QTD_ACTUAL_CREDITS_TXN,0)  As QTD_ACTUAL_CREDITS_TXN ,
      COALESCE(QTD_ACTUAL_CREDITS_USD,0)  As QTD_ACTUAL_CREDITS_USD ,
      COALESCE(QTD_ACTUAL_DEBITS_TXN,0)  As QTD_ACTUAL_DEBITS_TXN ,
      COALESCE(QTD_ACTUAL_DEBITS_USD,0)  As  QTD_ACTUAL_DEBITS_USD,
      COALESCE(QTD_ACTUAL_NET_ACTIVITY_TXN,0)  As QTD_ACTUAL_NET_ACTIVITY_TXN,
      COALESCE(QTD_ACTUAL_NET_ACTIVITY_USD,0)  As QTD_ACTUAL_NET_ACTIVITY_USD,
      COALESCE(QTD_BUDGET_CREDITS_TXN,0)  As QTD_BUDGET_CREDITS_TXN,
      COALESCE(QTD_BUDGET_CREDITS_USD,0)  As QTD_BUDGET_CREDITS_USD,
      COALESCE(QTD_BUDGET_DEBITS_TXN,0)  As QTD_BUDGET_DEBITS_TXN ,
      COALESCE(QTD_BUDGET_DEBITS_USD,0)  As QTD_BUDGET_DEBITS_USD,
      COALESCE(QTD_BUDGET_NET_ACTIVITY_TXN,0)  As QTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(QTD_BUDGET_NET_ACTIVITY_USD,0)  As QTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(QTD_VARIANCE_TXN ,0) As QTD_VARIANCE_TXN,
      COALESCE(QTD_VARIANCE_USD ,0) As QTD_VARIANCE_USD,
      COALESCE(YBAL_ACTUAL_TXN ,0) As YBAL_ACTUAL_TXN,
      COALESCE(YBAL_ACTUAL_USD ,0) As YBAL_ACTUAL_USD,
      COALESCE(YBAL_BUDGET_TXN,0)  As YBAL_BUDGET_TXN ,
      COALESCE(YBAL_BUDGET_USD ,0)  As YBAL_BUDGET_USD,
      COALESCE(YTD_ACTUAL_CREDITS_TXN ,0) As YTD_ACTUAL_CREDITS_TXN,
      COALESCE(YTD_ACTUAL_CREDITS_USD ,0) As YTD_ACTUAL_CREDITS_USD,
      COALESCE(YTD_ACTUAL_DEBITS_TXN,0)  As YTD_ACTUAL_DEBITS_TXN,
      COALESCE(YTD_ACTUAL_DEBITS_USD ,0) As YTD_ACTUAL_DEBITS_USD,
      COALESCE(YTD_ACTUAL_NET_ACTIVITY_TXN ,0) As YTD_ACTUAL_NET_ACTIVITY_TXN,
      COALESCE(YTD_ACTUAL_NET_ACTIVITY_USD ,0) As YTD_ACTUAL_NET_ACTIVITY_USD,
      COALESCE(YTD_BUDGET_CREDITS_TXN,0)  As YTD_BUDGET_CREDITS_TXN ,
      COALESCE(YTD_BUDGET_CREDITS_USD,0)  As YTD_BUDGET_CREDITS_USD,
      COALESCE(YTD_BUDGET_DEBITS_TXN ,0) AS YTD_BUDGET_DEBITS_TXN,
      COALESCE(YTD_BUDGET_DEBITS_USD ,0) As YTD_BUDGET_DEBITS_USD,
      COALESCE(YTD_BUDGET_NET_ACTIVITY_TXN ,0) As YTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(YTD_BUDGET_NET_ACTIVITY_USD ,0) AS YTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(YTD_VARIANCE_TXN ,0) As YTD_VARIANCE_TXN,
      COALESCE(YTD_VARIANCE_USD ,0) As YTD_VARIANCE_USD,
      COALESCE(P_YR_CUR_MON_BEGBAL_TXN ,0) As P_YR_CUR_MON_BEGBAL_TXN,
      COALESCE(P_YR_CUR_MON_BEGBAL_USD,0)  As P_YR_CUR_MON_BEGBAL_USD ,
      COALESCE(P_YR_CUR_MON_ENDBAL_TXN ,0) As P_YR_CUR_MON_ENDBAL_TXN,
      COALESCE(P_YR_CUR_MON_ENDBAL_USD ,0) As P_YR_CUR_MON_ENDBAL_USD,
      COALESCE(P_YR_PMTD_TXN ,0) As P_YR_PMTD_TXN,
      COALESCE(P_YR_PMTD_USD ,0) As P_YR_PMTD_USD
FROM  fdw_TABLES_db.OASEM_BI_GL_ACCT_BAL_F F 
LEFT JOIN FDW_CTD_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    AND F.SET_OF_BOOKS_KEY = D.SET_OF_BOOKS_ID
where F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID
AND F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
AND F.period_key = :PARAM_PERIOD_KEY
AND F.BUSINESS_ENTITY_KEY  between '0000' and '5999'  
and 
( ACTUAL_BEGIN_BALANCE_TXN <> 0
or ACTUAL_BEGIN_BALANCE_USD <> 0
or PTD_ACTUAL_NET_ACTIVITY_TXN <> 0
or PTD_ACTUAL_NET_ACTIVITY_USD <> 0 
or ACTUAL_ENDING_BALANCE_TXN <> 0
or ACTUAL_ENDING_BALANCE_USD <>0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UN_STU  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UN WHERE  OASEM_BI_GL_ACCT_BAL_F_UN.period_key = :PARAM_PERIOD_KEY  
AND OASEM_BI_GL_ACCT_BAL_F_UN.set_of_books_key = :PARAM_SET_OF_BOOKS_ID;


INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UN
SELECT *  from (

 SELECT    MAX(SET_OF_BOOKS_KEY)  AS SET_OF_BOOKS_KEY,
      PERIOD_KEY   ,
      D.TEMPLATE_NAME AS FCS_ACCOUNT_NUM ,
      BUSINESS_ENTITY_KEY   ,
      ACCOUNT__KEY   ,
      DEPARTMENT_KEY   ,
      PRODUCT_SEASON_EPISODE_KEY   ,
      MEDIUM_KEY   ,
      '00000000' DETAIL_KEY  ,
      TERRITORY_KEY   ,
      INTERCOMPANY_KEY   ,
      USER_DEFINED_KEY   ,
      VENDOR_KEY  ,
      FUTURE_KEY  ,
      MAX(GL_ACCOUNT_KEY)  As GL_ACCOUNT_KEY ,
      GL_BUDGET_KEY   ,
      MAX(F.LAST_UPDATE_DATE) As LAST_UPDATE_DATE,
      MAX(F.TEMPLATE_KEY) As TEMPLATE_KEY ,
      MAX(CODE_COMBINATION_ID)  As CODE_COMBINATION_ID,
      CURRENCY_KEY ,
     -- COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) As CONV_VENDOR_KEY ,
      SUM( COALESCE(ACTUAL_BEGIN_BALANCE_TXN,0)) AS ACTUAL_BEGIN_BALANCE_TXN,
      SUM( COALESCE(ACTUAL_BEGIN_BALANCE_USD,0))  As ACTUAL_BEGIN_BALANCE_USD,
      SUM( COALESCE(ACTUAL_ENDING_BALANCE_TXN,0)) As ACTUAL_ENDING_BALANCE_TXN,
      SUM( COALESCE(ACTUAL_ENDING_BALANCE_USD,0)) As ACTUAL_ENDING_BALANCE_USD,
      SUM( COALESCE(BUDGET_BEGIN_BALANCE_TXN,0))  As BUDGET_BEGIN_BALANCE_TXN,
      SUM( COALESCE(BUDGET_BEGIN_BALANCE_USD,0)) As BUDGET_BEGIN_BALANCE_USD ,
      SUM( COALESCE(BUDGET_ENDING_BALANCE_TXN,0)) As BUDGET_ENDING_BALANCE_TXN ,
      SUM( COALESCE(BUDGET_ENDING_BALANCE_USD,0)) As BUDGET_ENDING_BALANCE_USD ,
      SUM( COALESCE(PROJECT_TO_DATE_CR_TXN,0))  As PROJECT_TO_DATE_CR_TXN,
      SUM( COALESCE(PROJECT_TO_DATE_CR_USD,0)) As PROJECT_TO_DATE_CR_USD,
      SUM( COALESCE(PROJECT_TO_DATE_DR_TXN,0)) As PROJECT_TO_DATE_DR_TXN,
      SUM( COALESCE(PROJECT_TO_DATE_DR_USD,0)) As PROJECT_TO_DATE_DR_USD ,
      SUM( COALESCE(PROJ_BAL_ACTUAL_TXN,0)) As PROJ_BAL_ACTUAL_TXN,
      SUM( COALESCE(PROJ_BAL_ACTUAL_USD,0)) As PROJ_BAL_ACTUAL_USD,
      SUM( COALESCE(PROJ_BAL_BUDGET_TXN,0)) As PROJ_BAL_BUDGET_TXN,
      SUM( COALESCE(PROJ_BAL_BUDGET_USD,0)) As PROJ_BAL_BUDGET_USD ,  
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_TXN,0)) As PTD_ACTUAL_BEGIN_BAL_CR_TXN ,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_USD,0)) As PTD_ACTUAL_BEGIN_BAL_CR_USD,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_TXN,0)) As PTD_ACTUAL_BEGIN_BAL_DR_TXN,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_USD,0)) As PTD_ACTUAL_BEGIN_BAL_DR_USD,
      SUM( COALESCE(PTD_ACTUAL_CREDITS_TXN,0)) As PTD_ACTUAL_CREDITS_TXN,
      SUM( COALESCE(PTD_ACTUAL_CREDITS_USD,0)) As PTD_ACTUAL_CREDITS_USD,
      SUM( COALESCE(PTD_ACTUAL_DEBITS_TXN,0)) As PTD_ACTUAL_DEBITS_TXN,
      SUM( COALESCE(PTD_ACTUAL_DEBITS_USD,0)) As PTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(PTD_ACTUAL_NET_ACTIVITY_TXN,0)) As PTD_ACTUAL_NET_ACTIVITY_TXN ,
      SUM( COALESCE(PTD_ACTUAL_NET_ACTIVITY_USD,0)) As PTD_ACTUAL_NET_ACTIVITY_USD ,
      SUM( COALESCE(PTD_BUDGET_ACTIVITY_TXN,0))  As PTD_BUDGET_ACTIVITY_TXN,
      SUM( COALESCE(PTD_BUDGET_ACTIVITY_USD,0))  As PTD_BUDGET_ACTIVITY_USD,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_CR_TXN,0))  As PTD_BUDGET_BEGIN_BAL_CR_TXN,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_CR_USD,0))  As PTD_BUDGET_BEGIN_BAL_CR_USD,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_DR_TXN,0))  As PTD_BUDGET_BEGIN_BAL_DR_TXN,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_DR_USD,0))  As PTD_BUDGET_BEGIN_BAL_DR_USD,
      SUM( COALESCE(PTD_BUDGET_CREDITS_TXN,0))  As PTD_BUDGET_CREDITS_TXN,
      SUM( COALESCE(PTD_BUDGET_CREDITS_USD,0))  As PTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(PTD_BUDGET_DEBITS_TXN,0))  As PTD_BUDGET_DEBITS_TXN,
      SUM( COALESCE(PTD_BUDGET_DEBITS_USD,0))  As PTD_BUDGET_DEBITS_USD,  
     SUM( COALESCE(PTD_BUDGET_NET_ACTIVITY_TXN,0))  As PTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(PTD_BUDGET_NET_ACTIVITY_USD,0))  As PTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(PTD_BUDGET_TXN,0))  As PTD_BUDGET_TXN,
      SUM( COALESCE(PTD_BUDGET_USD,0))  As PTD_BUDGET_USD,
      SUM( COALESCE(PTD_VARIANCE_TXN,0))  As PTD_VARIANCE_TXN,
      SUM( COALESCE(PTD_VARIANCE_USD,0))  As PTD_VARIANCE_USD,
      SUM( COALESCE(P_MTD_ACT_NET_ACTIVITY_TXN,0))  As P_MTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_MTD_ACT_NET_ACTIVITY_USD,0))  As P_MTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_QTD_ACT_NET_ACTIVITY_TXN ,0)) As P_QTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_QTD_ACT_NET_ACTIVITY_USD ,0)) As P_QTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_YR_ACT_NET_ACTIVITY_TXN,0))  As P_YR_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_ACT_NET_ACTIVITY_USD,0))  As P_YR_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_TXN ,0)) P_YR_MTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_USD,0))  As P_YR_MTD_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_TXN,0))  As P_YR_QTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_USD,0))  As P_YR_QTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_YTD_ACT_NET_ACTIVITY_TXN,0))  As P_YTD_ACT_NET_ACTIVITY_TXN ,
      SUM( COALESCE(P_YTD_ACT_NET_ACTIVITY_USD,0))  As P_YTD_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(QBAL_ACTUAL_TXN,0))  As QBAL_ACTUAL_TXN,
      SUM( COALESCE(QBAL_ACTUAL_USD,0))  As QBAL_ACTUAL_USD,
      SUM( COALESCE(QBAL_BUDGET_TXN,0))  As QBAL_BUDGET_TXN,
      SUM( COALESCE(QBAL_BUDGET_USD,0))  As QBAL_BUDGET_USD,
      SUM( COALESCE(QTD_ACTUAL_CREDITS_TXN,0))  As QTD_ACTUAL_CREDITS_TXN ,
      SUM( COALESCE(QTD_ACTUAL_CREDITS_USD,0))  As QTD_ACTUAL_CREDITS_USD ,
      SUM( COALESCE(QTD_ACTUAL_DEBITS_TXN,0))  As QTD_ACTUAL_DEBITS_TXN ,
      SUM( COALESCE(QTD_ACTUAL_DEBITS_USD,0))  As  QTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(QTD_ACTUAL_NET_ACTIVITY_TXN,0))  As QTD_ACTUAL_NET_ACTIVITY_TXN,
      SUM( COALESCE(QTD_ACTUAL_NET_ACTIVITY_USD,0))  As QTD_ACTUAL_NET_ACTIVITY_USD,
      SUM( COALESCE(QTD_BUDGET_CREDITS_TXN,0))  As QTD_BUDGET_CREDITS_TXN,
      SUM( COALESCE(QTD_BUDGET_CREDITS_USD,0))  As QTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(QTD_BUDGET_DEBITS_TXN,0))  As QTD_BUDGET_DEBITS_TXN ,
      SUM( COALESCE(QTD_BUDGET_DEBITS_USD,0))  As QTD_BUDGET_DEBITS_USD,
      SUM( COALESCE(QTD_BUDGET_NET_ACTIVITY_TXN,0))  As QTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(QTD_BUDGET_NET_ACTIVITY_USD,0))  As QTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(QTD_VARIANCE_TXN ,0)) As QTD_VARIANCE_TXN,
      SUM( COALESCE(QTD_VARIANCE_USD ,0)) As QTD_VARIANCE_USD,
      SUM( COALESCE(YBAL_ACTUAL_TXN ,0)) As YBAL_ACTUAL_TXN,
      SUM( COALESCE(YBAL_ACTUAL_USD ,0)) As YBAL_ACTUAL_USD,
      SUM( COALESCE(YBAL_BUDGET_TXN,0))  As YBAL_BUDGET_TXN ,
      SUM( COALESCE(YBAL_BUDGET_USD ,0))  As YBAL_BUDGET_USD,
      SUM( COALESCE(YTD_ACTUAL_CREDITS_TXN ,0)) As YTD_ACTUAL_CREDITS_TXN,
      SUM( COALESCE(YTD_ACTUAL_CREDITS_USD ,0)) As YTD_ACTUAL_CREDITS_USD,
      SUM( COALESCE(YTD_ACTUAL_DEBITS_TXN,0))  As YTD_ACTUAL_DEBITS_TXN,
      SUM( COALESCE(YTD_ACTUAL_DEBITS_USD ,0)) As YTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(YTD_ACTUAL_NET_ACTIVITY_TXN ,0)) As YTD_ACTUAL_NET_ACTIVITY_TXN,
      SUM( COALESCE(YTD_ACTUAL_NET_ACTIVITY_USD ,0)) As YTD_ACTUAL_NET_ACTIVITY_USD,
      SUM( COALESCE(YTD_BUDGET_CREDITS_TXN,0))  As YTD_BUDGET_CREDITS_TXN ,
      SUM( COALESCE(YTD_BUDGET_CREDITS_USD,0))  As YTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(YTD_BUDGET_DEBITS_TXN ,0)) AS YTD_BUDGET_DEBITS_TXN,
      SUM( COALESCE(YTD_BUDGET_DEBITS_USD ,0)) As YTD_BUDGET_DEBITS_USD,
      SUM( COALESCE(YTD_BUDGET_NET_ACTIVITY_TXN ,0)) As YTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(YTD_BUDGET_NET_ACTIVITY_USD ,0)) AS YTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(YTD_VARIANCE_TXN ,0)) As YTD_VARIANCE_TXN,
      SUM( COALESCE(YTD_VARIANCE_USD ,0)) As YTD_VARIANCE_USD,
      SUM( COALESCE(P_YR_CUR_MON_BEGBAL_TXN ,0)) As P_YR_CUR_MON_BEGBAL_TXN,
      SUM( COALESCE(P_YR_CUR_MON_BEGBAL_USD,0))  As P_YR_CUR_MON_BEGBAL_USD ,
      SUM( COALESCE(P_YR_CUR_MON_ENDBAL_TXN ,0)) As P_YR_CUR_MON_ENDBAL_TXN,
      SUM( COALESCE(P_YR_CUR_MON_ENDBAL_USD ,0)) As P_YR_CUR_MON_ENDBAL_USD,
      SUM( COALESCE(P_YR_PMTD_TXN ,0)) As P_YR_PMTD_TXN,
      SUM( COALESCE(P_YR_PMTD_USD ,0)) As P_YR_PMTD_USD
	  FROM
FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F F
LEFT JOIN FDW_STU_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    AND F.SET_OF_BOOKS_KEY = D.SET_OF_BOOKS_ID
where F.SET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID
AND F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
AND F.PERIOD_KEY  = :PARAM_PERIOD_KEY
AND F.BUSINESS_ENTITY_KEY  between '6000' and '9999' 
group by 
      PERIOD_KEY   ,
      D.TEMPLATE_NAME  ,
      BUSINESS_ENTITY_KEY   ,
      ACCOUNT__KEY   ,
      DEPARTMENT_KEY   ,
      PRODUCT_SEASON_EPISODE_KEY   ,
      MEDIUM_KEY   ,
	  TERRITORY_KEY   ,
      INTERCOMPANY_KEY   ,
      USER_DEFINED_KEY   ,
	  VENDOR_KEY ,
	  FUTURE_KEY ,
	  GL_BUDGET_KEY ,
	  CURRENCY_KEY  ) AB ;

);
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UO_CTD  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

-- DELETE Data
DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UO WHERE  OASEM_BI_GL_ACCT_BAL_F_UO.period_key = :PARAM_PERIOD_KEY  
AND OASEM_BI_GL_ACCT_BAL_F_UO.set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

-- INSERT Data
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UO

SELECT	SET_OF_BOOKS_KEY, PERIOD_KEY, D.TEMPLATE_NAME As FCS_ACCOUNT_NUM, BUSINESS_ENTITY_KEY,
		ACCOUNT__KEY, DEPARTMENT_KEY, PRODUCT_SEASON_EPISODE_KEY, MEDIUM_KEY,
		DETAIL_KEY, TERRITORY_KEY, INTERCOMPANY_KEY, USER_DEFINED_KEY,
		F.FUTURE_KEY As VENDOR_KEY, '00000000' As FUTURE_KEY, GL_ACCOUNT_KEY, GL_BUDGET_KEY, LAST_UPDATE_DATE,
		F.TEMPLATE_KEY, CODE_COMBINATION_ID, CURRENCY_KEY, COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) As CONV_VENDOR_KEY,
		
	  COALESCE(ACTUAL_BEGIN_BALANCE_TXN,0) AS ACTUAL_BEGIN_BALANCE_TXN,
      COALESCE(ACTUAL_BEGIN_BALANCE_USD,0)  As ACTUAL_BEGIN_BALANCE_USD,
      COALESCE(ACTUAL_ENDING_BALANCE_TXN,0) As ACTUAL_ENDING_BALANCE_TXN,
      COALESCE(ACTUAL_ENDING_BALANCE_USD,0) As ACTUAL_ENDING_BALANCE_USD,
      COALESCE(BUDGET_BEGIN_BALANCE_TXN,0)  As BUDGET_BEGIN_BALANCE_TXN,
      COALESCE(BUDGET_BEGIN_BALANCE_USD,0) As BUDGET_BEGIN_BALANCE_USD ,
      COALESCE(BUDGET_ENDING_BALANCE_TXN,0) As BUDGET_ENDING_BALANCE_TXN ,
      COALESCE(BUDGET_ENDING_BALANCE_USD,0) As BUDGET_ENDING_BALANCE_USD ,
      COALESCE(PROJECT_TO_DATE_CR_TXN,0)  As PROJECT_TO_DATE_CR_TXN,
      COALESCE(PROJECT_TO_DATE_CR_USD,0) As PROJECT_TO_DATE_CR_USD,
      COALESCE(PROJECT_TO_DATE_DR_TXN,0) As PROJECT_TO_DATE_DR_TXN,
      COALESCE(PROJECT_TO_DATE_DR_USD,0) As PROJECT_TO_DATE_DR_USD ,
      COALESCE(PROJ_BAL_ACTUAL_TXN,0) As PROJ_BAL_ACTUAL_TXN,
      COALESCE(PROJ_BAL_ACTUAL_USD,0) As PROJ_BAL_ACTUAL_USD,
      COALESCE(PROJ_BAL_BUDGET_TXN,0) As PROJ_BAL_BUDGET_TXN,
      COALESCE(PROJ_BAL_BUDGET_USD,0) As PROJ_BAL_BUDGET_USD ,  
      COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_TXN,0) As PTD_ACTUAL_BEGIN_BAL_CR_TXN ,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_USD,0) As PTD_ACTUAL_BEGIN_BAL_CR_USD,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_TXN,0) As PTD_ACTUAL_BEGIN_BAL_DR_TXN,
      COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_USD,0) As PTD_ACTUAL_BEGIN_BAL_DR_USD,
      COALESCE(PTD_ACTUAL_CREDITS_TXN,0) As PTD_ACTUAL_CREDITS_TXN,
      COALESCE(PTD_ACTUAL_CREDITS_USD,0) As PTD_ACTUAL_CREDITS_USD,
      COALESCE(PTD_ACTUAL_DEBITS_TXN,0) As PTD_ACTUAL_DEBITS_TXN,
      COALESCE(PTD_ACTUAL_DEBITS_USD,0) As PTD_ACTUAL_DEBITS_USD,
      COALESCE(PTD_ACTUAL_NET_ACTIVITY_TXN,0) As PTD_ACTUAL_NET_ACTIVITY_TXN ,
      COALESCE(PTD_ACTUAL_NET_ACTIVITY_USD,0) As PTD_ACTUAL_NET_ACTIVITY_USD ,
      COALESCE(PTD_BUDGET_ACTIVITY_TXN,0)  As PTD_BUDGET_ACTIVITY_TXN,
      COALESCE(PTD_BUDGET_ACTIVITY_USD,0)  As PTD_BUDGET_ACTIVITY_USD,
      COALESCE(PTD_BUDGET_BEGIN_BAL_CR_TXN,0)  As PTD_BUDGET_BEGIN_BAL_CR_TXN,
      COALESCE(PTD_BUDGET_BEGIN_BAL_CR_USD,0)  As PTD_BUDGET_BEGIN_BAL_CR_USD,
      COALESCE(PTD_BUDGET_BEGIN_BAL_DR_TXN,0)  As PTD_BUDGET_BEGIN_BAL_DR_TXN,
      COALESCE(PTD_BUDGET_BEGIN_BAL_DR_USD,0)  As PTD_BUDGET_BEGIN_BAL_DR_USD,
      COALESCE(PTD_BUDGET_CREDITS_TXN,0)  As PTD_BUDGET_CREDITS_TXN,
      COALESCE(PTD_BUDGET_CREDITS_USD,0)  As PTD_BUDGET_CREDITS_USD,
      COALESCE(PTD_BUDGET_DEBITS_TXN,0)  As PTD_BUDGET_DEBITS_TXN,
      COALESCE(PTD_BUDGET_DEBITS_USD,0)  As PTD_BUDGET_DEBITS_USD,  
      COALESCE(PTD_BUDGET_NET_ACTIVITY_TXN,0)  As PTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(PTD_BUDGET_NET_ACTIVITY_USD,0)  As PTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(PTD_BUDGET_TXN,0)  As PTD_BUDGET_TXN,
      COALESCE(PTD_BUDGET_USD,0)  As PTD_BUDGET_USD,
      COALESCE(PTD_VARIANCE_TXN,0)  As PTD_VARIANCE_TXN,
      COALESCE(PTD_VARIANCE_USD,0)  As PTD_VARIANCE_USD,
      COALESCE(P_MTD_ACT_NET_ACTIVITY_TXN,0)  As P_MTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_MTD_ACT_NET_ACTIVITY_USD,0)  As P_MTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_QTD_ACT_NET_ACTIVITY_TXN ,0) As P_QTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_QTD_ACT_NET_ACTIVITY_USD ,0) As P_QTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_YR_ACT_NET_ACTIVITY_TXN,0)  As P_YR_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_ACT_NET_ACTIVITY_USD,0)  As P_YR_ACT_NET_ACTIVITY_USD ,
      COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_TXN ,0) P_YR_MTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_USD,0)  As P_YR_MTD_ACT_NET_ACTIVITY_USD ,
      COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_TXN,0)  As P_YR_QTD_ACT_NET_ACTIVITY_TXN,
      COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_USD,0)  As P_YR_QTD_ACT_NET_ACTIVITY_USD,
      COALESCE(P_YTD_ACT_NET_ACTIVITY_TXN,0)  As P_YTD_ACT_NET_ACTIVITY_TXN ,
      COALESCE(P_YTD_ACT_NET_ACTIVITY_USD,0)  As P_YTD_ACT_NET_ACTIVITY_USD ,
      COALESCE(QBAL_ACTUAL_TXN,0)  As QBAL_ACTUAL_TXN,
      COALESCE(QBAL_ACTUAL_USD,0)  As QBAL_ACTUAL_USD,
      COALESCE(QBAL_BUDGET_TXN,0)  As QBAL_BUDGET_TXN,
      COALESCE(QBAL_BUDGET_USD,0)  As QBAL_BUDGET_USD,
      COALESCE(QTD_ACTUAL_CREDITS_TXN,0)  As QTD_ACTUAL_CREDITS_TXN ,
      COALESCE(QTD_ACTUAL_CREDITS_USD,0)  As QTD_ACTUAL_CREDITS_USD ,
      COALESCE(QTD_ACTUAL_DEBITS_TXN,0)  As QTD_ACTUAL_DEBITS_TXN ,
      COALESCE(QTD_ACTUAL_DEBITS_USD,0)  As  QTD_ACTUAL_DEBITS_USD,
      COALESCE(QTD_ACTUAL_NET_ACTIVITY_TXN,0)  As QTD_ACTUAL_NET_ACTIVITY_TXN,
      COALESCE(QTD_ACTUAL_NET_ACTIVITY_USD,0)  As QTD_ACTUAL_NET_ACTIVITY_USD,
      COALESCE(QTD_BUDGET_CREDITS_TXN,0)  As QTD_BUDGET_CREDITS_TXN,
      COALESCE(QTD_BUDGET_CREDITS_USD,0)  As QTD_BUDGET_CREDITS_USD,
      COALESCE(QTD_BUDGET_DEBITS_TXN,0)  As QTD_BUDGET_DEBITS_TXN ,
      COALESCE(QTD_BUDGET_DEBITS_USD,0)  As QTD_BUDGET_DEBITS_USD,
      COALESCE(QTD_BUDGET_NET_ACTIVITY_TXN,0)  As QTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(QTD_BUDGET_NET_ACTIVITY_USD,0)  As QTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(QTD_VARIANCE_TXN ,0) As QTD_VARIANCE_TXN,
      COALESCE(QTD_VARIANCE_USD ,0) As QTD_VARIANCE_USD,
      COALESCE(YBAL_ACTUAL_TXN ,0) As YBAL_ACTUAL_TXN,
      COALESCE(YBAL_ACTUAL_USD ,0) As YBAL_ACTUAL_USD,
      COALESCE(YBAL_BUDGET_TXN,0)  As YBAL_BUDGET_TXN ,
      COALESCE(YBAL_BUDGET_USD ,0)  As YBAL_BUDGET_USD,
      COALESCE(YTD_ACTUAL_CREDITS_TXN ,0) As YTD_ACTUAL_CREDITS_TXN,
      COALESCE(YTD_ACTUAL_CREDITS_USD ,0) As YTD_ACTUAL_CREDITS_USD,
      COALESCE(YTD_ACTUAL_DEBITS_TXN,0)  As YTD_ACTUAL_DEBITS_TXN,
      COALESCE(YTD_ACTUAL_DEBITS_USD ,0) As YTD_ACTUAL_DEBITS_USD,
      COALESCE(YTD_ACTUAL_NET_ACTIVITY_TXN ,0) As YTD_ACTUAL_NET_ACTIVITY_TXN,
      COALESCE(YTD_ACTUAL_NET_ACTIVITY_USD ,0) As YTD_ACTUAL_NET_ACTIVITY_USD,
      COALESCE(YTD_BUDGET_CREDITS_TXN,0)  As YTD_BUDGET_CREDITS_TXN ,
      COALESCE(YTD_BUDGET_CREDITS_USD,0)  As YTD_BUDGET_CREDITS_USD,
      COALESCE(YTD_BUDGET_DEBITS_TXN ,0) AS YTD_BUDGET_DEBITS_TXN,
      COALESCE(YTD_BUDGET_DEBITS_USD ,0) As YTD_BUDGET_DEBITS_USD,
      COALESCE(YTD_BUDGET_NET_ACTIVITY_TXN ,0) As YTD_BUDGET_NET_ACTIVITY_TXN,
      COALESCE(YTD_BUDGET_NET_ACTIVITY_USD ,0) AS YTD_BUDGET_NET_ACTIVITY_USD,
      COALESCE(YTD_VARIANCE_TXN ,0) As YTD_VARIANCE_TXN,
      COALESCE(YTD_VARIANCE_USD ,0) As YTD_VARIANCE_USD,
      COALESCE(P_YR_CUR_MON_BEGBAL_TXN ,0) As P_YR_CUR_MON_BEGBAL_TXN,
      COALESCE(P_YR_CUR_MON_BEGBAL_USD,0)  As P_YR_CUR_MON_BEGBAL_USD ,
      COALESCE(P_YR_CUR_MON_ENDBAL_TXN ,0) As P_YR_CUR_MON_ENDBAL_TXN,
      COALESCE(P_YR_CUR_MON_ENDBAL_USD ,0) As P_YR_CUR_MON_ENDBAL_USD,
      COALESCE(P_YR_PMTD_TXN ,0) As P_YR_PMTD_TXN,
      COALESCE(P_YR_PMTD_USD ,0) As P_YR_PMTD_USD
FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F F
LEFT      JOIN FDM_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID 
AND F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
AND F.period_key = :PARAM_PERIOD_KEY
AND F.BUSINESS_ENTITY_KEY  between '0000' and '5999'  
and 
( ACTUAL_BEGIN_BALANCE_TXN <> 0
or ACTUAL_BEGIN_BALANCE_USD <> 0
or PTD_ACTUAL_NET_ACTIVITY_TXN <> 0
or PTD_ACTUAL_NET_ACTIVITY_USD <> 0 
or ACTUAL_ENDING_BALANCE_TXN <> 0
or ACTUAL_ENDING_BALANCE_USD <>0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UO_STU  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

-- DELETE Data
DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UO WHERE  OASEM_BI_GL_ACCT_BAL_F_UO.period_key = :PARAM_PERIOD_KEY  
AND OASEM_BI_GL_ACCT_BAL_F_UO.set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

-- INSERT Data
INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UO
SELECT * from (

 SELECT    MAX(SET_OF_BOOKS_KEY)  AS SET_OF_BOOKS_KEY,
      PERIOD_KEY   ,
      D.TEMPLATE_NAME AS FCS_ACCOUNT_NUM ,
      BUSINESS_ENTITY_KEY   ,
      ACCOUNT__KEY   ,
      DEPARTMENT_KEY   ,
      PRODUCT_SEASON_EPISODE_KEY   ,
      MEDIUM_KEY   ,
      '00000000' DETAIL_KEY  ,
      TERRITORY_KEY   ,
      INTERCOMPANY_KEY   ,
      USER_DEFINED_KEY   ,
      MAX(F.FUTURE_KEY ) AS VENDOR_KEY  ,
      '00000000' AS FUTURE_KEY  ,
      MAX(GL_ACCOUNT_KEY)   As GL_ACCOUNT_KEY,
      GL_BUDGET_KEY   ,
      MAX(F.LAST_UPDATE_DATE)  As LAST_UPDATE_DATE,
      MAX(F.TEMPLATE_KEY) As TEMPLATE_KEY ,
      MAX(CODE_COMBINATION_ID)  As CODE_COMBINATION_ID,
      CURRENCY_KEY ,
      COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) As CONV_VENDOR_KEY ,
      SUM( COALESCE(ACTUAL_BEGIN_BALANCE_TXN,0)) AS ACTUAL_BEGIN_BALANCE_TXN,
      SUM( COALESCE(ACTUAL_BEGIN_BALANCE_USD,0))  As ACTUAL_BEGIN_BALANCE_USD,
      SUM( COALESCE(ACTUAL_ENDING_BALANCE_TXN,0)) As ACTUAL_ENDING_BALANCE_TXN,
      SUM( COALESCE(ACTUAL_ENDING_BALANCE_USD,0)) As ACTUAL_ENDING_BALANCE_USD,
      SUM( COALESCE(BUDGET_BEGIN_BALANCE_TXN,0))  As BUDGET_BEGIN_BALANCE_TXN,
      SUM( COALESCE(BUDGET_BEGIN_BALANCE_USD,0)) As BUDGET_BEGIN_BALANCE_USD ,
      SUM( COALESCE(BUDGET_ENDING_BALANCE_TXN,0)) As BUDGET_ENDING_BALANCE_TXN ,
      SUM( COALESCE(BUDGET_ENDING_BALANCE_USD,0)) As BUDGET_ENDING_BALANCE_USD ,
      SUM( COALESCE(PROJECT_TO_DATE_CR_TXN,0))  As PROJECT_TO_DATE_CR_TXN,
      SUM( COALESCE(PROJECT_TO_DATE_CR_USD,0)) As PROJECT_TO_DATE_CR_USD,
      SUM( COALESCE(PROJECT_TO_DATE_DR_TXN,0)) As PROJECT_TO_DATE_DR_TXN,
      SUM( COALESCE(PROJECT_TO_DATE_DR_USD,0)) As PROJECT_TO_DATE_DR_USD ,
      SUM( COALESCE(PROJ_BAL_ACTUAL_TXN,0)) As PROJ_BAL_ACTUAL_TXN,
      SUM( COALESCE(PROJ_BAL_ACTUAL_USD,0)) As PROJ_BAL_ACTUAL_USD,
      SUM( COALESCE(PROJ_BAL_BUDGET_TXN,0)) As PROJ_BAL_BUDGET_TXN,
      SUM( COALESCE(PROJ_BAL_BUDGET_USD,0)) As PROJ_BAL_BUDGET_USD ,  
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_TXN,0)) As PTD_ACTUAL_BEGIN_BAL_CR_TXN ,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_CR_USD,0)) As PTD_ACTUAL_BEGIN_BAL_CR_USD,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_TXN,0)) As PTD_ACTUAL_BEGIN_BAL_DR_TXN,
      SUM( COALESCE(PTD_ACTUAL_BEGIN_BAL_DR_USD,0)) As PTD_ACTUAL_BEGIN_BAL_DR_USD,
      SUM( COALESCE(PTD_ACTUAL_CREDITS_TXN,0)) As PTD_ACTUAL_CREDITS_TXN,
      SUM( COALESCE(PTD_ACTUAL_CREDITS_USD,0)) As PTD_ACTUAL_CREDITS_USD,
      SUM( COALESCE(PTD_ACTUAL_DEBITS_TXN,0)) As PTD_ACTUAL_DEBITS_TXN,
      SUM( COALESCE(PTD_ACTUAL_DEBITS_USD,0)) As PTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(PTD_ACTUAL_NET_ACTIVITY_TXN,0)) As PTD_ACTUAL_NET_ACTIVITY_TXN ,
      SUM( COALESCE(PTD_ACTUAL_NET_ACTIVITY_USD,0)) As PTD_ACTUAL_NET_ACTIVITY_USD ,
      SUM( COALESCE(PTD_BUDGET_ACTIVITY_TXN,0))  As PTD_BUDGET_ACTIVITY_TXN,
      SUM( COALESCE(PTD_BUDGET_ACTIVITY_USD,0))  As PTD_BUDGET_ACTIVITY_USD,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_CR_TXN,0))  As PTD_BUDGET_BEGIN_BAL_CR_TXN,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_CR_USD,0))  As PTD_BUDGET_BEGIN_BAL_CR_USD,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_DR_TXN,0))  As PTD_BUDGET_BEGIN_BAL_DR_TXN,
      SUM( COALESCE(PTD_BUDGET_BEGIN_BAL_DR_USD,0))  As PTD_BUDGET_BEGIN_BAL_DR_USD,
      SUM( COALESCE(PTD_BUDGET_CREDITS_TXN,0))  As PTD_BUDGET_CREDITS_TXN,
      SUM( COALESCE(PTD_BUDGET_CREDITS_USD,0))  As PTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(PTD_BUDGET_DEBITS_TXN,0))  As PTD_BUDGET_DEBITS_TXN,
      SUM( COALESCE(PTD_BUDGET_DEBITS_USD,0))  As PTD_BUDGET_DEBITS_USD,  
      SUM( COALESCE(PTD_BUDGET_NET_ACTIVITY_TXN,0))  As PTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(PTD_BUDGET_NET_ACTIVITY_USD,0))  As PTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(PTD_BUDGET_TXN,0))  As PTD_BUDGET_TXN,
      SUM( COALESCE(PTD_BUDGET_USD,0))  As PTD_BUDGET_USD,
      SUM( COALESCE(PTD_VARIANCE_TXN,0))  As PTD_VARIANCE_TXN,
      SUM( COALESCE(PTD_VARIANCE_USD,0))  As PTD_VARIANCE_USD,
      SUM( COALESCE(P_MTD_ACT_NET_ACTIVITY_TXN,0))  As P_MTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_MTD_ACT_NET_ACTIVITY_USD,0))  As P_MTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_QTD_ACT_NET_ACTIVITY_TXN ,0)) As P_QTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_QTD_ACT_NET_ACTIVITY_USD ,0)) As P_QTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_YR_ACT_NET_ACTIVITY_TXN,0))  As P_YR_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_ACT_NET_ACTIVITY_USD,0))  As P_YR_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_TXN ,0)) P_YR_MTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_MTD_ACT_NET_ACTIVITY_USD,0))  As P_YR_MTD_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_TXN,0))  As P_YR_QTD_ACT_NET_ACTIVITY_TXN,
      SUM( COALESCE(P_YR_QTD_ACT_NET_ACTIVITY_USD,0))  As P_YR_QTD_ACT_NET_ACTIVITY_USD,
      SUM( COALESCE(P_YTD_ACT_NET_ACTIVITY_TXN,0))  As P_YTD_ACT_NET_ACTIVITY_TXN ,
      SUM( COALESCE(P_YTD_ACT_NET_ACTIVITY_USD,0))  As P_YTD_ACT_NET_ACTIVITY_USD ,
      SUM( COALESCE(QBAL_ACTUAL_TXN,0))  As QBAL_ACTUAL_TXN,
      SUM( COALESCE(QBAL_ACTUAL_USD,0))  As QBAL_ACTUAL_USD,
      SUM( COALESCE(QBAL_BUDGET_TXN,0))  As QBAL_BUDGET_TXN,
      SUM( COALESCE(QBAL_BUDGET_USD,0))  As QBAL_BUDGET_USD,
      SUM( COALESCE(QTD_ACTUAL_CREDITS_TXN,0))  As QTD_ACTUAL_CREDITS_TXN ,
      SUM( COALESCE(QTD_ACTUAL_CREDITS_USD,0))  As QTD_ACTUAL_CREDITS_USD ,
      SUM( COALESCE(QTD_ACTUAL_DEBITS_TXN,0))  As QTD_ACTUAL_DEBITS_TXN ,
      SUM( COALESCE(QTD_ACTUAL_DEBITS_USD,0))  As  QTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(QTD_ACTUAL_NET_ACTIVITY_TXN,0))  As QTD_ACTUAL_NET_ACTIVITY_TXN,
      SUM( COALESCE(QTD_ACTUAL_NET_ACTIVITY_USD,0))  As QTD_ACTUAL_NET_ACTIVITY_USD,
      SUM( COALESCE(QTD_BUDGET_CREDITS_TXN,0))  As QTD_BUDGET_CREDITS_TXN,
      SUM( COALESCE(QTD_BUDGET_CREDITS_USD,0))  As QTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(QTD_BUDGET_DEBITS_TXN,0))  As QTD_BUDGET_DEBITS_TXN ,
      SUM( COALESCE(QTD_BUDGET_DEBITS_USD,0))  As QTD_BUDGET_DEBITS_USD,
      SUM( COALESCE(QTD_BUDGET_NET_ACTIVITY_TXN,0))  As QTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(QTD_BUDGET_NET_ACTIVITY_USD,0))  As QTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(QTD_VARIANCE_TXN ,0)) As QTD_VARIANCE_TXN,
      SUM( COALESCE(QTD_VARIANCE_USD ,0)) As QTD_VARIANCE_USD,
      SUM( COALESCE(YBAL_ACTUAL_TXN ,0)) As YBAL_ACTUAL_TXN,
      SUM( COALESCE(YBAL_ACTUAL_USD ,0)) As YBAL_ACTUAL_USD,
      SUM( COALESCE(YBAL_BUDGET_TXN,0))  As YBAL_BUDGET_TXN ,
      SUM( COALESCE(YBAL_BUDGET_USD ,0))  As YBAL_BUDGET_USD,
      SUM( COALESCE(YTD_ACTUAL_CREDITS_TXN ,0)) As YTD_ACTUAL_CREDITS_TXN,
      SUM( COALESCE(YTD_ACTUAL_CREDITS_USD ,0)) As YTD_ACTUAL_CREDITS_USD,
      SUM( COALESCE(YTD_ACTUAL_DEBITS_TXN,0))  As YTD_ACTUAL_DEBITS_TXN,
      SUM( COALESCE(YTD_ACTUAL_DEBITS_USD ,0)) As YTD_ACTUAL_DEBITS_USD,
      SUM( COALESCE(YTD_ACTUAL_NET_ACTIVITY_TXN ,0)) As YTD_ACTUAL_NET_ACTIVITY_TXN,
      SUM( COALESCE(YTD_ACTUAL_NET_ACTIVITY_USD ,0)) As YTD_ACTUAL_NET_ACTIVITY_USD,
      SUM( COALESCE(YTD_BUDGET_CREDITS_TXN,0))  As YTD_BUDGET_CREDITS_TXN ,
      SUM( COALESCE(YTD_BUDGET_CREDITS_USD,0))  As YTD_BUDGET_CREDITS_USD,
      SUM( COALESCE(YTD_BUDGET_DEBITS_TXN ,0)) AS YTD_BUDGET_DEBITS_TXN,
      SUM( COALESCE(YTD_BUDGET_DEBITS_USD ,0)) As YTD_BUDGET_DEBITS_USD,
      SUM( COALESCE(YTD_BUDGET_NET_ACTIVITY_TXN ,0)) As YTD_BUDGET_NET_ACTIVITY_TXN,
      SUM( COALESCE(YTD_BUDGET_NET_ACTIVITY_USD ,0)) AS YTD_BUDGET_NET_ACTIVITY_USD,
      SUM( COALESCE(YTD_VARIANCE_TXN ,0)) As YTD_VARIANCE_TXN,
      SUM( COALESCE(YTD_VARIANCE_USD ,0)) As YTD_VARIANCE_USD,
      SUM( COALESCE(P_YR_CUR_MON_BEGBAL_TXN ,0)) As P_YR_CUR_MON_BEGBAL_TXN,
      SUM( COALESCE(P_YR_CUR_MON_BEGBAL_USD,0))  As P_YR_CUR_MON_BEGBAL_USD ,
      SUM( COALESCE(P_YR_CUR_MON_ENDBAL_TXN ,0)) As P_YR_CUR_MON_ENDBAL_TXN,
      SUM( COALESCE(P_YR_CUR_MON_ENDBAL_USD ,0)) As P_YR_CUR_MON_ENDBAL_USD,
      SUM( COALESCE(P_YR_PMTD_TXN ,0)) As P_YR_PMTD_TXN,
      SUM( COALESCE(P_YR_PMTD_USD ,0)) As P_YR_PMTD_USD
	  	  FROM
FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F F 
LEFT      JOIN FDM_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
where F.SET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID
AND F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
AND F.PERIOD_KEY = :PARAM_PERIOD_KEY
AND F.BUSINESS_ENTITY_KEY  between '6000' and '9999'  
group by 
      PERIOD_KEY   ,
      D.TEMPLATE_NAME  ,
      BUSINESS_ENTITY_KEY   ,
      ACCOUNT__KEY   ,
      DEPARTMENT_KEY   ,
      PRODUCT_SEASON_EPISODE_KEY   ,
      MEDIUM_KEY   ,
	  TERRITORY_KEY   ,
      INTERCOMPANY_KEY   ,
      USER_DEFINED_KEY   ,
	  GL_BUDGET_KEY ,
	  CURRENCY_KEY ,
      CONV_VENDOR_KEY   ) AB ;
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UPD
AS ( 
   -------------BI_P_MTD_UPDATE------------------------
Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_MTD_UPDATE_HIST b1

Set 
P_MTD_ACT_NET_ACTIVITY_TXN = b1.P_MTD_ACT_NET_ACTIVITY_TXN,
P_MTD_ACT_NET_ACTIVITY_USD = b1.P_MTD_ACT_NET_ACTIVITY_USD,
P_YTD_ACT_NET_ACTIVITY_TXN = b1.P_YTD_ACT_NET_ACTIVITY_TXN,
P_YTD_ACT_NET_ACTIVITY_USD = b1.P_YTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_YR_MTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_YR_MTD_UPDATE_HIST b1

Set 
P_YR_MTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
P_YR_MTD_ACT_NET_ACTIVITY_USD = b1.P_YR_MTD_ACT_NET_ACTIVITY_USD,
P_YR_QTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
P_YR_QTD_ACT_NET_ACTIVITY_USD = b1.P_YR_QTD_ACT_NET_ACTIVITY_USD,
P_YR_ACT_NET_ACTIVITY_TXN = b1.P_YR_ACT_NET_ACTIVITY_TXN,
P_YR_ACT_NET_ACTIVITY_USD = b1.P_YR_ACT_NET_ACTIVITY_USD,
P_YR_CUR_MON_BEGBAL_TXN = b1.P_YR_CUR_MON_BEGBAL_TXN,
P_YR_CUR_MON_BEGBAL_USD = b1.P_YR_CUR_MON_BEGBAL_USD,
P_YR_CUR_MON_ENDBAL_TXN = b1.P_YR_CUR_MON_ENDBAL_TXN,
P_YR_CUR_MON_ENDBAL_USD = b1.P_YR_CUR_MON_ENDBAL_USD,
P_YR_PMTD_TXN = b1.P_YR_PMTD_TXN,
P_YR_PMTD_USD = b1.P_YR_PMTD_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_QTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_QTD_UPDATE_HIST b1

Set 
P_QTD_ACT_NET_ACTIVITY_TXN = b1.P_QTD_ACT_NET_ACTIVITY_TXN,
P_QTD_ACT_NET_ACTIVITY_USD = b1.P_QTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;
);
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UV_CTD   (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT ) AS(

--DELETE existing data

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UV WHERE (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) 
AND (OBUSINESS_ENTITY_KEY BETWEEN  '0000' and '5999' or NSET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  );

--INSERT data

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UV
SELECT 
OASEM_BI_GL_ACCT_BAL_F_UO.SET_OF_BOOKS_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.PERIOD_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.FCS_ACCOUNT_NUM,
OASEM_BI_GL_ACCT_BAL_F_UO.BUSINESS_ENTITY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.ACCOUNT__KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.DEPARTMENT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.PRODUCT_SEASON_EPISODE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.MEDIUM_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.DETAIL_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.TERRITORY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.INTERCOMPANY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.USER_DEFINED_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.FUTURE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.GL_ACCOUNT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.GL_BUDGET_KEY,
 CURRENT_DATE 	AS	  OPROCESS_DATE,
OASEM_BI_GL_ACCT_BAL_F_UO.TEMPLATE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.CODE_COMBINATION_ID,
OASEM_BI_GL_ACCT_BAL_F_UO.CURRENCY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.CONV_VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_BEGBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_BEGBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_ENDBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_ENDBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_PMTD_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_PMTD_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.SET_OF_BOOKS_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.PERIOD_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.FCS_ACCOUNT_NUM,
OASEM_BI_GL_ACCT_BAL_F_UN.BUSINESS_ENTITY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.ACCOUNT__KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.DEPARTMENT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.PRODUCT_SEASON_EPISODE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.MEDIUM_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.DETAIL_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.TERRITORY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.INTERCOMPANY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.USER_DEFINED_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.FUTURE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.GL_ACCOUNT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.GL_BUDGET_KEY,
CURRENT_DATE AS NPROCESS_DATE,
OASEM_BI_GL_ACCT_BAL_F_UN.TEMPLATE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.CODE_COMBINATION_ID,
OASEM_BI_GL_ACCT_BAL_F_UN.CURRENCY_KEY,  
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_BEGBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_BEGBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_ENDBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_ENDBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_PMTD_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_PMTD_USD,
(COALESCE(OASEM_BI_GL_ACCT_BAL_F_UO.SET_OF_BOOKS_KEY,0)- COALESCE(OASEM_BI_GL_ACCT_BAL_F_UN.SET_OF_BOOKS_KEY,0) ) AS VSET_OF_BOOKS_KEY ,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.PERIOD_KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.PERIOD_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	)	AS	VPERIOD_KEY,
(coalesce(OASEM_BI_GL_ACCT_BAL_F_UO.FCS_ACCOUNT_NUM,0) - coalesce(OASEM_BI_GL_ACCT_BAL_F_UN.FCS_ACCOUNT_NUM,0) )	AS	VFCS_ACCOUNT_NUM,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.BUSINESS_ENTITY_KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.BUSINESS_ENTITY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	)	AS	VBUSINESS_ENTITY_KEY,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.ACCOUNT__KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.ACCOUNT__KEY	THEN
REPLACE MACRO FDW_MACROS_DB.MAC_BI_GL_ACCT_BAL_F_UV_STU   (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT ) AS(

--DELETE existing data

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UV WHERE (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) 
AND (OBUSINESS_ENTITY_KEY BETWEEN  '6000' and '9999' or NSET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  );

--INSERT data

 INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_UV  
SELECT 
OASEM_BI_GL_ACCT_BAL_F_UO.SET_OF_BOOKS_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.PERIOD_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.FCS_ACCOUNT_NUM,
OASEM_BI_GL_ACCT_BAL_F_UO.BUSINESS_ENTITY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.ACCOUNT__KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.DEPARTMENT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.PRODUCT_SEASON_EPISODE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.MEDIUM_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.DETAIL_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.TERRITORY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.INTERCOMPANY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.USER_DEFINED_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.FUTURE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.GL_ACCOUNT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.GL_BUDGET_KEY,
 CURRENT_DATE 	AS	  OPROCESS_DATE,
OASEM_BI_GL_ACCT_BAL_F_UO.TEMPLATE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.CODE_COMBINATION_ID,
OASEM_BI_GL_ACCT_BAL_F_UO.CURRENCY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.CONV_VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.ACTUAL_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.BUDGET_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJECT_TO_DATE_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PROJ_BAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.PTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.QTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.YTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_BEGBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_BEGBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_ENDBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_CUR_MON_ENDBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_PMTD_TXN,
OASEM_BI_GL_ACCT_BAL_F_UO.P_YR_PMTD_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.SET_OF_BOOKS_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.PERIOD_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.FCS_ACCOUNT_NUM,
OASEM_BI_GL_ACCT_BAL_F_UN.BUSINESS_ENTITY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.ACCOUNT__KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.DEPARTMENT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.PRODUCT_SEASON_EPISODE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.MEDIUM_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.DETAIL_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.TERRITORY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.INTERCOMPANY_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.USER_DEFINED_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.FUTURE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.GL_ACCOUNT_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.GL_BUDGET_KEY,
CURRENT_DATE AS NPROCESS_DATE,
OASEM_BI_GL_ACCT_BAL_F_UN.TEMPLATE_KEY,
OASEM_BI_GL_ACCT_BAL_F_UN.CODE_COMBINATION_ID,
OASEM_BI_GL_ACCT_BAL_F_UN.CURRENCY_KEY,  
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.ACTUAL_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_BEGIN_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_BEGIN_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_ENDING_BALANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.BUDGET_ENDING_BALANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJECT_TO_DATE_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PROJ_BAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.PTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.QTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.YTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_BEGBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_BEGBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_ENDBAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_CUR_MON_ENDBAL_USD,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_PMTD_TXN,
OASEM_BI_GL_ACCT_BAL_F_UN.P_YR_PMTD_USD,
(COALESCE(OASEM_BI_GL_ACCT_BAL_F_UO.SET_OF_BOOKS_KEY,0)- COALESCE(OASEM_BI_GL_ACCT_BAL_F_UN.SET_OF_BOOKS_KEY,0) ) AS VSET_OF_BOOKS_KEY ,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.PERIOD_KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.PERIOD_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	)	AS	VPERIOD_KEY,
(coalesce(OASEM_BI_GL_ACCT_BAL_F_UO.FCS_ACCOUNT_NUM,0) - coalesce(OASEM_BI_GL_ACCT_BAL_F_UN.FCS_ACCOUNT_NUM,0) )	AS	VFCS_ACCOUNT_NUM,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.BUSINESS_ENTITY_KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.BUSINESS_ENTITY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	)	AS	VBUSINESS_ENTITY_KEY,
(	CASE	WHEN	OASEM_BI_GL_ACCT_BAL_F_UO.ACCOUNT__KEY	<>	OASEM_BI_GL_ACCT_BAL_F_UN.ACCOUNT__KEY	T
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_DP_R_Hier_S AS(

DELETE FROM FDW_TABLES_DB.DP_R_Hier_S;

INSERT INTO FDW_TABLES_DB.DP_R_Hier_S
(
				FLEX_VALUE_SET_ID,
				CHILD_VALUE,
				CHILD_VALUE_DESC,
				PARENT_VALUE,
				TOP_VALUE,
				LEVEL_NO,
				DEPTH,
				SQL_TEXT,
				EXECUTABLE_NAME				
                )
select hs.*,e.table_name
 from fdw_sem_db.DP_RV_Hier_V hs,fdw_tables_db.OA3NF_OA_KeyFlex_Hier md,
      fdw_tables_db.OA3NF_FLEXVALUE_TABLE_MAP e
 where md.flex_value_set_name = e.FLEX_VALUE_SET_NAME
 and hs.flex_value_set_id = md.flex_value_set_id
 and hs.top_value = md.parent_flex_value;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_LOAD_BI_GL_ACCT_BAL_F_HIST 
AS (

INSERT INTO FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s ( 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD	
   )



SELECT 
OA3NF_COA.ACCOUNT_TYPE AS ACCOUNT_TYPE_KEY,
OA3NF_COA.SEGMENT2 AS ACCOUNT__KEY, 
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR END) AS ACTUAL_BEGIN_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG
 WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 
ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END) AS ACTUAL_BEGIN_BALANCE_USD,
(CASE 	OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR 
END) - (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END) AS ACTUAL_ENDING_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG
 WHEN 'B' THEN 0 ELSE  
			OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR 
END)
  -	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE 
			OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR 
END)AS ACTUAL_ENDING_BALANCE_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR ELSE 0 END)AS BUDGET_BEGIN_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END)AS BUDGET_BEGIN_BALANCE_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)AS BUDGET_ENDING_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END)AS BUDGET_ENDING_BALANCE_USD,
OA3NF_COA.SEGMENT1 AS BUSINESS_ENTITY_KEY,
OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID AS CODE_COMBINATION_ID,
OA3NF_GL_BALANCES_CORR.CURRENCY_CD AS CURRENCY_KEY,
OA3NF_COA.SEGMENT3 AS DEPARTMENT_KEY,
OA3NF_COA.SEGMENT5 AS DETAIL_KEY,
OA3NF_COA.SEGMENT10 AS VENDOR_KEY,
OA3NF_COA.SEGMENT11 AS FUTURE_KEY,
OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID AS GL_ACCOUNT_KEY,
OA3NF_GL_BALANCES_CORR.FINANCIAL_PLAN_ID AS GL_BUDGET_KEY,
OA3NF_COA.SEGMENT9 AS INTERCOMPANY_KEY,
OA3NF_GL_BALANCES_CORR.LAST_UPDATE_DTTM AS LAST_UPDATE_DATE,
OA3NF_COA.SEGMENT7 AS MEDIUM_KEY,
OA3NF_GL_BALANCES_CORR.GL_PERIOD_ID AS PERIOD_KEY,
OA3NF_GL_BALANCES_CORR.PERIOD_YEAR AS PERIOD_YEAR,
OA3NF_COA.SEGMENT4 AS PRODUCT_SEASON_EPISODE_KEY,
OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR AS PROJECT_TO_DATE_CR_TXN
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ AS PROJECT_TO_DATE_CR_USD
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR AS PROJECT_TO_DATE_DR_TXN
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ AS PROJECT_TO_DATE_DR_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR ELSE 0 END) AS PROJ_BAL_ACTUAL_TXN 
,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ
ELSE 0 END) AS PROJ_BAL_ACTUAL_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR
ELSE 0 END) AS PROJ_BAL_BUDGET_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ
ELSE 0 END) AS PROJ_BAL_BUDGET_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR END) AS PTD_ACTUAL_BEGIN_BAL_CR_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END) AS PTD_ACTUAL_BEGIN_BAL_CR_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR END) AS PTD_ACTUAL_BEGIN_BAL_DR_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) AS PTD_ACTUAL_BEGIN_BAL_DR_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END) AS PTD_ACTUAL_CREDITS_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END) AS PTD_ACTUAL_CREDITS_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END) AS PTD_ACTUAL_DEBITS_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END) AS PTD_ACTUAL_DEBITS_USD
   ,((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END)) AS PTD_ACTUAL_NET_ACTIVITY_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END)- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END))AS PTD_ACTUAL_NET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0
END AS PTD_BUDGET_ACTIVITY_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0
END AS PTD_BUDGET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_CR_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_CR_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_DR_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_DR_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR ELSE 0 END AS PTD_BUDGET_CREDITS_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_CREDITS_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END AS PTD_BUDGET_DEBITS_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_DEBITS_USD,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)) AS PTD_BUDGET_NET_ACTIVITY_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END)) AS PTD_BUDGET_NET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR
ELSE 0 END AS PTD_BUDGET_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR
ELSE 0 END AS PTD_BUDGET_USD,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END)) 
- ((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)) AS PTD_VARIANCE_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END)) 
- ((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUA
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_LOAD_BI_GL_ACCT_BAL_F_s (PARAM_STARTTIME TIMESTAMP(6), PARAM_ENDTIME TIMESTAMP(6) )AS (
DELETE FROM FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s ALL;


INSERT INTO FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s ( 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD	
   )



SELECT distinct
OA3NF_COA.ACCOUNT_TYPE AS ACCOUNT_TYPE_KEY,
OA3NF_COA.SEGMENT2 AS ACCOUNT__KEY, 
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR END) AS ACTUAL_BEGIN_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG
 WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 
ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END) AS ACTUAL_BEGIN_BALANCE_USD,
(CASE 	OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR 
END) - (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END) AS ACTUAL_ENDING_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG
 WHEN 'B' THEN 0 ELSE  
			OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR 
END)
  -	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE 
			OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR + OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR 
END)AS ACTUAL_ENDING_BALANCE_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR ELSE 0 END)AS BUDGET_BEGIN_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END)AS BUDGET_BEGIN_BALANCE_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)AS BUDGET_ENDING_BALANCE_TXN,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END) 
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR 
+ OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END)AS BUDGET_ENDING_BALANCE_USD,
OA3NF_COA.SEGMENT1 AS BUSINESS_ENTITY_KEY,
OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID AS CODE_COMBINATION_ID,
OA3NF_GL_BALANCES_CORR.CURRENCY_CD AS CURRENCY_KEY,
OA3NF_COA.SEGMENT3 AS DEPARTMENT_KEY,
OA3NF_COA.SEGMENT5 AS DETAIL_KEY,
OA3NF_COA.SEGMENT10 AS VENDOR_KEY,
OA3NF_COA.SEGMENT11 AS FUTURE_KEY,
OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID AS GL_ACCOUNT_KEY,
OA3NF_GL_BALANCES_CORR.FINANCIAL_PLAN_ID AS GL_BUDGET_KEY,
OA3NF_COA.SEGMENT9 AS INTERCOMPANY_KEY,
OA3NF_GL_BALANCES_CORR.LAST_UPDATE_DTTM AS LAST_UPDATE_DATE,
OA3NF_COA.SEGMENT7 AS MEDIUM_KEY,
OA3NF_GL_BALANCES_CORR.GL_PERIOD_ID AS PERIOD_KEY,
OA3NF_GL_BALANCES_CORR.PERIOD_YEAR AS PERIOD_YEAR,
OA3NF_COA.SEGMENT4 AS PRODUCT_SEASON_EPISODE_KEY,
OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR AS PROJECT_TO_DATE_CR_TXN
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ AS PROJECT_TO_DATE_CR_USD
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR AS PROJECT_TO_DATE_DR_TXN
   ,OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ AS PROJECT_TO_DATE_DR_USD,
(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR ELSE 0 END) AS PROJ_BAL_ACTUAL_TXN 
,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'A' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ
ELSE 0 END) AS PROJ_BAL_ACTUAL_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR
ELSE 0 END) AS PROJ_BAL_BUDGET_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_DR_BEQ - OA3NF_GL_BALANCES_CORR.PROJECT_TO_DATE_CR_BEQ
ELSE 0 END) AS PROJ_BAL_BUDGET_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR END) AS PTD_ACTUAL_BEGIN_BAL_CR_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR END) AS PTD_ACTUAL_BEGIN_BAL_CR_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR END) AS PTD_ACTUAL_BEGIN_BAL_DR_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR END) AS PTD_ACTUAL_BEGIN_BAL_DR_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END) AS PTD_ACTUAL_CREDITS_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END) AS PTD_ACTUAL_CREDITS_USD
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END) AS PTD_ACTUAL_DEBITS_TXN
   ,(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END) AS PTD_ACTUAL_DEBITS_USD
   ,((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END)) AS PTD_ACTUAL_NET_ACTIVITY_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END)- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END))AS PTD_ACTUAL_NET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0
END AS PTD_BUDGET_ACTIVITY_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0
END AS PTD_BUDGET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_CR_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_CR_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_DR_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_BEGIN_BAL_DR_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR ELSE 0 END AS PTD_BUDGET_CREDITS_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_CREDITS_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END AS PTD_BUDGET_DEBITS_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END AS PTD_BUDGET_DEBITS_USD,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)) AS PTD_BUDGET_NET_ACTIVITY_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR ELSE 0 END)	
- (CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR ELSE 0 END)) AS PTD_BUDGET_NET_ACTIVITY_USD,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR
ELSE 0 END AS PTD_BUDGET_TXN,
CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR - OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR
ELSE 0 END AS PTD_BUDGET_USD,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR END)) 
- ((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_CORR ELSE 0 END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_CORR ELSE 0 END)) AS PTD_VARIANCE_TXN,
((CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR END) 
-	(CASE OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG WHEN 'B' THEN 0 ELSE OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR END)) 
- ((CASE OA3NF_GL_BALANCES_CORR.ACT
--LOAD_GL_DETAIL_F_XLA_CTD_s

REPLACE MACRO FDW_MACROS_DB.MAC_LOAD_GL_DETAIL_F_XLA_CTD_s AS(
DELETE FROM FDW_STAGE_DB.LOAD_GL_DETAIL_F_XLA_CTD_s ALL ;
INSERT INTO FDW_STAGE_DB.LOAD_GL_DETAIL_F_XLA_CTD_s  
SELECT  
   F.GL_JE_LINE_KEY As GL_JE_LINE_KEY
,    F.ACCOUNT_TYPE_KEY  As ACCOUNT_TYPE_KEY
,    CASE 
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.INVOICE_NUMBER
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN  PAYMENT.INVOICE_NUMBER
     ELSE F.AP_INVOICE_NUM END As AP_INVOICE_NUM
,    CASE 
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.AP_VENDOR_NAME
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.CHECK_VENDOR_NAME
     ELSE F.AP_VENDOR_NAME END As AP_VENDOR_NAME
    ,    CASE 
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Detail_Amt_Cr_Base
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Detail_Amt_Cr_Base
     ELSE F.BASE_CREDIT_AMOUNT END As BASE_CREDIT_AMOUNT
,    CASE
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Detail_Amt_Dr_Base 
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Detail_Amt_Dr_Base 
     ELSE F.BASE_DEBIT_AMOUNT END As BASE_DEBIT_AMOUNT     
,    F.BATCH_ACTUAL_FLAG  AS BATCH_ACTUAL_FLAG
,    F.BATCH_CATEGORY_NAME  As BATCH_CATEGORY_NAME
,    F.BATCH_NAME  As BATCH_NAME
,    F.BATCH_SOURCE_NAME  As BATCH_SOURCE_NAME
,    F.GL_BATCH_CATEGORY_KEY  As GL_BATCH_CATEGORY_KEY
,    Create_By.USER_NAME As GL_DTL_CREATE_BY_KEY
,    F.GL_POSTED_DATE_KEY As GL_POSTED_DATE_KEY
,    F.HEADER_NAME  As HEADER_NAME
,    F.JE_LINE_DESCRIPTION  As JE_LINE_DESCRIPTION
,    F.JE_LINE_NUMBER  As JE_LINE_NUMBER
,    F.LAST_UPDATE_DATE  As LAST_UPDATE_DATE
,    F.PERIOD_KEY  As PERIOD_KEY
,    F.POSTED_DATE As POSTED_DATE
,    F.POSTING_STATUS As POSTING_STATUS
,    F.SET_OF_BOOKS_KEY As SET_OF_BOOKS_KEY
,    F.SOURCE_SYSTEM_ID As SOURCE_SYSTEM_ID
,    CASE
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Detail_Amt_Cr 
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Detail_Amt_Cr 
     ELSE F.TRX_CREDIT_AMOUNT END As TRX_CREDIT_AMOUNT     
,    F.TRX_CURRENCY_KEY As TRX_CURRENCY_KEY
,    CASE
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Detail_Amt_Dr 
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Detail_Amt_Dr 
     ELSE F.TRX_DEBIT_AMOUNT END As TRX_DEBIT_AMOUNT    
,    CASE
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Net_Amt_Base 
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Net_Amt_Base 
     ELSE F.BASE_BALANCE END As BASE_BALANCE 
,    CASE
     WHEN INV.ENTITY_CODE = 'AP_INVOICES' THEN INV.SLA_Distr_Detail_Amt 
     WHEN PAYMENT.ENTITY_CODE = 'AP_PAYMENTS' THEN PAYMENT.SLA_Distr_Detail_Amt 
     ELSE F.TRX_BALANCE END As TRX_BALANCE
,    F.ACCOUNT__KEY  As ACCOUNT__KEY
,    F.BUSINESS_ENTITY_KEY As BUSINESS_ENTITY_KEY
,    F.DEPARTMENT_KEY As DEPARTMENT_KEY
,    F.DETAIL_KEY As DETAIL_KEY
,    F.VENDOR_KEY  As VENDOR_KEY
,    F.FUTURE_KEY  As FUTURE_KEY
,    F.INTERCOMPANY_KEY  As INTERCOMPANY_KEY
,    F.MEDIUM_KEY  As MEDIUM_KEY
,    F.PRODUCT_SEASON_EPISODE_KEY  As PRODUCT_SEASON_EPISODE_KEY
,    F.TERRITORY_KEY  As TERRITORY_KEY
,    F.USER_DEFINED_KEY  As USER_DEFINED_KEY
,    F.CHART_OF_ACCOUNT_KEY  As CHART_OF_ACCOUNT_KEY
,    F.TEMPLATE_KEY  As TEMPLATE_KEY
,    F.LEG_ENTITY  As LEG_ENTITY
,    F.LEG_GLACCT  As LEG_GLACCT
,    F.LEG_SLACCT  As LEG_SLACCT
,    F.LEG_DEPT  As LEG_DEPT
,    F.LEG_LOCATION  As LEG_LOCATION
,    F.LEG_MEDIUM  As LEG_MEDIUM
,    F.LEG_PROJECT As LEG_PROJECT
,    F.LEG_FUTURE_USERDEF As LEG_FUTURE_USERDEF
,    F.LEG_INTERCO  As LEG_INTERCO
,    F.LEG_COMPANY  As LEG_COMPANY
,    F.LEG_CHECKNUM As LEG_CHECKNUM
,    F.LEG_CHECKDT  As LEG_CHECKDT
,    F.LEG_AP_VENDOR_NUM  As LEG_AP_VENDOR_NUM
,    F.LEG_INVOICE  As LEG_INVOICE
,    F.LEG_CHARGE_DT  As LEG_CHARGE_DT
,    F.LEG_JOURNAL_ID  As LEG_JOURNAL_ID
,    F.LEG_AP_VENDOR  As LEG_AP_VENDOR
,    F.LEG_PRODUCT  As LEG_PRODUCT
,    F.LEG_VENDOR As LEG_VENDOR
,    Posted_By.USER_NAME  As POSTED_BY
,  Posted_By.DESCRIPTION As POSTED_BY_NAME
,    F.CURRENCY_CONVERSION_RATE   As CURRENCY_CONVERSION_RATE
,    Update_By.USER_NAME As LAST_UPDATED_BY
, Update_By.DESCRIPTION LAST_UPDATE_BY_NAME
,    F.EFFECTIVE_DATE  As EFFECTIVE_DATE
,    Create_By.USER_NAME As OA_CREATED_BY
, Create_By.DESCRIPTION CREATED_BY_NAME
,    F.JE_HEADER_DESC As JE_HEADER_DESC
,    F.LEGACY_CONTEXT As LEGACY_CONTEXT
,    F.ACCRUAL_REV_FLAG  As ACCRUAL_REV_FLAG
,    F.PS_LINE_REFERENCE  As PS_LINE_REFERENCE
,    F.PS_LINE_DESC  As PS_LINE_DESC
,    F.LEGACY_GL_JE_LINE_KEY As LEGACY_GL_JE_LINE_KEY
,Coalesce(INV.CONCATENATED_SEGMENTS, PAYMENT.CONCATENATED_SEGMENTS) As CONCATENATED_SEGMENTS
,Coalesce(INV.LEDGER_ID, PAYMENT.LEDGER_ID) As LEDGER_ID
,Coalesce(INV.CODE_COMBINATION_ID , PAYMENT.CODE_COMBINATION_ID) As CODE_COMBINATION_ID
,Coalesce(INV.GL_SL_LINK_ID , PAYMENT.GL_SL_LINK_ID, -99999999) As GL_SL_LINK_ID
,Coalesce(INV.JE_HEADER_ID, PAYMENT.JE_HEADER_ID) As JE_HEADER_ID
,Coalesce(INV.JE_LINE_NUM, PAYMENT.JE_LINE_NUM) As JE_LINE_NUM
,Coalesce(INV.PERIOD_NAME, PAYMENT.PERIOD_NAME) As PERIOD_NAME
,Coalesce(INV.ENTITY_CODE, PAYMENT.ENTITY_CODE, 'NA') As ENTITY_CODE
,Coalesce(INV.SLA_DISTR_NET_AMT_BASE, PAYMENT.SLA_DISTR_NET_AMT_BASE) As SLA_DISTR_NET_AMT_BASE
,Coalesce(INV.SLA_DISTR_DETAIL_AMT_DR_BASE, PAYMENT.SLA_DISTR_DETAIL_AMT_DR_BASE) As SLA_DISTR_DETAIL_AMT_DR_BASE
,Coalesce(INV.SLA_DISTR_DETAIL_AMT_CR_BASE, PAYMENT.SLA_DISTR_DETAIL_AMT_CR_BASE) As SLA_DISTR_DETAIL_AMT_CR_BASE
,Coalesce(INV.SLA_DISTR_DETAIL_AMT, PAYMENT.SLA_DISTR_DETAIL_AMT) As SLA_DISTR_DETAIL_AMT
,Coalesce(INV.SLA_DISTR_DETAIL_AMT_DR, PAYMENT.SLA_DISTR_DETAIL_AMT_DR) As SLA_DISTR_DETAIL_AMT_DR
,Coalesce(INV.SLA_DISTR_DETAIL_AMT_CR, PAYMENT.SLA_DISTR_DETAIL_AMT_CR) As SLA_DISTR_DETAIL_AMT_CR
,Coalesce(INV.SLA_DISTR_DETAIL_LINE_NUMBER, PAYMENT.SLA_DISTR_DETAIL_LINE_NUMBER) As SLA_DISTR_DETAIL_LINE_NUMBER
,INV.SLA_LINE_NET_AMT As SLA_LINE_NET_AMT
,Coalesce(INV.SLA_LINE_AMT_DR, PAYMENT.SLA_LINE_AMT_DR) As SLA_LINE_AMT_DR
,Coalesce(INV.SLA_LINE_AMT_CR, PAYMENT.SLA_LINE_AMT_CR) As SLA_LINE_AMT_CR
,INV.SLA_LINE_NET_AMT_BASE As SLA_LINE_NET_AMT_BASE
,Coalesce(INV.SLA_LINE_AMT_DR_BASE, PAYMENT.SLA_LINE_AMT_DR_BASE) As SLA_LINE_AMT_DR_BASE
,Coalesce(INV.SLA_LINE_AMT_CR_BASE, PAYMENT.SLA_LINE_AMT_CR_BASE) As SLA_LINE_AMT_CR_BASE
,Coalesce(INV.SLA_CURRENCY_CODE, PAYMENT.SLA_CURRENCY_CODE) As SLA_CURRENCY_CODE
,Coalesce(INV.SLA_HEADER_DESCRIPTION, PAYMENT.SLA_HEADER_DESCRIPTION) As SLA_HEADER_DESCRIPTION
,Coalesce(INV.SLA_LINE_DESCRIPTION, PAYMENT. SLA_LINE_DESCRIPTION)  As SLA_LINE_DESCRIPTION
,Coalesce(INV.SLA_ACCTG_EVENT_CLASS_NAME, PAYMENT.SLA_ACCTG_EVENT_CLASS_NAME) SLA_ACCTG_EVENT_CLASS_NAME
,Coalesce(INV.SLA_ACCOUNTING_EVENT_DATE, PAYMENT. SLA_ACCOUNTING_EVENT_DATE) SLA_ACCOUNTING_EVENT_DATE
,Coalesce(INV.SLA_ACCTG_EVENT_LINE_NUMBER, PAYMENT.SLA_ACCTG_EVENT_LINE_NUMBER) SLA_ACCTG_EVENT_LINE_NUMBER
,Coalesce(INV.SLA_ACCOUNTING_EVENT_NUMBER, PAYMENT.SLA_ACCOUNTING_EVENT_NUMBER) SLA_ACCOUNTING_EVENT_NUMBER
,Coalesce(INV.SLA_ACCOUNTING_EVENT_TYPE_NAME, PAYMENT.SLA_ACCOUNTING_EVENT_TYPE_NAME) SLA_ACCOUNTING_EVENT_TYPE_NAME
,PAYMENT.SLA_LINE_EXCHANGE_RATE  SLA_LINE_EXCHANGE_RATE
,Coalesce(INV.SLA_LINE_EXCHANGE_RATE_DATE, PAYMENT.SLA_LINE_EXCHANGE_RATE_DATE) SLA_LINE_EXCHANGE_RATE_DATE
,Coalesce(INV.SLA_LINE_EXCHANGE_RATE_TYPE, PAYMENT.SLA_LINE_EXCHANGE_RATE_TYPE) SLA_LINE_EXCHANGE_RATE_TYPE
,Coalesce(INV.SLA_GL_DATE_KEY, PAYMENT.SLA_GL_DATE_KEY) SLA_GL_DATE_KEY
,Coalesce(INV.SLA_GL_TRANSFER_DATE, PAYMENT.SLA_GL_TRANSFER_DATE) SLA_GL_TRANSFER_DATE
 ,Coalesce(INV.LOCAL_INVOICE_AMOUNT, 0) LOCAL_INVOICE_AMOUNT
,Coalesce(INV.INVOICE_AMOUNT, 0) INVOICE_AMOUNT
,PAYMENT.INVOICE_BASE_AMOUNT  As INVOICE_BASE_AMOUNT
,INV.INVOICE_CURRENCY_CODE  INVOICE_CURRENCY_CODE
,Coalesce(INV.INVOICE_AMT_PAID, PAYMENT.INVOICE_AMT_PAID) INVOICE_AMT_PAID
,INV.INVOICE_DATE INVOICE_DATE
,INV.INVOICE_DESCRIPTION INVOICE_DESCRIPTION
,Coalesce(INV.INVOICE_NUMBER, PAYMENT.INVOICE_NUMBER) INVOICE_NUMBER
,Coalesce(INV.INVOICE_PAYMENT_STATUS, PAYMENT.INVOICE_PAYMENT_STATUS) INVOICE_PAYMENT_STATUS
,Coalesce(INV.PAYMENT_METHOD, PAYMENT.CHECK_PAYMENT_METHOD) PAYMENT_METHOD
,INV.INVOICE_SOURCE_CODE INVOICE_SOURCE_CODE
,INV.INVOICE_TAX_AMOUNT as INVOICE_TAX_AMOUNT
,PAYMENT.PAYMENT_CURRENCY_CODE PAYMENT_CURRENCY_CODE
,INV.INV_EXCHANGE_RATE INV_EXCHANGE_RATE
,INV.DISTR_AMOUNT  As DISTR_AMOUNT
--,INV.DISTR_BASE_AMOUNT
,INV.DISTR_ACCTG_DATE  As DISTR_ACCTG_DATE
,INV.DISTR_LINE_NUM As DISTR_LINE_NUM
,INV.DISTR_DESCR As DISTR_DESCR
,Coalesce(INV.AP_VENDOR_NUMBER, PAYMENT.CHECK_VENDOR_NUMBER) AP_VENDOR_NUMBER
--,Coalesce(INV.AP_VENDOR_NAME, PAYMENT.CHECK_VENDOR_NAME) AP_VENDOR_NAME
,INV.VENDOR_TYPE_LOOKUP_CODE  As VENDOR_TYPE_LOOKUP_CODE
,Coalesce(INV.VENDOR_SITE_CODE, PAYMENT.CHECK_VENDOR_SITE_CODE) VENDOR_SITE_CODE
,Coalesce(INV.ADDRESS_LINE1, PAYMENT.CHECK_ADDRESS_LINE1) ADDRESS_LINE1
,Coalesce(INV.ADDRESS_LINE2, PAYMENT.CHECK_ADDRESS_LINE2) ADDRESS_LINE2
,Coalesce(INV.ADDRESS_LINE3, PAYMENT.CHECK_ADDRESS_LINE3) ADDRESS_LINE3
,Coalesce(INV.CITY, PAYMENT.CHECK_CITY) CITY
,Coalesce(INV.STATE, PAYMENT.CHECK_STATE) STATE
,Coalesce(INV.ZIP, PAYMENT.CHECK_ZIP) ZIP
,Coalesce(INV.COUNTRY, PAYMENT.CHECK_COUNTRY) COUNTRY
,Coalesce(INV.ACCOUNTING_ENTRY_STATUS, PAYMENT.ACCOUNTING_ENTRY_STATUS) ACCOUNTING_ENTRY_STATUS
,Coalesce(INV.ACCOUNTING_ENTRY_TYPE, PAYMENT.ACCOUNTING_ENTRY_TYPE) ACCOUNTING_ENTRY_TYPE
,Coalesce(INV.ACCOUNTING_EVENT_STATUS, PAYMENT.ACCOUNTING_EVENT_STATUS) ACCOUNTING_EVENT_STATUS
,Coalesce(INV.ACCOUNTING_CLASS, PAYMENT.ACCOUNTING_CLASS) ACCOUNTING_CLASS
,Coalesce(INV.GL_TRANSFER_MODE, PAYMENT.GL_TRANSFER_MODE) GL_TRANSFER_MODE
,Coalesce(INV.GL_TRANSFER_STATUS, PAYMENT.GL_TRANSFER_STATUS) GL_TRANSFER_STATUS
,Coalesce(INV.ACCT_EVENT_PROCESS_STATUS, PAYMENT.ACCT_EVENT_PROCESS_STATUS) ACCT_EVENT_PROCESS_STATUS
,PAYMENT.CHECK_AMOUNT As CHECK_AMOUNT
,PAYMENT.CHECK_BASE_AMOUNT As CHECK_BASE_AMOUNT
,PAYMENT.CHECK_CLEARED_AMOUNT As CHECK_CLEARED_AMOUNT
,PAYMENT.CHECK_CLEARED_BASE_AMOUNT As CHECK_CLEARED_BASE_AMOUNT
,PAYMENT.CHECK_CLEARED_DATE As CHECK_CLEARED_DATE
,PAYMENT.CHECK_CURRENCY_CODE As CHECK_CURRENCY_CODE
,PAYMENT.CHECK_DATE As CHECK_DATE
,PAYMENT.CHECK_NUMBER As CHECK_NUMBER
,PAYMENT.CHECK_RELEASED_DATE As CHECK_RELEASED_DATE
,PAYMENT.CHECK_STATUS_CODE As CHECK_STATUS_CODE
,PAYMENT.CHECK_STOPPED_DATE As CHECK_STOPPED_DATE
,PAYMENT.CHECK_VOID_DATE As CHECK_VOID_DATE
,PAYMENT.CHECK_STOPPED_FLAG As CHECK_STOPPED_FLAG
,PAYMENT.CHECK_VOUCHER_NUMBER As CHECK_VOUCHER_NUMBER
--,PAYMENT.CHECK_PAYMENT_METHOD
,PAYMENT.PAYMENT_ACCRUAL_POSTED_FLAG As PAYMENT_ACCRUAL_POSTED_FLAG
,PAYMENT.PAYMENT_AMOUNT As PAYMENT_AMOUNT
,PAYMENT.PAYMENT_BASE_AMOUNT As PAYMENT_BASE_AMOUNT
,PAYMENT.PAYMENT_BANK_ACCOUNT_NAME As PAYMENT_BANK_ACCOUNT_NAME
,PAYMENT.PAYMENT_BANK_ACCOUNT_NUMBER As PAYMENT_BANK_ACCOUNT_NUMBER
,PAYMENT.PAYMENT_BANK_ACCT_TYPE_CODE As PAYMENT_BANK_ACCT_TYPE_CODE
,PAYMENT.PAYMENT_BANK_NUMBER As PAYMENT_BANK_NUMBER
,PAYMENT.PAYMENT_CASH_POSTED_FLAG As PAYMENT_CASH_POSTED_FLAG
,PAYMENT.PAYMENT_ACCOUNTING_DATE As PAYMENT_ACCOUNTING_DATE
,PAYMENT.PAYMENT_PERIOD_NAME As PAYMENT_PERIOD_NAME
,PAYMENT.PAYMENT_CREATION_DATE As PAYMENT_CREATION_DATE
,PAYMENT.PAYMENT_DISC_LOST_AMOUNT As PAYMENT_DISC_LOST_AMOUNT
,PAYMENT.PAYMENT_DISC_TAKEN_AMOUNT As PAYMENT_DISC_TAKEN_AMOUNT
,PAYMENT.PAYMENT_EXCHANGE_RATE As PAYMENT_EXCHANGE_RATE
,PAYMENT.PAYMENT_NUMBER As PAYMENT_NUMBER
,PAYMENT.PAYMENT_POSTED_FLAG As PAYMENT_POSTED_FLAG
, (
    CASE
        WHEN ( F.LEG_JOURNAL_ID IS NULL OR F.LEG_JOURNAL_ID IS NULL ) THEN (
    CASE
        WHEN SUBSTR ( F.HEADER_NAME , 1 , 8 ) = 'Reverses' THEN SUBSTR ( F.HEADER_NAME , 11 , 9 ) || 'R'
        WHEN F.BATCH_SOURCE_NAME = 'Payables' THEN 'APA' || SUBSTR ( F.BATCH_NAME , 16 , 7 )
        WHEN F.BATCH_SOURCE_NAME = 'RVL' THEN 'RVL' || SUBSTR ( F.BATCH_NAME , CHARACTER_LENGTH( TRIM(TRAILING ' '
    FROM TRIM ( TRAILING
    FROM F.BATCH_NAME ) )) - 7 ) || '-' || SUBSTR ( F.HEADER_NAME , 14 , 3 )
        WHEN F.BATCH_SOURCE_NAME = 'MassAllocation' THEN 'MA' || SUBSTR ( F.BATCH_NAME , 5 , 7 ) ELSE SUBSTR ( F.HEADER_NAME , 1 , 10 )
    END  ) ELSE F.LEG_JOURNAL_ID
    END  ) AS JOURNAL_ID
FROM FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F F 

 LEFT JOIN (
SELECT   distinct glref.CONCATENATED_SEGMENTS,
XEL.CODE_COMBINATION_ID ,
XEL.GL_SL_LINK_ID ,
GLREF.JE_HEADER_ID,
GLREF.JE_LINE_NUM,
XEH.LEDGER_ID,
XEH.PERIOD_NAME,
XTE.ENTITY_CODE,
   COALESCE(XDL.UNROUNDED_ACCOUNTED_DR,0
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_CHECK AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_CHECK
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_CHECK_s
where
   LOAD_AP_CHECK_s.CHECK_ID = OA3NF_AP_CHECK.CHECK_ID
   AND
    LOAD_AP_CHECK_s.SET_OF_BOOKS_ID = OA3NF_AP_CHECK.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_CHECK ( 
   PAYMENT_ACCOUNT_ID,
   CHECK_ID,
   CHECK_AMT,
   CHECK_NUM,
   CHECK_CLEARED_DTTM,
   CHECK_CREATE_DTTM,
   LAST_UPDATE_DTTM,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   BANK_ACCOUNT_NUM,
   CHECK_CREATION_DATE,
   CHECK_VOUCHER_NUMBER,
   CITY,
   CLEARED_AMOUNT,
   COUNTRY,
   FUTURE_PAY_DUE_DATE,
   POSTAL_CODE,
   RELEASED_AT,
   RELEASED_DATE,
   STATE,
   STATUS_LOOKUP_CODE,
   STOPPED_AT,
   STOPPED_BY,
   TREASURY_PAY_DATE,
   TREASURY_PAY_NUMBER,
   VENDOR_BANK_ACCOUNT_TYPE,
   STOPPED_DATE,
   VENDOR_BANK_ACCOUNT_NUMBER,
   VENDOR_BANK_NUMBER,
   VENDOR_SITE_CODE,
   VOID_DATE,
   PAYMENT_TYPE_FLAG,
   PAYMENT_DOCUMENT_NAME,
   STOPPED_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   VOID_FLAG,
   CHECKRUN_ID,
   CHECKRUN_NAME,
   VENDOR_ID,
   VENDOR_NAME,
   SET_OF_BOOKS_ID) 
SELECT 
   PAYMENT_ACCOUNT_ID,
   CHECK_ID,
   CHECK_AMT,
   CHECK_NUM,
   CHECK_CLEARED_DTTM,
   CHECK_CREATE_DTTM,
   LAST_UPDATE_DTTM,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   BANK_ACCOUNT_NUM,
   CHECK_CREATION_DATE,
   CHECK_VOUCHER_NUMBER,
   CITY,
   CLEARED_AMOUNT,
   COUNTRY,
   FUTURE_PAY_DUE_DATE,
   POSTAL_CODE,
   RELEASED_AT,
   RELEASED_DATE,
   STATE,
   STATUS_LOOKUP_CODE,
   STOPPED_AT,
   STOPPED_BY,
   TREASURY_PAY_DATE,
   TREASURY_PAY_NUMBER,
   VENDOR_BANK_ACCOUNT_TYPE,
   STOPPED_DATE,
   VENDOR_BANK_ACCOUNT_NUMBER,
   VENDOR_BANK_NUMBER,
   VENDOR_SITE_CODE,
   VOID_DATE,
   PAYMENT_TYPE_FLAG,
   PAYMENT_DOCUMENT_NAME,
   STOPPED_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   VOID_FLAG,
   CHECKRUN_ID,
   CHECKRUN_NAME,
   VENDOR_ID,
   VENDOR_NAME,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_CHECK_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_CHECK_CBS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_CHECK_CBS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_CHECK_CBS_s
where
   LOAD_AP_CHECK_CBS_s.CHECK_ID = OA3NF_AP_CHECK_CBS.CHECK_ID
   AND
   LOAD_AP_CHECK_CBS_s.SET_OF_BOOKS_ID = OA3NF_AP_CHECK_CBS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_CHECK_CBS ( 
   PAYMENT_ACCOUNT_ID,
   CHECK_ID,
   CHECK_AMT,
   CHECK_NUM,
   CHECK_CLEARED_DTTM,
   CHECK_CREATE_DTTM,
   LAST_UPDATE_DTTM,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   BANK_ACCOUNT_NUM,
   CHECK_CREATION_DATE,
   CHECK_VOUCHER_NUMBER,
   CITY,
   CLEARED_AMOUNT,
   COUNTRY,
   FUTURE_PAY_DUE_DATE,
   POSTAL_CODE,
   RELEASED_AT,
   RELEASED_DATE,
   STATE,
   STATUS_LOOKUP_CODE,
   STOPPED_AT,
   STOPPED_BY,
   TREASURY_PAY_DATE,
   TREASURY_PAY_NUMBER,
   VENDOR_BANK_ACCOUNT_TYPE,
   STOPPED_DATE,
   VENDOR_BANK_ACCOUNT_NUMBER,
   VENDOR_BANK_NUMBER,
   VENDOR_SITE_CODE,
   VOID_DATE,
   PAYMENT_TYPE_FLAG,
   PAYMENT_DOCUMENT_NAME,
   STOPPED_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   VOID_FLAG,
   CHECKRUN_ID,
   CHECKRUN_NAME,
   VENDOR_ID,
   VENDOR_NAME,
   SET_OF_BOOKS_ID) 
SELECT 
   PAYMENT_ACCOUNT_ID,
   CHECK_ID,
   CHECK_AMT,
   CHECK_NUM,
   CHECK_CLEARED_DTTM,
   CHECK_CREATE_DTTM,
   LAST_UPDATE_DTTM,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   BANK_ACCOUNT_NUM,
   CHECK_CREATION_DATE,
   CHECK_VOUCHER_NUMBER,
   CITY,
   CLEARED_AMOUNT,
   COUNTRY,
   FUTURE_PAY_DUE_DATE,
   POSTAL_CODE,
   RELEASED_AT,
   RELEASED_DATE,
   STATE,
   STATUS_LOOKUP_CODE,
   STOPPED_AT,
   STOPPED_BY,
   TREASURY_PAY_DATE,
   TREASURY_PAY_NUMBER,
   VENDOR_BANK_ACCOUNT_TYPE,
   STOPPED_DATE,
   VENDOR_BANK_ACCOUNT_NUMBER,
   VENDOR_BANK_NUMBER,
   VENDOR_SITE_CODE,
   VOID_DATE,
   PAYMENT_TYPE_FLAG,
   PAYMENT_DOCUMENT_NAME,
   STOPPED_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   VOID_FLAG,
   CHECKRUN_ID,
   CHECKRUN_NAME,
   VENDOR_ID,
   VENDOR_NAME,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_CHECK_CBS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_AP_CONSOL_INVOICE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_CONSOL_INVOICE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_CONSOL_INVOICE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_CONSOL_INVOICE_s
where
   LOAD_AP_CONSOL_INVOICE_s.CONSOL_INVOICE_ID = OA3NF_AP_CONSOL_INVOICE.CONSOL_INVOICE_ID
   AND
    LOAD_AP_CONSOL_INVOICE_s.SET_OF_BOOKS_ID = OA3NF_AP_CONSOL_INVOICE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_CONSOL_INVOICE ( 
   CONSOL_INVOICE_ID,
   CREATED_BY_PARTY_ID,
   CONSOL_INVOICE_CREATE_DTTM,
   OA_CONSOL_INVOICE_NAME,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID) 
SELECT 
   CONSOL_INVOICE_ID,
   CREATED_BY_PARTY_ID,
   CONSOL_INVOICE_CREATE_DTTM,
   OA_CONSOL_INVOICE_NAME,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_CONSOL_INVOICE_s;

DELETE FROM FDW_TABLES_DB.OA3NF_AP_CONSOL_INVOICE WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_CONSOL_INV_DEL S
WHERE OA3NF_AP_CONSOL_INVOICE.CONSOL_INVOICE_ID = S.CONSOL_INVOICE_ID
AND OA3NF_AP_CONSOL_INVOICE.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND OA3NF_AP_CONSOL_INVOICE.SET_OF_BOOKS_ID<>1002
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_CONSOL_INV_DEL AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_CONSOL_INV_DEL WHERE SET_OF_BOOKS_ID NOT IN(1002);
INSERT INTO FDW_TABLES_DB.OA3NF_AP_CONSOL_INV_DEL ( 
   CONSOL_INVOICE_ID,
   SET_OF_BOOKS_ID) 
SELECT 
   CONSOL_INVOICE_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_CONSOL_INV_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------



--MAC_OA3NF_AP_INVOICE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE  
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_s
where
   LOAD_AP_INVOICE_s.AP_INVOICE_ID = OA3NF_AP_INVOICE.AP_INVOICE_ID
   AND LOAD_AP_INVOICE_s.SET_OF_BOOKS_ID = OA3NF_AP_INVOICE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE ( 
   INVOICE_DESCRIPTION_TXT,
   INVOICE_CURRENCY_CODE,
   INVOICE_DTTM,
   AP_INVOICE_ID,
   HOST_INVOICE_NUM,
   AP_INVOICE_TYPE_CD,
   RECURRING_PAYMENT_ID,
   OA_SET_OF_BOOKS_ID,
   INVOICE_SOURCE_TYPE_CD,
   INVOICE_PAYMENT_TERM_CD,
   OA_VOUCHER_NUM,
   CONSOL_INVOICE_ID,
   AP_INV_CHART_OF_ACCOUNT_ID,
   OA_ORG_ID,
   OA_VENDOR_SITE_ID,
   OA_CREATION_DATE,
   LOCAL_FREIGHT_AMOUNT,
   LOCAL_INVOICE_AMOUNT,
   LOCAL_INVOICE_DISC_AMT,
   LOCAL_INVOICE_TAX_AMOUNT,
   LOCAL_PAID_AMOUNT,
   TRX_FREIGHT_AMOUNT,
   TRX_INVOICE_AMOUNT,
   TRX_INVOICE_DISC_AMT,
   TRX_INVOICE_TAX_AMOUNT,
   TRX_PAID_AMOUNT,
   LAST_UPDATE_DTTM,
   CREATED_BY,
   REQUESTER_ID,
   VENDOR_ID,
   INVOICE_DATE,
   VENDOR_SITE_ORG_ID,
   P_BASE_INVOICE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   ATTRIBUTE_CATEGORY,
   BANK_CODE,
   PAYMENT_METHOD,
   CHECK_DETAILS,
   APPROVAL_DESCRIPTION,
   EXCLUSIVE_PAYMENT_FLAG,
   PAYMENT_STATUS_FLAG,
   APPROVAL_STATUS,
   TERMS_DATE,
   AMOUNT_APPLICABLE_TO_DISCOUNT,
   PAYMENT_AMOUNT_TOTAL,
   INVOICE_DISTRIBUTION_TOTAL,
   PAY_GROUP_LOOKUP_CODE,
   GOODS_RECEIVED_DATE,
   INVOICE_RECEIVED_DATE,
   PROJECT_ID,
   ACCTS_PAY_CODE_COMBINATION_ID,
   PA_DEFAULT_DIST_CCID,
   AMOUNT_PAID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   APPROVAL_ITERATION,
   APPROVAL_READY_FLAG,
   APPROVED_AMOUNT,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   AUTHORIZED_BY,
   AUTO_TAX_CALC_FLAG,
   AWARD_ID,
   AWT_FLAG,
   AWT_GROUP_ID,
   BASE_AMOUNT,
   BATCH_ID,
   CANCELLED_AMOUNT,
   CANCELLED_BY,
   CANCELLED_DATE,
   CREATION_DATE,
   DESCRIPTION,
   DISCOUNT_AMOUNT_TAKEN,
   DOC_CATEGORY_CODE,
   DOC_SEQUENCE_ID,
   DOC_SEQUENCE_VALUE,
   EARLIEST_SETTLEMENT_DATE,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   FREIGHT_AMOUNT,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   GL_DATE,
   INVOICE_AMOUNT,
   INVOICE_TYPE_LOOKUP_CODE,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   MRC_BASE_AMOUNT,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   ORG_ID,
   ORIGINAL_PREPAYMENT_AMOUNT,
   PAID_ON_BEHALF_EMPLOYEE_ID,
   PAYMENT_CROSS_RATE,
   PAYMENT_CROSS_RATE_DATE,
   PAYMENT_CROSS_RATE_TYPE,
   PAYMENT_CURRENCY_CODE,
   PAYMENT_METHOD_LOOKUP_CODE,
   PAY_CURR_INVOICE_AMOUNT,
   PA_QUANTITY,
   POSTING_STATUS,
   PO_HEADER_ID,
   PREPAY_FLAG,
   PRE_WITHHOLDING_AMOUNT,
   PROJECT_ACCOUNTING_CONTEXT,
   REFERENCE_1,
   REFERENCE_2,
   SET_OF_BOOKS_ID,
   SOURCE,
   TASK_ID,
   TAX_AMOUNT,
   TEMP_CANCELLED_AMOUNT,
   TERMS_ID,
   USSGL_TRANSACTION_CODE,
   USSGL_TRX_CODE_CONTEXT,
   VALIDATED_TAX_AMOUNT,
   VALIDATION_REQUEST_ID,
   VAT_CODE,
   VENDOR_PREPAY_AMOUNT,
   VENDOR_SITE_ID,
   VOUCHER_NUM,
   WFAPPROVAL_STATUS
 ) 
SELECT 
   INVOICE_DESCRIPTION_TXT,
   INVOICE_CURRENCY_CODE,
   INVOICE_DTTM,
   AP_INVOICE_ID,
   HOST_INVOICE_NUM,
   AP_INVOICE_TYPE_CD,
   RECURRING_PAYMENT_ID,
   OA_SET_OF_BOOKS_ID,
   INVOICE_SOURCE_TYPE_CD,
   INVOICE_PAYMENT_TERM_CD,
   OA_VOUCHER_NUM,
   CONSOL_INVOICE_ID,
   AP_INV_CHART_OF_ACCOUNT_ID,
   OA_ORG_ID,
   OA_VENDOR_SITE_ID,
   OA_CREATION_DATE,
   LOCAL_FREIGHT_AMOUNT,
   LOCAL_INVOICE_AMOUNT,
   LOCAL_INVOICE_DISC_AMT,
   LOCAL_INVOICE_TAX_AMOUNT,
   LOCAL_PAID_AMOUNT,
   TRX_FREIGHT_AMOUNT,
   TRX_INVOICE_AMOUNT,
   TRX_INVOICE_DISC_AMT,
   TRX_INVOICE_TAX_AMOUNT,
   TRX_PAID_AMOUNT,
   LAST_UPDATE_DTTM,
   CREATED_BY,
   REQUESTER_ID,
   VENDOR_ID,
   INVOICE_DATE,
   VENDOR_SITE_ORG_ID,
   P_BASE_INVOICE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   ATTRIBUTE_CATEGORY,
   BANK_CODE,
   PAYMENT_METHOD,
   CHECK_DETAILS,
   APPROVAL_DESCRIPTION,
   EXCLUSIVE_PAYMENT_FLAG,
   PAYMENT_STATUS_FLAG,
   APPROVAL_STATUS,
   TERMS_DATE,
   AMOUNT_APPLICABLE_TO_DISCOUNT,
   PAYMENT_AMOUNT_TOTAL,
   INVOICE_DISTRIBUTION_TOTAL,
   PAY_GROUP_LOOKUP_CODE,
   GOODS_RECEIVED_DATE,
   INVOICE_RECEIVED_DATE,
   PROJECT_ID,
   ACCTS_PAY_CODE_COMBINATION_ID,
   PA_DEFAULT_DIST_CCID,
   AMOUNT_PAID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   APPROVAL_ITERATION,
   APPROVAL_READY_FLAG,
   APPROVED_AMOUNT,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   AUTHORIZED_BY,
   AUTO_TAX_CALC_FLAG,
   AWARD_ID,
   AWT_FLAG,
   AWT_GROUP_ID,
   BASE_AMOUNT,
   BATCH_ID,
   CANCELLED_AMOUNT,
   CANCELLED_BY,
   CANCELLED_DATE,
   CREATION_DATE,
   DESCRIPTION,
   DISCOUNT_AMOUNT_TAKEN,
   DOC_CATEGORY_CODE,
   DOC_SEQUENCE_ID,
   DOC_SEQUENCE_VALUE,
   EARLIEST_SETTLEMENT_DATE,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   FREIGHT_AMOUNT,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   GL_DATE,
   INVOICE_AMOUNT,
   INVOICE_TYPE_LOOKUP_CODE,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   MRC_BASE_AMOUNT,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   ORG_ID,
   ORIGINAL_PREPAYMENT_AMOUNT,
   PAID_ON_BEHALF_EMPLOYEE_ID,
   PAYMENT_CROSS_RATE,
   PAYMENT_CROSS_RATE_DATE,
   PAYMENT_CROSS_RATE_TYPE,
   PAYMENT_CURRENCY_CODE,
   PAYMENT_METHOD_LOOKUP_CODE,
   PAY_CURR_INVOICE_AMOUNT,
   PA_QUANTITY,
   POSTING_STATUS,
   PO_HEADER_ID,
   PREPAY_FLAG,
   PRE_WITHHOLDING_AMOUNT,
   PROJECT_ACCOUNTING_CONTEXT,
   REFERENCE_1,
   REFERENCE_2,
   SET_OF_BOOKS_ID,
   SOURCE,
   TASK_ID,
   TAX_AMOUNT,
   TEMP_CANCELLED_AMOUNT,
   TERMS_ID,
   USSGL_TRANSACTION_CODE,
   USSGL_TRX_CODE_CONTEXT,
   VALIDATED_TAX_AMOUNT,
   VALIDATION_REQUEST_ID,
   VAT_CODE,
   VENDOR_PREPAY_AMOUNT,
   VENDOR_SITE_ID,
   VOUCHER_NUM,
   WFAPPROVAL_STATUS
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_s;

-- To Delete not exhisting record in oracle
DELETE FROM  FDW_TABLES_DB.OA3NF_AP_INVOICE 
WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_DEL S
WHERE OA3NF_AP_INVOICE.AP_INVOICE_ID = S.AP_INVOICE_ID
AND OA3NF_AP_INVOICE.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND OA3NF_AP_INVOICE.AP_INVOICE_ID <> -99999
AND OA3NF_AP_INVOICE.SET_OF_BOOKS_ID<>1002 ;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_BKP AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE  
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_s
where
   LOAD_AP_INVOICE_s.AP_INVOICE_ID = OA3NF_AP_INVOICE.AP_INVOICE_ID
   AND LOAD_AP_INVOICE_s.SET_OF_BOOKS_ID = OA3NF_AP_INVOICE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE ( 
   INVOICE_DESCRIPTION_TXT,
   INVOICE_CURRENCY_CODE,
   INVOICE_DTTM,
   AP_INVOICE_ID,
   HOST_INVOICE_NUM,
   AP_INVOICE_TYPE_CD,
   RECURRING_PAYMENT_ID,
   OA_SET_OF_BOOKS_ID,
   INVOICE_SOURCE_TYPE_CD,
   INVOICE_PAYMENT_TERM_CD,
   OA_VOUCHER_NUM,
   CONSOL_INVOICE_ID,
   AP_INV_CHART_OF_ACCOUNT_ID,
   OA_ORG_ID,
   OA_VENDOR_SITE_ID,
   OA_CREATION_DATE,
   LOCAL_FREIGHT_AMOUNT,
   LOCAL_INVOICE_AMOUNT,
   LOCAL_INVOICE_DISC_AMT,
   LOCAL_INVOICE_TAX_AMOUNT,
   LOCAL_PAID_AMOUNT,
   TRX_FREIGHT_AMOUNT,
   TRX_INVOICE_AMOUNT,
   TRX_INVOICE_DISC_AMT,
   TRX_INVOICE_TAX_AMOUNT,
   TRX_PAID_AMOUNT,
   LAST_UPDATE_DTTM,
   CREATED_BY,
   REQUESTER_ID,
   VENDOR_ID,
   INVOICE_DATE,
   VENDOR_SITE_ORG_ID,
   P_BASE_INVOICE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   ATTRIBUTE_CATEGORY,
   BANK_CODE,
   PAYMENT_METHOD,
   CHECK_DETAILS,
   APPROVAL_DESCRIPTION,
   EXCLUSIVE_PAYMENT_FLAG,
   PAYMENT_STATUS_FLAG,
   APPROVAL_STATUS,
   TERMS_DATE,
   AMOUNT_APPLICABLE_TO_DISCOUNT,
   PAYMENT_AMOUNT_TOTAL,
   INVOICE_DISTRIBUTION_TOTAL,
   PAY_GROUP_LOOKUP_CODE,
   GOODS_RECEIVED_DATE,
   INVOICE_RECEIVED_DATE,
   PROJECT_ID,
   ACCTS_PAY_CODE_COMBINATION_ID,
   PA_DEFAULT_DIST_CCID,
   AMOUNT_PAID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   APPROVAL_ITERATION,
   APPROVAL_READY_FLAG,
   APPROVED_AMOUNT,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   AUTHORIZED_BY,
   AUTO_TAX_CALC_FLAG,
   AWARD_ID,
   AWT_FLAG,
   AWT_GROUP_ID,
   BASE_AMOUNT,
   BATCH_ID,
   CANCELLED_AMOUNT,
   CANCELLED_BY,
   CANCELLED_DATE,
   CREATION_DATE,
   DESCRIPTION,
   DISCOUNT_AMOUNT_TAKEN,
   DOC_CATEGORY_CODE,
   DOC_SEQUENCE_ID,
   DOC_SEQUENCE_VALUE,
   EARLIEST_SETTLEMENT_DATE,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   FREIGHT_AMOUNT,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   GL_DATE,
   INVOICE_AMOUNT,
   INVOICE_TYPE_LOOKUP_CODE,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   MRC_BASE_AMOUNT,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   ORG_ID,
   ORIGINAL_PREPAYMENT_AMOUNT,
   PAID_ON_BEHALF_EMPLOYEE_ID,
   PAYMENT_CROSS_RATE,
   PAYMENT_CROSS_RATE_DATE,
   PAYMENT_CROSS_RATE_TYPE,
   PAYMENT_CURRENCY_CODE,
   PAYMENT_METHOD_LOOKUP_CODE,
   PAY_CURR_INVOICE_AMOUNT,
   PA_QUANTITY,
   POSTING_STATUS,
   PO_HEADER_ID,
   PREPAY_FLAG,
   PRE_WITHHOLDING_AMOUNT,
   PROJECT_ACCOUNTING_CONTEXT,
   REFERENCE_1,
   REFERENCE_2,
   SET_OF_BOOKS_ID,
   SOURCE,
   TASK_ID,
   TAX_AMOUNT,
   TEMP_CANCELLED_AMOUNT,
   TERMS_ID,
   USSGL_TRANSACTION_CODE,
   USSGL_TRX_CODE_CONTEXT,
   VALIDATED_TAX_AMOUNT,
   VALIDATION_REQUEST_ID,
   VAT_CODE,
   VENDOR_PREPAY_AMOUNT,
   VENDOR_SITE_ID,
   VOUCHER_NUM,
   WFAPPROVAL_STATUS
 ) 
SELECT 
   INVOICE_DESCRIPTION_TXT,
   INVOICE_CURRENCY_CODE,
   INVOICE_DTTM,
   AP_INVOICE_ID,
   HOST_INVOICE_NUM,
   AP_INVOICE_TYPE_CD,
   RECURRING_PAYMENT_ID,
   OA_SET_OF_BOOKS_ID,
   INVOICE_SOURCE_TYPE_CD,
   INVOICE_PAYMENT_TERM_CD,
   OA_VOUCHER_NUM,
   CONSOL_INVOICE_ID,
   AP_INV_CHART_OF_ACCOUNT_ID,
   OA_ORG_ID,
   OA_VENDOR_SITE_ID,
   OA_CREATION_DATE,
   LOCAL_FREIGHT_AMOUNT,
   LOCAL_INVOICE_AMOUNT,
   LOCAL_INVOICE_DISC_AMT,
   LOCAL_INVOICE_TAX_AMOUNT,
   LOCAL_PAID_AMOUNT,
   TRX_FREIGHT_AMOUNT,
   TRX_INVOICE_AMOUNT,
   TRX_INVOICE_DISC_AMT,
   TRX_INVOICE_TAX_AMOUNT,
   TRX_PAID_AMOUNT,
   LAST_UPDATE_DTTM,
   CREATED_BY,
   REQUESTER_ID,
   VENDOR_ID,
   INVOICE_DATE,
   VENDOR_SITE_ORG_ID,
   P_BASE_INVOICE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   ATTRIBUTE_CATEGORY,
   BANK_CODE,
   PAYMENT_METHOD,
   CHECK_DETAILS,
   APPROVAL_DESCRIPTION,
   EXCLUSIVE_PAYMENT_FLAG,
   PAYMENT_STATUS_FLAG,
   APPROVAL_STATUS,
   TERMS_DATE,
   AMOUNT_APPLICABLE_TO_DISCOUNT,
   PAYMENT_AMOUNT_TOTAL,
   INVOICE_DISTRIBUTION_TOTAL,
   PAY_GROUP_LOOKUP_CODE,
   GOODS_RECEIVED_DATE,
   INVOICE_RECEIVED_DATE,
   PROJECT_ID,
   ACCTS_PAY_CODE_COMBINATION_ID,
   PA_DEFAULT_DIST_CCID,
   AMOUNT_PAID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   APPROVAL_ITERATION,
   APPROVAL_READY_FLAG,
   APPROVED_AMOUNT,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   AUTHORIZED_BY,
   AUTO_TAX_CALC_FLAG,
   AWARD_ID,
   AWT_FLAG,
   AWT_GROUP_ID,
   BASE_AMOUNT,
   BATCH_ID,
   CANCELLED_AMOUNT,
   CANCELLED_BY,
   CANCELLED_DATE,
   CREATION_DATE,
   DESCRIPTION,
   DISCOUNT_AMOUNT_TAKEN,
   DOC_CATEGORY_CODE,
   DOC_SEQUENCE_ID,
   DOC_SEQUENCE_VALUE,
   EARLIEST_SETTLEMENT_DATE,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   FREIGHT_AMOUNT,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   GL_DATE,
   INVOICE_AMOUNT,
   INVOICE_TYPE_LOOKUP_CODE,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   MRC_BASE_AMOUNT,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   ORG_ID,
   ORIGINAL_PREPAYMENT_AMOUNT,
   PAID_ON_BEHALF_EMPLOYEE_ID,
   PAYMENT_CROSS_RATE,
   PAYMENT_CROSS_RATE_DATE,
   PAYMENT_CROSS_RATE_TYPE,
   PAYMENT_CURRENCY_CODE,
   PAYMENT_METHOD_LOOKUP_CODE,
   PAY_CURR_INVOICE_AMOUNT,
   PA_QUANTITY,
   POSTING_STATUS,
   PO_HEADER_ID,
   PREPAY_FLAG,
   PRE_WITHHOLDING_AMOUNT,
   PROJECT_ACCOUNTING_CONTEXT,
   REFERENCE_1,
   REFERENCE_2,
   SET_OF_BOOKS_ID,
   SOURCE,
   TASK_ID,
   TAX_AMOUNT,
   TEMP_CANCELLED_AMOUNT,
   TERMS_ID,
   USSGL_TRANSACTION_CODE,
   USSGL_TRX_CODE_CONTEXT,
   VALIDATED_TAX_AMOUNT,
   VALIDATION_REQUEST_ID,
   VAT_CODE,
   VENDOR_PREPAY_AMOUNT,
   VENDOR_SITE_ID,
   VOUCHER_NUM,
   WFAPPROVAL_STATUS
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_DEL AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_DEL WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_DEL ( 
   AP_INVOICE_ID,
   SET_OF_BOOKS_ID   ) 
SELECT 
   AP_INVOICE_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_DIST AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_DIST
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_DIST_s
where
   LOAD_AP_INVOICE_DIST_s.OA_AE_LINE_ID = OA3NF_AP_INVOICE_DIST.OA_AE_LINE_ID
   AND LOAD_AP_INVOICE_DIST_s.OA_SET_OF_BOOKS_ID = OA3NF_AP_INVOICE_DIST.OA_SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_DIST ( 
   OA_ACCOUNTING_EVENT_ID,
   OA_AE_CATEGORY,
   OA_AE_HEADER_DESCRIPTION,
   OA_AE_HEADER_ID,
   OA_AE_LINE_DESCRIPTION,
   OA_AE_LINE_ID,
   OA_AE_LINE_NUMBER,
   OA_AE_LINE_TYPE_CODE,
   AP_ACCOUNTING_DATE,
   OA_AP_EVENT_TYPE_CODE,
   AP_GL_TRANSFER_FLAG,
   BASE_CREDIT_AMOUNT,
   BASE_DEBIT_AMOUNT,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CODE,
   OA_EVENT_NUMBER,
   OA_GL_SL_LINK_ID,
   INVOICE_NUMBER,
   INVOICE_ID,
   PERIOD_NAME,
   OA_SET_OF_BOOKS_ID,
   SOURCE_SYSTEM_ID,
   TRX_CREDIT_AMOUNT,
   TRX_DEBIT_AMOUNT,
   TRX_EXCHANGE_DATE,
   TRX_EXCHANGE_RATE,
   DISTRIBUTION_LINE_NUMBER,
   LAST_UPDATE_DTTM,
   SOURCE_TABLE,
   JE_HEADER_ID,
   JE_LINE_NUM,
   JE_HDR_ID_LINE_NUM ) 
SELECT 
   OA_ACCOUNTING_EVENT_ID,
   OA_AE_CATEGORY,
   OA_AE_HEADER_DESCRIPTION,
   OA_AE_HEADER_ID,
   OA_AE_LINE_DESCRIPTION,
   OA_AE_LINE_ID,
   OA_AE_LINE_NUMBER,
   OA_AE_LINE_TYPE_CODE,
   AP_ACCOUNTING_DATE,
   OA_AP_EVENT_TYPE_CODE,
   AP_GL_TRANSFER_FLAG,
   BASE_CREDIT_AMOUNT,
   BASE_DEBIT_AMOUNT,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CODE,
   OA_EVENT_NUMBER,
   OA_GL_SL_LINK_ID,
   INVOICE_NUMBER,
   INVOICE_ID,
   PERIOD_NAME,
   OA_SET_OF_BOOKS_ID,
   SOURCE_SYSTEM_ID,
   TRX_CREDIT_AMOUNT,
   TRX_DEBIT_AMOUNT,
   TRX_EXCHANGE_DATE,
   TRX_EXCHANGE_RATE,
   DISTRIBUTION_LINE_NUMBER,
   LAST_UPDATE_DTTM,
   SOURCE_TABLE,
   JE_HEADER_ID,
   JE_LINE_NUM,
   JE_HDR_ID_LINE_NUM
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_DIST_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_HIST AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE WHERE OA_SET_OF_BOOKS_ID IN (1002,-99999);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE
(
INVOICE_DESCRIPTION_TXT,
INVOICE_CURRENCY_CODE,
INVOICE_DTTM,
AP_INVOICE_ID,
HOST_INVOICE_NUM,
AP_INVOICE_TYPE_CD,
RECURRING_PAYMENT_ID,
OA_SET_OF_BOOKS_ID,
INVOICE_SOURCE_TYPE_CD,
INVOICE_PAYMENT_TERM_CD,
OA_VOUCHER_NUM,
CONSOL_INVOICE_ID,
AP_INV_CHART_OF_ACCOUNT_ID,
OA_ORG_ID,
OA_VENDOR_SITE_ID,
OA_CREATION_DATE,
LOCAL_FREIGHT_AMOUNT,
LOCAL_INVOICE_AMOUNT,
LOCAL_INVOICE_DISC_AMT,
LOCAL_INVOICE_TAX_AMOUNT,
LOCAL_PAID_AMOUNT,
TRX_FREIGHT_AMOUNT,
TRX_INVOICE_AMOUNT,
TRX_INVOICE_DISC_AMT,
TRX_INVOICE_TAX_AMOUNT,
TRX_PAID_AMOUNT,
LAST_UPDATE_DTTM,
CREATED_BY,
REQUESTER_ID,
VENDOR_ID,
INVOICE_DATE,
VENDOR_SITE_ORG_ID,
P_BASE_INVOICE_AMOUNT,
P_SET_OF_BOOKS_ID,
ATTRIBUTE_CATEGORY,
BANK_CODE,
PAYMENT_METHOD,
CHECK_DETAILS,
APPROVAL_DESCRIPTION,
EXCLUSIVE_PAYMENT_FLAG,
PAYMENT_STATUS_FLAG,
APPROVAL_STATUS,
TERMS_DATE,
AMOUNT_APPLICABLE_TO_DISCOUNT,
PAYMENT_AMOUNT_TOTAL,
INVOICE_DISTRIBUTION_TOTAL,
PAY_GROUP_LOOKUP_CODE,
GOODS_RECEIVED_DATE,
INVOICE_RECEIVED_DATE,
PROJECT_ID,
ACCTS_PAY_CODE_COMBINATION_ID,
PA_DEFAULT_DIST_CCID,
AMOUNT_PAID,
AMT_DUE_CCARD_COMPANY,
AMT_DUE_EMPLOYEE,
APPROVAL_ITERATION,
APPROVAL_READY_FLAG,
APPROVED_AMOUNT,
ATTRIBUTE1,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
AUTHORIZED_BY,
AUTO_TAX_CALC_FLAG,
AWARD_ID,
AWT_FLAG,
AWT_GROUP_ID,
BASE_AMOUNT,
BATCH_ID,
CANCELLED_AMOUNT,
CANCELLED_BY,
CANCELLED_DATE,
CREATION_DATE,
DESCRIPTION,
DISCOUNT_AMOUNT_TAKEN,
DOC_CATEGORY_CODE,
DOC_SEQUENCE_ID,
DOC_SEQUENCE_VALUE,
EARLIEST_SETTLEMENT_DATE,
EXCHANGE_DATE,
EXCHANGE_RATE,
EXCHANGE_RATE_TYPE,
EXPENDITURE_ITEM_DATE,
EXPENDITURE_ORGANIZATION_ID,
EXPENDITURE_TYPE,
FREIGHT_AMOUNT,
GLOBAL_ATTRIBUTE1,
GLOBAL_ATTRIBUTE10,
GLOBAL_ATTRIBUTE11,
GLOBAL_ATTRIBUTE12,
GLOBAL_ATTRIBUTE13,
GLOBAL_ATTRIBUTE14,
GLOBAL_ATTRIBUTE15,
GLOBAL_ATTRIBUTE16,
GLOBAL_ATTRIBUTE17,
GLOBAL_ATTRIBUTE18,
GLOBAL_ATTRIBUTE19,
GLOBAL_ATTRIBUTE2,
GLOBAL_ATTRIBUTE20,
GLOBAL_ATTRIBUTE3,
GLOBAL_ATTRIBUTE4,
GLOBAL_ATTRIBUTE5,
GLOBAL_ATTRIBUTE6,
GLOBAL_ATTRIBUTE7,
GLOBAL_ATTRIBUTE8,
GLOBAL_ATTRIBUTE9,
GLOBAL_ATTRIBUTE_CATEGORY,
GL_DATE,
INVOICE_AMOUNT,
INVOICE_TYPE_LOOKUP_CODE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
MRC_BASE_AMOUNT,
MRC_EXCHANGE_DATE,
MRC_EXCHANGE_RATE,
MRC_EXCHANGE_RATE_TYPE,
ORG_ID,
ORIGINAL_PREPAYMENT_AMOUNT,
PAID_ON_BEHALF_EMPLOYEE_ID,
PAYMENT_CROSS_RATE,
PAYMENT_CROSS_RATE_DATE,
PAYMENT_CROSS_RATE_TYPE,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAY_CURR_INVOICE_AMOUNT,
PA_QUANTITY,
POSTING_STATUS,
PO_HEADER_ID,
PREPAY_FLAG,
PRE_WITHHOLDING_AMOUNT,
PROJECT_ACCOUNTING_CONTEXT,
REFERENCE_1,
REFERENCE_2,
SET_OF_BOOKS_ID,
SOURCE,
TASK_ID,
TAX_AMOUNT,
TEMP_CANCELLED_AMOUNT,
TERMS_ID,
USSGL_TRANSACTION_CODE,
USSGL_TRX_CODE_CONTEXT,
VALIDATED_TAX_AMOUNT,
VALIDATION_REQUEST_ID,
VAT_CODE,
VENDOR_PREPAY_AMOUNT,
VENDOR_SITE_ID,
VOUCHER_NUM,
WFAPPROVAL_STATUS
)
SELECT
INVOICE.INVOICE_DESCRIPTION_TXT,
INVOICE.INVOICE_CURRENCY_CODE,
INVOICE.INVOICE_DTTM,
INVOICE.AP_INVOICE_ID,
INVOICE.HOST_INVOICE_NUM,
INVOICE.AP_INVOICE_TYPE_CD,
INVOICE.RECURRING_PAYMENT_ID,
INVOICE.OA_SET_OF_BOOKS_ID,
INVOICE.INVOICE_SOURCE_TYPE_CD,
INVOICE.INVOICE_PAYMENT_TERM_CD,
INVOICE.OA_VOUCHER_NUM,
INVOICE.CONSOL_INVOICE_ID,
INVOICE.AP_INV_CHART_OF_ACCOUNT_ID,
--INVOICE.OA_ORG_ID,
(CASE 

WHEN VSP.NEW_VENDOR_SITE_ID IS NOT NULL THEN

(CASE INVOICE.OA_ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)
ELSE 
INVOICE.OA_ORG_ID END)

 AS OA_ORG_ID,
--INVOICE.OA_VENDOR_SITE_ID,
COALESCE(VSP.NEW_VENDOR_SITE_ID,INVOICE.OA_VENDOR_SITE_ID) AS OA_VENDOR_SITE_ID,
INVOICE.OA_CREATION_DATE,
INVOICE.LOCAL_FREIGHT_AMOUNT,
INVOICE.LOCAL_INVOICE_AMOUNT,
INVOICE.LOCAL_INVOICE_DISC_AMT,
INVOICE.LOCAL_INVOICE_TAX_AMOUNT,
INVOICE.LOCAL_PAID_AMOUNT,
INVOICE.TRX_FREIGHT_AMOUNT,
INVOICE.TRX_INVOICE_AMOUNT,
INVOICE.TRX_INVOICE_DISC_AMT,
INVOICE.TRX_INVOICE_TAX_AMOUNT,
INVOICE.TRX_PAID_AMOUNT,
INVOICE.LAST_UPDATE_DTTM,
INVOICE.CREATED_BY,
INVOICE.REQUESTER_ID,
--OA3NF_AP_INVOICE.VENDOR_ID,
COALESCE(SRC.NEW_VENDOR_ID,INVOICE.VENDOR_ID) AS VENDOR_ID,
INVOICE.INVOICE_DATE,
--INVOICE.VENDOR_SITE_ORG_ID,
CASE WHEN INVOICE.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID THEN  ((CASE INVOICE.ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)||'-'||TRIM(CAST(SRC.NEW_VENDOR_ID AS INTEGER))||'-'||TRIM(CAST(VSP.NEW_VENDOR_SITE_ID AS INTEGER))) ELSE INVOICE.VENDOR_SITE_ORG_ID END AS VENDOR_SITE_ORG_ID,
INVOICE.P_BASE_INVOICE_AMOUNT,
INVOICE.P_SET_OF_BOOKS_ID,
INVOICE.ATTRIBUTE_CATEGORY,
INVOICE.BANK_CODE,
INVOICE.PAYMENT_METHOD,
INVOICE.CHECK_DETAILS,
INVOICE.APPROVAL_DESCRIPTION,
INVOICE.EXCLUSIVE_PAYMENT_FLAG,
INVOICE.PAYMENT_STATUS_FLAG,
INVOICE.APPROVAL_STATUS,
INVOICE.TERMS_DATE,
INVOICE.AMOUNT_APPLICABLE_TO_DISCOUNT,
INVOICE.PAYMENT_AMOUNT_TOTAL,
INVOICE.INVOICE_DISTRIBUTION_TOTAL,
INVOICE.PAY_GROUP_LOOKUP_CODE,
INVOICE.GOODS_RECEIVED_DATE,
INVOICE.INVOICE_RECEIVED_DATE,
INVOICE.PROJECT_ID,
INVOICE.ACCTS_PAY_CODE_COMBINATION_ID,
INVOICE.PA_DEFAULT_DIST_CCID,
INVOICE.AMOUNT_PAID,
INVOICE.AMT_DUE_CCARD_COMPANY,
INVOICE.AMT_DUE_EMPLOYEE,
INVOICE.APPROVAL_ITERATION,
INVOICE.APPROVAL_READY_FLAG,
INVOICE.APPROVED_AMOUNT,
INVOICE.ATTRIBUTE1,
INVOICE.ATTRIBUTE10,
INVOICE.ATTRIBUTE11,
INVOICE.ATTRIBUTE12,
INVOICE.ATTRIBUTE13,
INVOICE.ATTRIBUTE14,
INVOICE.ATTRIBUTE15,
INVOICE.ATTRIBUTE2,
INVOICE.ATTRIBUTE3,
INVOICE.ATTRIBUTE4,
INVOICE.ATTRIBUTE5,
INVOICE.ATTRIBUTE6,
INVOICE.ATTRIBUTE7,
INVOICE.ATTRIBUTE8,
INVOICE.ATTRIBUTE9,
INVOICE.AUTHORIZED_BY,
INVOICE.AUTO_TAX_CALC_FLAG,
INVOICE.AWARD_ID,
INVOICE.AWT_FLAG,
INVOICE.AWT_GROUP_ID,
INVOICE.BASE_AMOUNT,
INVOICE.BATCH_ID,
INVOICE.CANCELLED_AMOUNT,
INVOICE.CANCELLED_BY,
INVOICE.CANCELLED_DATE,
INVOICE.CREATION_DATE,
INVOICE.DESCRIPTION,
INVOICE.DISCOUNT_AMOUNT_TAKEN,
INVOICE.DOC_CATEGORY_CODE,
INVOICE.DOC_SEQUENCE_ID,
INVOICE.DOC_SEQUENCE_VALUE,
INVOICE.EARLIEST_SETTLEMENT_DATE,
INVOICE.EXCHANGE_DATE,
INVOICE.EXCHANGE_RATE,
INVOICE.EXCHANGE_RATE_TYPE,
INVOICE.EXPENDITURE_ITEM_DATE,
INVOICE.EXPENDITURE_ORGANIZATION_ID,
INVOICE.EXPENDITURE_TYPE,
INVOICE.FREIGHT_AMOUNT,
INVOICE.GLOBAL_ATTRIBUTE1,
INVOICE.GLOBAL_ATTRIBUTE10,
INVOICE.GLOBAL_ATTRIBUTE11,
INVOICE.GLOBAL_ATTRIBUTE12,
INVOICE.GLOBAL_ATTRIBUTE13,
INVOICE.GLOBAL_ATTRIBUTE14,
INVOICE.GLOBAL_ATTRIBUTE15,
INVOICE.GLOBAL_ATTRIBUTE16,
INVOICE.GLOBAL_ATTRIBUTE17,
INVOICE.GLOBAL_ATTRIBUTE18,
INVOICE.GLOBAL_ATTRIBUTE19,
INVOICE.GLOBAL_ATTRIBUTE2,
INVOICE.GLOBAL_ATTRIBUTE20,
INVOICE.GLOBAL_ATTRIBUTE3,
INVOICE.GLOBAL_ATTRIBUTE4,
INVOICE.GLOBAL_ATTRIBUTE5,
INVOICE.GLOBAL_ATTRIBUTE6,
INVOICE.GLOBAL_ATTRIBUTE7,
INVOICE.GLOBAL_ATTRIBUTE8,
INVOICE.GLOBAL_ATTRIBUTE9,
INVOICE.GLOBAL_ATTRIBUTE_CATEGORY,
INVOICE.GL_DATE,
INVOICE.INVOICE_AMOUNT,
INVOICE.INVOICE_TYPE_LOOKUP_CODE,
INVOICE.LAST_UPDATED_BY,
INVOICE.LAST_UPDATE_DATE,
INVOICE.LAST_UPDATE_LOGIN,
INVOICE.MRC_BASE_AMOUNT,
INVOICE.MRC_EXCHANGE_DATE,
INVOICE.MRC_EXCHANGE_RATE,
INVOICE.MRC_EXCHANGE_RATE_TYPE,
--INVOICE.ORG_ID,
(CASE 

WHEN VSP.NEW_VENDOR_SITE_ID IS NOT NULL THEN

(CASE INVOICE.ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)
ELSE 
INVOICE.ORG_ID END)

 AS ORG_ID,
INVOICE.ORIGINAL_PREPAYMENT_AMOUNT,
INVOICE.PAID_ON_BEHALF_EMPLOYEE_ID,
INVOICE.PAYMENT_CROSS_RATE,
INVOICE.PAYMENT_CROSS_RATE_DATE,
INVOICE.PAYMENT_CROSS_RATE_TYPE,
INVOICE.PAYMENT_CURRENCY_CODE,
INVOICE.PAYMENT_METHOD_LOOKUP_CODE,
INVOICE.PAY_CURR_INVOICE_AMOUNT,
INVOICE.PA_QUANTITY,
INVOICE.POSTING_STATUS,
INVOICE.PO_HEADER_ID,
INVOICE.PREPAY_FLAG,
INVOICE.PRE_WITHHOLDING_AMOUNT,
INVOICE.PROJECT_ACCOUNTING_CONTEXT,
INVOICE.REFERENCE_1,
INVOICE.REFERENCE_2,
INVOICE.SET_OF_BOOKS_ID, 
INVOICE.SOURCE,
INVOICE.TASK_ID,
INVOICE.TAX_AMOUNT,
INVOICE.TEMP_CANCELLED_AMOUNT,
INVOICE.TERMS_ID,
INVOICE.USSGL_TRANSACTION_CODE,
INVOICE.USSGL_TRX_CODE_CONTEXT,
INVOICE.VALIDATED_TAX_AMOUNT,
INVOICE.VALIDATION_REQUEST_ID,
INVOICE.VAT_CODE,
INVOICE.VENDOR_PREPAY_AMOUNT,
INVOICE.VENDOR_SITE_ID,
INVOICE.VOUCHER_NUM,
INVOICE.WFAPPROVAL_STATUS
FROM FDM_TABLES_DB.OA3NF_AP_INVOICE INVOICE
LEFT JOIN FDW_STAGE_DB.LOAD_VENDOR_SITE_MAP VSP
ON (INVOICE.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID)
LEFT JOIN (SELECT   
 VO.VENDOR_ID AS OLD_VENDOR_ID,VN.VENDOR_ID AS NEW_VENDOR_ID
FROM FDM_TABLES_DB.OA3NF_VENDOR VO,FDW_TABLES_DB.OA3NF_VENDOR VN,FDW_STAGE_DB.LOAD_VENDOR_MAP M
WHERE (VO.OA_VENDOR_NUMBER = M.OLD_VENDOR_NBR) AND
(VN.OA_VENDOR_NUMBER = M.NEW_VENDOR_NBR)) SRC
ON (INVOICE.VENDOR_ID=SRC.OLD_VENDOR_ID) 
and INVOICE.OA_SET_OF_BOOKS_ID = 1002;

);
--------------------------------------------------------------------------------



--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_LINE AS (
DELETE  FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_LINE 
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_LINE_s
where
   LOAD_AP_INVOICE_LINE_s.AP_INVOICE_LINE_NUM = OA3NF_AP_INVOICE_LINE.AP_INVOICE_LINE_NUM
   AND LOAD_AP_INVOICE_LINE_s.AP_INVOICE_ID = OA3NF_AP_INVOICE_LINE.AP_INVOICE_ID
   AND LOAD_AP_INVOICE_LINE_s.OA_SET_OF_BOOKS_ID = OA3NF_AP_INVOICE_LINE.OA_SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_LINE ( 
   AP_INVOICE_LINE_DESC,
   AP_INVOICE_LINE_NUM,
   AP_INVOICE_ID,
   AP_INVOICE_LN_MERCHANT_DOC_NUM,
   AP_INV_LN_CHART_OF_ACCOUNT_ID,
   OA_LINE_TYPE_CODE,
   OA_EXPENDITURE_TYPE,
   OA_MATCH_STATUS_FLAG,
   OA_PERIOD_NAME,
   OA_POSTED_FLAG,
   OA_ACCOUNTING_DATE,
   SOURCE_SYSTEM_ID,
   GL_JE_LINE_ID,
   OA_SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   AP_INVOICE_LN_AMT_LOCAL_AMT,
   AP_INVOICE_LN_AMT_TRX_AMT,
   OA_EXCHANGE_RATE_VARIANCE,
   OA_LOCAL_AWT_AMOUNT,
   OA_LOCAL_INV_PRICE_VARIANCE,
   OA_LOCAL_PREPAY_AMOUNT,
   OA_TRX_AWT_AMOUNT,
   OA_TRX_INV_PRICE_VARIANCE,
   OA_TRX_PREPAY_AMOUNT,
   AP_INVOICE_LINE_QTY,
   AP_INVOICE_LINE_QTY_UOM_CD,
   PROJECT_ID,
   TASK_ID,
   P_BASE_INVOICE_LINE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   P_BASE_AWT_AMOUNT,
   P_BASE_INV_PRICE_VARIANCE,
   P_BASE_PREPAY_AMOUNT,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE6,
   ATTRIBUTE1,
   ATTRIBUTE5,
   ATTRIBUTE7,
   ACCRUAL_POSTED_FLAG,
   AMOUNT,
   ASSETS_ADDITION_FLAG,
   ASSETS_TRACKING_FLAG,
   DESCRIPTION,
   DISTRIBUTION_CREATION_DATE,
   DISTRIBUTION_LINE_NUMBER,
   EARLIEST_SETTLEMENT_DATE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   JUSTIFICATION,
   FINAL_MATCH_FLAG,
   GL_DATE,
   MATCH_STATUS_FLAG,
   ATTRIBUTE10,
   ATTRIBUTE_CATEGORY,
   SECONDARY_VENDOR_NO,
   INCOME_TAX_REGION,
   INCOME_TAX_TYPE,
   LINE_TYPE_LOOKUP_CODE,
   PA_ADDITION_FLAG,
   PA_QUANTITY,
   PERIOD_NAME,
   POSTED_AMOUNT,
   POSTED_FLAG,
   PREPAY_AMOUNT_REMAINING,
   QUANTITY_INVOICED,
   QUANTITY_VARIANCE,
   REVERSAL_FLAG,
   STAT_AMOUNT,
   INVOICE_DISTRIBUTION_ID,
PREPAY_DISTRIBUTION_ID
      ) 
SELECT 
   AP_INVOICE_LINE_DESC,
   AP_INVOICE_LINE_NUM,
   AP_INVOICE_ID,
   AP_INVOICE_LN_MERCHANT_DOC_NUM,
   AP_INV_LN_CHART_OF_ACCOUNT_ID,
   OA_LINE_TYPE_CODE,
   OA_EXPENDITURE_TYPE,
   OA_MATCH_STATUS_FLAG,
   OA_PERIOD_NAME,
   OA_POSTED_FLAG,
   OA_ACCOUNTING_DATE,
   SOURCE_SYSTEM_ID,
   GL_JE_LINE_ID,
   OA_SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   AP_INVOICE_LN_AMT_LOCAL_AMT,
   AP_INVOICE_LN_AMT_TRX_AMT,
   OA_EXCHANGE_RATE_VARIANCE,
   OA_LOCAL_AWT_AMOUNT,
   OA_LOCAL_INV_PRICE_VARIANCE,
   OA_LOCAL_PREPAY_AMOUNT,
   OA_TRX_AWT_AMOUNT,
   OA_TRX_INV_PRICE_VARIANCE,
   OA_TRX_PREPAY_AMOUNT,
   AP_INVOICE_LINE_QTY,
   AP_INVOICE_LINE_QTY_UOM_CD,
   PROJECT_ID,
   TASK_ID,
   P_BASE_INVOICE_LINE_AMOUNT,
   P_SET_OF_BOOKS_ID,
   P_BASE_AWT_AMOUNT,
   P_BASE_INV_PRICE_VARIANCE,
   P_BASE_PREPAY_AMOUNT,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE6,
   ATTRIBUTE1,
   ATTRIBUTE5,
   ATTRIBUTE7,
   ACCRUAL_POSTED_FLAG,
   AMOUNT,
   ASSETS_ADDITION_FLAG,
   ASSETS_TRACKING_FLAG,
   DESCRIPTION,
   DISTRIBUTION_CREATION_DATE,
   DISTRIBUTION_LINE_NUMBER,
   EARLIEST_SETTLEMENT_DATE,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   JUSTIFICATION,
   FINAL_MATCH_FLAG,
   GL_DATE,
   MATCH_STATUS_FLAG,
   ATTRIBUTE10,
   ATTRIBUTE_CATEGORY,
   SECONDARY_VENDOR_NO,
   INCOME_TAX_REGION,
   INCOME_TAX_TYPE,
   LINE_TYPE_LOOKUP_CODE,
   PA_ADDITION_FLAG,
   PA_QUANTITY,
   PERIOD_NAME,
   POSTED_AMOUNT,
   POSTED_FLAG,
   PREPAY_AMOUNT_REMAINING,
   QUANTITY_INVOICED,
   QUANTITY_VARIANCE,
   REVERSAL_FLAG,
   STAT_AMOUNT,
   INVOICE_DISTRIBUTION_ID,
PREPAY_DISTRIBUTION_ID
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_LINE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_LINES_ALL AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_LINES_ALL
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_LINES_ALL_s
where
   LOAD_AP_INVOICE_LINES_ALL_s.INVOICE_ID = OA3NF_AP_INVOICE_LINES_ALL.INVOICE_ID
   AND LOAD_AP_INVOICE_LINES_ALL_s.LINE_NUMBER = OA3NF_AP_INVOICE_LINES_ALL.LINE_NUMBER
);
INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_LINES_ALL
( 
INVOICE_ID
,LINE_NUMBER
,LINE_TYPE_LOOKUP_CODE
,REQUESTER_ID
,DESCRIPTION
,LINE_SOURCE
,ORG_ID
,LINE_GROUP_NUMBER
,INVENTORY_ITEM_ID
,ITEM_DESCRIPTION
,SERIAL_NUMBER
,MANUFACTURER
,MODEL_NUMBER
,WARRANTY_NUMBER
,GENERATE_DISTS
,MATCH_TYPE
,DISTRIBUTION_SET_ID
,ACCOUNT_SEGMENT
,BALANCING_SEGMENT
,COST_CENTER_SEGMENT
,OVERLAY_DIST_CODE_CONCAT
,DEFAULT_DIST_CCID
,PRORATE_ACROSS_ALL_ITEMS
,ACCOUNTING_DATE
,PERIOD_NAME
,DEFERRED_ACCTG_FLAG
,DEF_ACCTG_START_DATE
,DEF_ACCTG_END_DATE
,DEF_ACCTG_NUMBER_OF_PERIODS
,DEF_ACCTG_PERIOD_TYPE
,SET_OF_BOOKS_ID
,AMOUNT
,BASE_AMOUNT
,ROUNDING_AMT
,QUANTITY_INVOICED
,UNIT_MEAS_LOOKUP_CODE
,UNIT_PRICE
,WFAPPROVAL_STATUS
,USSGL_TRANSACTION_CODE
,DISCARDED_FLAG
,ORIGINAL_AMOUNT
,ORIGINAL_BASE_AMOUNT
,ORIGINAL_ROUNDING_AMT
,CANCELLED_FLAG
,INCOME_TAX_REGION
,TYPE_1099
,STAT_AMOUNT
,PREPAY_INVOICE_ID
,PREPAY_LINE_NUMBER
,INVOICE_INCLUDES_PREPAY_FLAG
,CORRECTED_INV_ID
,CORRECTED_LINE_NUMBER
,PO_HEADER_ID
,PO_LINE_ID
,PO_RELEASE_ID
,PO_LINE_LOCATION_ID
,PO_DISTRIBUTION_ID
,RCV_TRANSACTION_ID
,FINAL_MATCH_FLAG
,ASSETS_TRACKING_FLAG
,ASSET_BOOK_TYPE_CODE
,ASSET_CATEGORY_ID
,PROJECT_ID
,TASK_ID
,EXPENDITURE_TYPE
,EXPENDITURE_ITEM_DATE
,EXPENDITURE_ORGANIZATION_ID
,PA_QUANTITY
,PA_CC_AR_INVOICE_ID
,PA_CC_AR_INVOICE_LINE_NUM
,PA_CC_PROCESSED_CODE
,AWARD_ID
,AWT_GROUP_ID
,REFERENCE_1
,REFERENCE_2
,RECEIPT_VERIFIED_FLAG
,RECEIPT_REQUIRED_FLAG
,RECEIPT_MISSING_FLAG
,JUSTIFICATION
,EXPENSE_GROUP
,START_EXPENSE_DATE
,END_EXPENSE_DATE
,RECEIPT_CURRENCY_CODE
,RECEIPT_CONVERSION_RATE
,RECEIPT_CURRENCY_AMOUNT
,DAILY_AMOUNT
,WEB_PARAMETER_ID
,ADJUSTMENT_REASON
,MERCHANT_DOCUMENT_NUMBER
,MERCHANT_NAME
,MERCHANT_REFERENCE
,MERCHANT_TAX_REG_NUMBER
,MERCHANT_TAXPAYER_ID
,COUNTRY_OF_SUPPLY
,CREDIT_CARD_TRX_ID
,COMPANY_PREPAID_INVOICE_ID
,CC_REVERSAL_FLAG
,CREATION_DATE
,CREATED_BY
,LAST_UPDATED_BY
,LAST_UPDATE_DATE
,LAST_UPDATE_LOGIN
,PROGRAM_APPLICATION_ID
,PROGRAM_ID
,PROGRAM_UPDATE_DATE
,REQUEST_ID
,ATTRIBUTE_CATEGORY
,ATTRIBUTE1
,ATTRIBUTE2
,ATTRIBUTE3
,ATTRIBUTE4
,ATTRIBUTE5
,ATTRIBUTE6
,ATTRIBUTE7
,ATTRIBUTE8
,ATTRIBUTE9
,ATTRIBUTE10
,ATTRIBUTE11
,ATTRIBUTE12
,ATTRIBUTE13
,ATTRIBUTE14
,ATTRIBUTE15
,GLOBAL_ATTRIBUTE_CATEGORY
,GLOBAL_ATTRIBUTE1
,GLOBAL_ATTRIBUTE2
,GLOBAL_ATTRIBUTE3
,GLOBAL_ATTRIBUTE4
,GLOBAL_ATTRIBUTE5
,GLOBAL_ATTRIBUTE6
,GLOBAL_ATTRIBUTE7
,GLOBAL_ATTRIBUTE8
,GLOBAL_ATTRIBUTE9
,GLOBAL_ATTRIBUTE10
,GLOBAL_ATTRIBUTE11
,GLOBAL_ATTRIBUTE12
,GLOBAL_ATTRIBUTE13
,GLOBAL_ATTRIBUTE14
,GLOBAL_ATTRIBUTE15
,GLOBAL_ATTRIBUTE16
,GLOBAL_ATTRIBUTE17
,GLOBAL_ATTRIBUTE18
,GLOBAL_ATTRIBUTE19
,GLOBAL_ATTRIBUTE20
,LINE_SELECTED_FOR_APPL_FLAG
,PREPAY_APPL_REQUEST_ID
,APPLICATION_ID
,PRODUCT_TABLE
,REFERENCE_KEY1
,REFERENCE_KEY2
,REFERENCE_KEY3
,REFERENCE_KEY4
,REFERENCE_KEY5
,PURCHASING_CATEGORY_ID
,COST_FACTOR_ID
,CONTROL_AMOUNT
,ASSESSABLE_VALUE
,TOTAL_REC_TAX_AMOUNT
,TOTAL_NREC_TAX_AMOUNT
,TOTAL_REC_TAX_AMT_FUNCL_CURR
,TOTAL_NREC_TAX_AMT_FUNCL_CURR
,INCLUDED_TAX_AMOUNT
,PRIMARY_INTENDED_USE
,TAX_ALREADY_CALCULATED_FLAG
,SHIP_TO_LOCATION_ID
,PRODUCT_TYPE
,PRODUCT_CATEGORY
,PRODUCT_FISC_CLASSIFICATION
,USER_DEFINED_FISC_CLASS
,TRX_BUSINESS_CATEGORY
,SUMMARY_TAX_LINE_ID
,TAX_REGIME_CODE
,TAX
,TAX_JURISDICTION_CODE
,TAX_STATUS_CODE
,TAX_RATE_ID
,TAX_RATE_CODE
,TAX_RATE
,TAX_CODE_ID
,HISTORICAL_FLAG
,TAX_CLASSIFICATION_CODE
,SOURCE_APPLICATION_ID
,SOURCE_EVENT_CLASS_CODE
,SOURCE_ENTITY_CODE
,SOURCE_TRX_ID
,SOURCE_LINE_ID
,SOURCE_TRX_LEVEL_TYPE
,RETAINED_AMOUNT
,RETAINED_AMOUNT_REMAINING
,RETAINED_INVOICE_ID
,RETAINED_LINE_NUMBER
,LINE_SELECTED_FOR_RLSE_FLAG
,LINE_OWNER_ROLE
,DISPUTABLE_FLAG
,RCV_SHIPMENT_LINE_ID
,PAY_AWT_GROUP_ID
,AIL_INVOICE_ID
,AIL_DISTRIBUTION_LINE_NUMBER
,AIL_INVOICE_ID2
,AIL_DISTRIBUTION_LINE_NUMBER2
,AIL_INVOICE_ID3
,AIL_DISTRIBUTION_LINE_NUMBER3
,AIL_INVOICE_ID4
) 

SELECT 
INVOICE_ID
,LINE_NUMBER
,LINE_TYPE_LOOKUP_CODE
,REQUESTER_ID
,DESCRIPTION
,LINE_SOURCE
,ORG_ID
,LINE_GROUP_NUMBER
,INVENTORY_ITEM_ID
,ITEM_DESCRIPTION
,SERIAL_NUMBER
,MANUFACTURER
,MODEL_NUMBER
,WARRANTY_NUMBER
,GENERATE_DISTS
,MATCH_TYPE
,DISTRIBUTION_SET_ID
,ACCOUNT_SEGMENT
,BALANCING_SEGMENT
,COST_CENTER_SEGMENT
,OVERLAY_DIST_CODE_CONCAT
,DEFAULT_DIST_CCID
,PRORATE_ACROSS_ALL_ITEMS
,ACCOUNTING_DATE
,PERIOD_NAME
,DEFERRED_ACCTG_FLAG
,DEF_ACCTG_START_DATE
,DEF_ACCTG_END_DATE
,DEF_ACCTG_NUMBER_OF_PERIODS
,DEF_ACCTG_PERIOD_TYPE
,SET_OF_BOOKS_ID
,AMOUNT
,BASE_AMOUNT
,ROUNDING_AMT
,QUANTITY_INVOICED
,UNIT_MEAS_LOOKUP_CODE
,UNIT_PRICE
,WFAPPROVAL_STATUS
,USSGL_TRANSACTION_CODE
,DISCARDED_FLAG
,ORIGINAL_AMOUNT
,ORIGINAL_BASE_AMOUNT
,ORIGINAL_ROUNDING_AMT
,CANCELLED_FLAG
,INCOME_TAX_REGION
,TYPE_1099
,STAT_AMOUNT
,PREPAY_INVOICE_ID
,PREPAY_LINE_NUMBER
,INVOICE_INCLUDES_PREPAY_FLAG
,CORRECTED_INV_ID
,CORRECTED_LINE_NUMBER
,PO_HEADER_ID
,PO_LINE_ID
,PO_RELEASE_ID
,PO_LINE_LOCATION_ID
,PO_DISTRIBUTION_ID
,RCV_TRANSACTION_ID
,FINAL_MATCH_FLAG
,ASSETS_TRACKING_FLAG
,ASSET_BOOK_TYPE_CODE
,ASSET_CATEGORY_ID
,PROJECT_ID
,TASK_ID
,EXPENDITURE_TYPE
,EXPENDITURE_ITEM_DATE
,EXPENDITURE_ORGANIZATION_ID
,PA_QUANTITY
,PA_CC_AR_INVOICE_ID
,PA_CC_AR_INVOICE_LINE_NUM
,PA_CC_PROCESSED_CODE
,AWARD_ID
,AWT_GROUP_ID
,REFERENCE_1
,REFERENCE_2
,RECEIPT_VERIFIED_FLAG
,RECEIPT_REQUIRED_FLAG
,RECEIPT_MISSING_FLAG
,JUSTIFICATION
,EXPENSE_GROUP
,START_EXPENSE_DATE
,END_EXPENSE_DATE
,RECEIPT_CURRENCY_CODE
,RECEIPT_CONVERSION_RATE
,RECEIPT_CURRENCY_AMOUNT
,DAILY_AMOUNT
,WEB_PARAMETER_ID
,ADJUSTMENT_REASON
,MERCHANT_DOCUMENT_NUMBER
,MERCHANT_NAME
,MERCHANT_REFERENCE
,MERCHANT_TAX_REG_NUMBER
,MERCHANT_TAXPAYER_ID
,COUNTRY_OF_SUPPLY
,CREDIT_CARD_TRX_ID
,COMPANY_PREPAID_INVOICE_ID
,CC_REVERSAL_FLAG
,CREATION_DATE
,CREATED_BY
,LAST_UPDATED_BY
,LAST_UPDATE_DATE
,LAST_UPDATE_LOGIN
,PROGRAM_APPLICATION_ID
,PROGRAM_ID
,PROGRAM_UPDATE_DATE
,REQUEST_ID
,ATTRIBUTE_CATEGORY
,ATTRIBUTE1
,ATTRIBUTE2
,ATTRIBUTE3
,ATTRIBUTE4
,ATTRIBUTE5
,ATTRIBUTE6
,ATTRIBUTE7
,ATTRIBUTE8
,ATTRIBUTE9
,ATTRIBUTE10
,ATTRIBUTE11
,ATTRIBUTE12
,ATTRIBUTE13
,ATTRIBUTE14
,ATTRIBUTE15
,GLOBAL_ATTRIBUTE_CATEGORY
,GLOBAL_ATTRIBUTE1
,GLOBAL_ATTRIBUTE2
,GLOBAL_ATTRIBUTE3
,GLOBAL_ATTRIBUTE4
,GLOBAL_ATTRIBUTE5
,GLOBAL_ATTRIBUTE6
,GLOBAL_ATTRIBUTE7
,GLOBAL_ATTRIBUTE8
,GLOBAL_ATTRIBUTE9
,GLOBAL_ATTRIBUTE10
,GLOBAL_ATTRIBUTE11
,GLOBAL_ATTRIBUTE12
,GLOBAL_ATTRIBUTE13
,GLOBAL_ATTRIBUTE14
,GLOBAL_ATTRIBUTE15
,GLOBAL_ATTRIBUTE16
,GLOBAL_ATTRIBUTE17
,GLOBAL_ATTRIBUTE18
,GLOBAL_ATTRIBUTE19
,GLOBAL_ATTRIBUTE20
,LINE_SELECTED_FOR_APPL_FLAG
,PREPAY_APPL_REQUEST_ID
,APPLICATION_ID
,PRODUCT_TABLE
,REFERENCE_KEY1
,REFERENCE_KEY2
,REFERENCE_KEY3
,REFERENCE_KEY4
,REFERENCE_KEY5
,PURCHASING_CATEGORY_ID
,COST_FACTOR_ID
,CONTROL_AMOUNT
,ASSESSABLE_VALUE
,TOTAL_REC_TAX_AMOUNT
,TOTAL_NREC_TAX_AMOUNT
,TOTAL_REC_TAX_AMT_FUNCL_CURR
,TOTAL_NREC_TAX_AMT_FUNCL_CURR
,INCLUDED_TAX_AMOUNT
,PRIMARY_INTENDED_USE
,TAX_ALREADY_CALCULATED_FLAG
,SHIP_TO_LOCATION_ID
,PRODUCT_TYPE
,PRODUCT_CATEGORY
,PRODUCT_FISC_CLASSIFICATION
,USER_DEFINED_FISC_CLASS
,TRX_BUSINESS_CATEGORY
,SUMMARY_TAX_LINE_ID
,TAX_REGIME_CODE
,TAX
,TAX_JURISDICTION_CODE
,TAX_STATUS_CODE
,TAX_RATE_ID
,TAX_RATE_CODE
,TAX_RATE
,TAX_CODE_ID
,HISTORICAL_FLAG
,TAX_CLASSIFICATION_CODE
,SOURCE_APPLICATION_ID
,SOURCE_EVENT_CLASS_CODE
,SOURCE_ENTITY_CODE
,SOURCE_TRX_ID
,SOURCE_LINE_ID
,SOURCE_TRX_LEVEL_TYPE
,RETAINED_AMOUNT
,RETAINED_AMOUNT_REMAINING
,RETAINED_INVOICE_ID
,RETAINED_LINE_NUMBER
,LINE_SELECTED_FOR_RLSE_FLAG
,LINE_OWNER_ROLE
,DISPUTABLE_FLAG
,RCV_SHIPMENT_LINE_ID
,PAY_AWT_GROUP_ID
,AIL_INVOICE_ID
,AIL_DISTRIBUTION_LINE_NUMBER
,AIL_INVOICE_ID2
,AIL_DISTRIBUTION_LINE_NUMBER2
,AIL_INVOICE_ID3
,AIL_DISTRIBUTION_LINE_NUMBER3
,AIL_INVOICE_ID4
FROM fdw_stage_db.LOAD_AP_INVOICE_LINES_ALL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_AP_INVOICE_STATUS

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INVOICE_STATUS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_STATUS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INVOICE_STATUS_s
where
   LOAD_AP_INVOICE_STATUS_s.AP_INVOICE_ID = OA3NF_AP_INVOICE_STATUS.AP_INVOICE_ID
   AND  LOAD_AP_INVOICE_STATUS_s.SET_OF_BOOKS_ID = OA3NF_AP_INVOICE_STATUS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INVOICE_STATUS ( 
   AP_INVOICE_ID,
   AP_INVOICE_STATUS_TYPE_CD,
   AP_INV_STATUS_ASSIGN_DTTM,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID) 
SELECT 
   AP_INVOICE_ID,
   AP_INVOICE_STATUS_TYPE_CD,
   AP_INV_STATUS_ASSIGN_DTTM,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_INVOICE_STATUS_s;


DELETE FROM  FDW_TABLES_DB.OA3NF_AP_INVOICE_STATUS 
WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_INVOICE_DEL S
WHERE OA3NF_AP_INVOICE_STATUS.AP_INVOICE_ID = S.AP_INVOICE_ID
AND OA3NF_AP_INVOICE_STATUS.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND OA3NF_AP_INVOICE_STATUS.AP_INVOICE_ID <> -99999
AND OA3NF_AP_INVOICE_STATUS.SET_OF_BOOKS_ID<>1002 ;

);
--------------------------------------------------------------------------------



--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INV_LN_PO_LN AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INV_LN_PO_LN
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INV_LN_PO_LN_s
where
   LOAD_AP_INV_LN_PO_LN_s.VENDOR_PO_ID = OA3NF_AP_INV_LN_PO_LN.VENDOR_PO_ID
   AND LOAD_AP_INV_LN_PO_LN_s.PO_DISTRIBUTION_ID = OA3NF_AP_INV_LN_PO_LN.PO_DISTRIBUTION_ID
   AND LOAD_AP_INV_LN_PO_LN_s.AP_INVOICE_ID = OA3NF_AP_INV_LN_PO_LN.AP_INVOICE_ID
   AND LOAD_AP_INV_LN_PO_LN_s.AP_INVOICE_LINE_NUM = OA3NF_AP_INV_LN_PO_LN.AP_INVOICE_LINE_NUM 
   AND LOAD_AP_INV_LN_PO_LN_s.SET_OF_BOOKS_ID = OA3NF_AP_INV_LN_PO_LN.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_PO_LN ( 
   VENDOR_PO_ID,
   PO_DISTRIBUTION_ID,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   VENDOR_PO_LINE_QTY,
   VENDOR_PO_LN_UOM_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID   ) 
SELECT 
   VENDOR_PO_ID,
   PO_DISTRIBUTION_ID,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   VENDOR_PO_LINE_QTY,
   VENDOR_PO_LN_UOM_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_INV_LN_PO_LN_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INV_LN_RCPT_LN AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INV_LN_RCPT_LN
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INV_LN_RCPT_LN_s
where
   LOAD_AP_INV_LN_RCPT_LN_s.AP_INVOICE_ID = OA3NF_AP_INV_LN_RCPT_LN.AP_INVOICE_ID
   AND LOAD_AP_INV_LN_RCPT_LN_s.AP_INVOICE_LINE_NUM = OA3NF_AP_INV_LN_RCPT_LN.AP_INVOICE_LINE_NUM
   AND LOAD_AP_INV_LN_RCPT_LN_s.VENDOR_RECEIPT_ID = OA3NF_AP_INV_LN_RCPT_LN.VENDOR_RECEIPT_ID
   AND LOAD_AP_INV_LN_RCPT_LN_s.VENDOR_RECEIPT_LINE_NUM = OA3NF_AP_INV_LN_RCPT_LN.VENDOR_RECEIPT_LINE_NUM
   AND LOAD_AP_INV_LN_RCPT_LN_s.SET_OF_BOOKS_ID = OA3NF_AP_INV_LN_RCPT_LN.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_RCPT_LN ( 
   VENDOR_RECEIPT_LINE_UOM_CD,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   VENDOR_RECEIPT_ID,
   VENDOR_RECEIPT_LINE_NUM,
   VENDOR_RECEIPT_LINE_QTY,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID   ) 
SELECT 
   VENDOR_RECEIPT_LINE_UOM_CD,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   VENDOR_RECEIPT_ID,
   VENDOR_RECEIPT_LINE_NUM,
   VENDOR_RECEIPT_LINE_QTY,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_INV_LN_RCPT_LN_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_AP_INV_LN_STATUS

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INV_LN_STATUS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INV_LN_STATUS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INV_LN_STATUS_s
where
   LOAD_AP_INV_LN_STATUS_s.AP_INVOICE_ID = OA3NF_AP_INV_LN_STATUS.AP_INVOICE_ID
   AND LOAD_AP_INV_LN_STATUS_s.AP_INVOICE_LINE_NUM = OA3NF_AP_INV_LN_STATUS.AP_INVOICE_LINE_NUM
    AND LOAD_AP_INV_LN_STATUS_s.SET_OF_BOOKS_ID = OA3NF_AP_INV_LN_STATUS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_STATUS ( 
   INVOICE_DISTRIBUTION_ID,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   AP_INV_LN_STATUS_TYPE_CD,
   AP_INV_LN_STATUS_DTTM,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID   ) 
SELECT 
   INVOICE_DISTRIBUTION_ID,
   AP_INVOICE_ID,
   AP_INVOICE_LINE_NUM,
   AP_INV_LN_STATUS_TYPE_CD,
   AP_INV_LN_STATUS_DTTM,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_INV_LN_STATUS_s;

  DELETE FROM fdw_tables_db.OA3NF_AP_INV_LN_STATUS WHERE NOT EXISTS
  (SELECT '1' FROM fdw_tables_db.OA3NF_AP_INV_LN_STAT_DEL S
  WHERE OA3NF_AP_INV_LN_STATUS.AP_INVOICE_ID = S.AP_INVOICE_ID
  AND OA3NF_AP_INV_LN_STATUS.AP_INVOICE_LINE_NUM = S.AP_INVOICE_LINE_NUM
  AND OA3NF_AP_INV_LN_STATUS.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
  AND OA3NF_AP_INV_LN_STATUS.SET_OF_BOOKS_ID<>1002
  ;
 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INV_LN_STAT_DEL AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INV_LN_STAT_DEL  WHERE SET_OF_BOOKS_ID NOT IN 1002;

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_LN_STAT_DEL ( 
   AP_INVOICE_LINE_NUM,
   AP_INVOICE_ID,
   SET_OF_BOOKS_ID,
   INVOICE_DISTRIBUTION_ID) 
SELECT 
   AP_INVOICE_LINE_NUM,
   AP_INVOICE_ID,
   SET_OF_BOOKS_ID,
   INVOICE_DISTRIBUTION_ID
FROM FDW_STAGE_DB.LOAD_AP_INV_LN_STAT_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_INV_RELATION AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_INV_RELATION
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_INV_RELATION_s
where
   LOAD_AP_INV_RELATION_s.AP_INVOICE_ID = OA3NF_AP_INV_RELATION.AP_INVOICE_ID
   AND LOAD_AP_INV_RELATION_s.RELATED_INVOICE_ID = OA3NF_AP_INV_RELATION.RELATED_INVOICE_ID
   AND LOAD_AP_INV_RELATION_s.SET_OF_BOOKS_ID = OA3NF_AP_INV_RELATION.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_INV_RELATION ( 
   AP_INVOICE_ID,
   RELATED_INVOICE_ID,
   INVOICE_RELATIONSHIP_TYPE_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID    ) 
SELECT 
   AP_INVOICE_ID,
   RELATED_INVOICE_ID,
   INVOICE_RELATIONSHIP_TYPE_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID 
FROM FDW_STAGE_DB.LOAD_AP_INV_RELATION_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_BANK_BRANCH AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_BANK_BRANCH
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_BANK_BRANCH_s
where
   LOAD_AP_OA_BANK_BRANCH_s.BANK_BRANCH_PARTY_ID = OA3NF_AP_OA_BANK_BRANCH.BANK_BRANCH_PARTY_ID
   AND LOAD_AP_OA_BANK_BRANCH_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_BANK_BRANCH.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_BANK_BRANCH ( 
   BANK_BRANCH_PARTY_ID,
   BANK_BRANCH_NAME,
   BANK_NUM,
   BANK_NUMBER,
   BANK_NAME,
   BANK_BRANCH_TYPE,
   INSTITUTION_TYPE,
   LAST_UPDATE_DTTM,
   ADDRESS_LINES_ALT,
   BANK_NAME_ALT,
   BANK_BRANCH_NAME_ALT,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   AREA_CODE,
   CITY,
   CONTACT_FIRST_NAME,
   CONTACT_LAST_NAME,
   CONTACT_MIDDLE_NAME,
   PHONE,
   CONTACT_PREFIX,
   CONTACT_TITLE,
   COUNTRY,
   CREATION_DATE,
   ZIP,
   STATE,
   CONTACT_AREA_CODE,
   CONTACT_PHONE,
   BRANCH_CONTACT_AREA_CODE,
   EFT_SWIFT_CODE,
   END_DATE,
   SET_OF_BOOKS_ID   ) 
SELECT 
   BANK_BRANCH_PARTY_ID,
   BANK_BRANCH_NAME,
   BANK_NUM,
   BANK_NUMBER,
   BANK_NAME,
   BANK_BRANCH_TYPE,
   INSTITUTION_TYPE,
   LAST_UPDATE_DTTM,
   ADDRESS_LINES_ALT,
   BANK_NAME_ALT,
   BANK_BRANCH_NAME_ALT,
   ADDRESS_LINE1,
   ADDRESS_LINE2,
   ADDRESS_LINE3,
   AREA_CODE,
   CITY,
   CONTACT_FIRST_NAME,
   CONTACT_LAST_NAME,
   CONTACT_MIDDLE_NAME,
   PHONE,
   CONTACT_PREFIX,
   CONTACT_TITLE,
   COUNTRY,
   CREATION_DATE,
   ZIP,
   STATE,
   CONTACT_AREA_CODE,
   CONTACT_PHONE,
   BRANCH_CONTACT_AREA_CODE,
   EFT_SWIFT_CODE,
   END_DATE,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_BANK_BRANCH_s

;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_CHECK_STOCK AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_CHECK_STOCK
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_CHECK_STOCK_s
where
   LOAD_AP_OA_CHECK_STOCK_s.CHECK_STOCK_ID = OA3NF_AP_OA_CHECK_STOCK.CHECK_STOCK_ID
   AND LOAD_AP_OA_CHECK_STOCK_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_CHECK_STOCK.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_CHECK_STOCK ( 
   CHECK_STOCK_ID,
   NAME,
   CHECK_FORMAT_NAME,
   DISBURSEMENT_TYPE,
   PAYMENT_ACCOUNT_ID,
   ORG_ID,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID   ) 
SELECT 
   CHECK_STOCK_ID,
   NAME,
   CHECK_FORMAT_NAME,
   DISBURSEMENT_TYPE,
   PAYMENT_ACCOUNT_ID,
   ORG_ID,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_CHECK_STOCK_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_DAYS_HELD (CBS_Studio INT, CBS_Distribution INT) AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD where SET_OF_BOOKS_ID <> 1002 ;

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
( '1-30 Days', 'Four-bucket aging report (1-30 Days Past Due)', '3', 2,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('31-60 Days', 'Four-bucket aging report (31-60 Days Past Due)', '2',3,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('61+ Days', 'Four-bucket aging report (61+ Days Past Due)', '1',4,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('N/A', 'Not Applicable', '0', 5,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
( '1-30 Days', 'Four-bucket aging report (1-30 Days Past Due)', '3', 2,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('31-60 Days', 'Four-bucket aging report (31-60 Days Past Due)', '2',3,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('61+ Days', 'Four-bucket aging report (61+ Days Past Due)', '1',4,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_HELD  (
AP_DAYS_HELD,AP_DAYS_HELD_DESC,AP_DAYS_HELD_ID,AP_DAYS_HELD_SEQ_NUM,SET_OF_BOOKS_ID)
Values
('N/A', 'Not Applicable', '0', 5,:CBS_Distribution);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_DAYS_ON_HOLD  (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD WHERE SET_OF_BOOKS_ID <> 1002 ;

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
( '1-30 Days', 'Four-bucket aging report (1-30 Days Past Due)', '3', 2,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('31-60 Days', 'Four-bucket aging report (31-60 Days Past Due)', '2',3,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('61+ Days', 'Four-bucket aging report (61+ Days Past Due)', '1',4,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('N/A', 'Not Applicable', '0', 5,:CBS_Studio);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
( '1-30 Days', 'Four-bucket aging report (1-30 Days Past Due)', '3', 2,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('31-60 Days', 'Four-bucket aging report (31-60 Days Past Due)', '2',3,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('61+ Days', 'Four-bucket aging report (61+ Days Past Due)', '1',4,:CBS_Distribution);

Insert into FDW_TABLES_DB.OA3NF_AP_OA_DAYS_ON_HOLD (
AP_DAYS_ON_HOLD,
AP_DAYS_ON_HOLD_DESC,
AP_DAYS_ON_HOLD_ID,
AP_DAYS_ON_HOLD_SEQ_NUM,
SET_OF_BOOKS_ID)
Values
('N/A', 'Not Applicable', '0', 5,:CBS_Distribution);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_ER_ITEM_TYPE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_ER_ITEM_TYPE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_ER_ITEM_TYPE_s
where
   LOAD_AP_OA_ER_ITEM_TYPE_s.PARAMETER_ID = OA3NF_AP_OA_ER_ITEM_TYPE.PARAMETER_ID
   AND LOAD_AP_OA_ER_ITEM_TYPE_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_ER_ITEM_TYPE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_ER_ITEM_TYPE ( 
   PARAMETER_ID,
   PROMPT,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID) 
SELECT 
   PARAMETER_ID,
   PROMPT,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID 
FROM FDW_STAGE_DB.LOAD_AP_OA_ER_ITEM_TYPE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------




--MAC_OA3NF_AP_OA_EXP_RPT_HDR

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_EXP_RPT_HDR AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_HDR
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_EXP_RPT_HDR_s
where
   LOAD_AP_OA_EXP_RPT_HDR_s.REPORT_HEADER_ID = OA3NF_AP_OA_EXP_RPT_HDR.REPORT_HEADER_ID
   AND  LOAD_AP_OA_EXP_RPT_HDR_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_EXP_RPT_HDR.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_HDR ( 
   REPORT_HEADER_ID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   WEEK_END_DATE,
   EMPLOYEE_ID,
   AP_INVOICE_ID,
   VENDOR_ID,
   REPORT_DESCRIPTION,
   REPORT_NUM,
   REPORT_TOTAL,
   VOUCHER_NUM,
   ORG_ID,
   VENDOR_SITE_ID,
   LAST_UPDATE_DTTM,
   ORG_VEND_SITE_ID,
   SET_OF_BOOKS_ID
   ) 
SELECT 
   REPORT_HEADER_ID,
   AMT_DUE_CCARD_COMPANY,
   AMT_DUE_EMPLOYEE,
   WEEK_END_DATE,
   EMPLOYEE_ID,
   AP_INVOICE_ID,
   VENDOR_ID,
   REPORT_DESCRIPTION,
   REPORT_NUM,
   REPORT_TOTAL,
   VOUCHER_NUM,
   ORG_ID,
   VENDOR_SITE_ID,
   LAST_UPDATE_DTTM,
   ORG_VEND_SITE_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_EXP_RPT_HDR_s;

DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_HDR WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTHD_DEL S
WHERE OA3NF_AP_OA_EXP_RPT_HDR.REPORT_HEADER_ID = S.REPORT_HEADER_ID
AND OA3NF_AP_OA_EXP_RPT_HDR.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND OA3NF_AP_OA_EXP_RPT_HDR.REPORT_HEADER_ID <> -99999
AND OA3NF_AP_OA_EXP_RPT_HDR.SET_OF_BOOKS_ID<>1002 ;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------




--MAC_OA3NF_AP_OA_EXP_RPT_LINE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_EXP_RPT_LINE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_LINE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_EXP_RPT_LINE_s
where
   LOAD_AP_OA_EXP_RPT_LINE_s.REPORT_HEADER_ID = OA3NF_AP_OA_EXP_RPT_LINE.REPORT_HEADER_ID
   AND LOAD_AP_OA_EXP_RPT_LINE_s.REPORT_LINE_NUMBER = OA3NF_AP_OA_EXP_RPT_LINE.REPORT_LINE_NUMBER
   AND LOAD_AP_OA_EXP_RPT_LINE_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_EXP_RPT_LINE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_LINE ( 
   REPORT_HEADER_ID,
   REPORT_LINE_NUMBER,
   AMOUNT,
   END_EXPENSE_DATE,
   START_EXPENSE_DATE,
   CURRENCY_CODE,
   WEB_PARAMETER_ID,
   EXPENDITURE_TYPE,
   ITEM_DESCRIPTION,
   JUSTIFICATION,
   RECEIPT_CURRENCY_AMOUNT,
   EXP_RPT_CHART_OF_ACCOUNT_ID,
   SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   PROJECT_ID,
   TASK_ID ) 
SELECT 
   REPORT_HEADER_ID,
   REPORT_LINE_NUMBER,
   AMOUNT,
   END_EXPENSE_DATE,
   START_EXPENSE_DATE,
   CURRENCY_CODE,
   WEB_PARAMETER_ID,
   EXPENDITURE_TYPE,
   ITEM_DESCRIPTION,
   JUSTIFICATION,
   RECEIPT_CURRENCY_AMOUNT,
   EXP_RPT_CHART_OF_ACCOUNT_ID,
   SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   PROJECT_ID,
   TASK_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_EXP_RPT_LINE_s;

DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EXP_RPT_LINE WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTLN_DEL S
WHERE OA3NF_AP_OA_EXP_RPT_LINE.REPORT_HEADER_ID = S.REPORT_HEADER_ID
AND   COALESCE(OA3NF_AP_OA_EXP_RPT_LINE.REPORT_LINE_NUMBER,'NA') = COALESCE(S.REPORT_LINE_NUMBER,'NA')
AND OA3NF_AP_OA_EXP_RPT_LINE.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID )
AND OA3NF_AP_OA_EXP_RPT_LINE.SET_OF_BOOKS_ID<>1002 ;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_EX_RPTHD_DEL AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTHD_DEL;


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTHD_DEL ( 
   REPORT_HEADER_ID,
   SET_OF_BOOKS_ID) 
SELECT 
   REPORT_HEADER_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_EX_RPTHD_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_EX_RPTLN_DEL AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTLN_DEL;


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_EX_RPTLN_DEL ( 
   REPORT_HEADER_ID,
   REPORT_LINE_NUMBER,
   SET_OF_BOOKS_ID) 
SELECT 
   REPORT_HEADER_ID,
   REPORT_LINE_NUMBER,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_EX_RPTLN_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_GL_TRANSFER  (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER WHERE SET_OF_BOOKS_ID <> 1002;

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER 
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('Y','Yes','Successfully transfered to GL',:CBS_Studio);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER 
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('N','No','Not transfered to GL',:CBS_Studio);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER  
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('E','Error','Error while transferring to GL',:CBS_Studio);


INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER 
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('Y','Yes','Successfully transfered to GL',:CBS_Distribution);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER 
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('N','No','Not transfered to GL',:CBS_Distribution);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_GL_TRANSFER  
(AP_GL_TRANSFER_CD, AP_GL_TRANSFER_CODE, AP_GL_TRANSFER_DESC,SET_OF_BOOKS_ID)
VALUES
('E','Error','Error while transferring to GL',:CBS_Distribution);

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_HOLD_CODE (CBS_Studio INT, CBS_Distribution INT) AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_HOLD_CODE where SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_HOLD_CODE ( 
   DESCRIPTION,
   HOLD_LOOKUP_CODE,
   HOLD_TYPE,
   SET_OF_BOOKS_ID) 
SELECT 
   DESCRIPTION,
   HOLD_LOOKUP_CODE,
   HOLD_TYPE,
   :CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_HOLD_CODE_s   
   UNION ALL
SELECT 
   DESCRIPTION,
   HOLD_LOOKUP_CODE,
   HOLD_TYPE,
   :CBS_Distribution AS SET_OF_BOOKS_ID   
FROM FDW_STAGE_DB.LOAD_AP_OA_HOLD_CODE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_HOLD_STATUS (CBS_Studio INT, CBS_Distribution INT) AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS WHERE SET_OF_BOOKS_ID <> 1002;

insert into FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS 
(AP_HOLD_STATUS_ID,AP_HOLD_STATUS,SET_OF_BOOKS_ID) 
values ('0','Not on Hold',:CBS_Studio); 

insert into FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS  
(AP_HOLD_STATUS_ID,AP_HOLD_STATUS,SET_OF_BOOKS_ID) 
values ('1','On Hold',:CBS_Studio); 


insert into FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS 
(AP_HOLD_STATUS_ID,AP_HOLD_STATUS,SET_OF_BOOKS_ID) 
values ('0','Not on Hold',:CBS_Distribution); 

insert into FDW_TABLES_DB.OA3NF_AP_OA_HOLD_STATUS  
(AP_HOLD_STATUS_ID,AP_HOLD_STATUS,SET_OF_BOOKS_ID) 
values ('1','On Hold',:CBS_Distribution); 

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_OA_INV_HOLD AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_OA_INV_HOLD_s
where
   LOAD_AP_OA_INV_HOLD_s.AP_INVOICE_ID = OA3NF_AP_OA_INV_HOLD.AP_INVOICE_ID
   AND LOAD_AP_OA_INV_HOLD_s.HOLD_LOOKUP_CODE = OA3NF_AP_OA_INV_HOLD.HOLD_LOOKUP_CODE
   AND LOAD_AP_OA_INV_HOLD_s.LINE_LOCATION_ID = OA3NF_AP_OA_INV_HOLD.LINE_LOCATION_ID
   AND LOAD_AP_OA_INV_HOLD_s.AP_HOLD_DATE = OA3NF_AP_OA_INV_HOLD.AP_HOLD_DATE
   AND LOAD_AP_OA_INV_HOLD_s.SET_OF_BOOKS_ID = OA3NF_AP_OA_INV_HOLD.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD ( 
   AP_INVOICE_ID,
   HOLD_LOOKUP_CODE,
   LINE_LOCATION_ID,
   AP_HOLD_DATE,
   HELD_BY,
   HOLD_REASON,
   RELEASE_LOOKUP_CODE,
   RELEASE_REASON,
   LAST_UPDATED_BY,
   LAST_UPDATE_DTTM,
   PO_NUMBER,
   AP_HOLD_REL_DATE,
   AP_DAYS_ON_HOLD_ID,
   AP_DAYS_HELD_ID,
   AP_HOLD_STATUS_ID,
   LAST_UPDATE_DATE,
   AP_HOLD_REL_BY_ID,
   SET_OF_BOOKS_ID) 
SELECT 
   AP_INVOICE_ID,
   HOLD_LOOKUP_CODE,
   LINE_LOCATION_ID,
   AP_HOLD_DATE,
   HELD_BY,
   HOLD_REASON,
   RELEASE_LOOKUP_CODE,
   RELEASE_REASON,
   LAST_UPDATED_BY,
   LAST_UPDATE_DTTM,
   PO_NUMBER,
   AP_HOLD_REL_DATE,
   AP_DAYS_ON_HOLD_ID,
   AP_DAYS_HELD_ID,
   AP_HOLD_STATUS_ID,
   LAST_UPDATE_DATE,
   AP_HOLD_REL_BY_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_OA_INV_HOLD_s;

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
    SET AP_DAYS_ON_HOLD_ID = NULL,ap_days_held_id = NULL;
 
Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
    SET AP_DAYS_ON_HOLD_ID = '4' 
WHERE
    AP_HOLD_REL_DATE IS NULL AND 
    cast(ap_hold_date as date) = cast(CURRENT_TIMESTAMP(0) AS DATE FORMAT 'DD-MMM-YYYY');

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
    set ap_days_on_hold_id = '3'
where
    ap_hold_rel_date IS NULL and 
    (cast(CURRENT_TIMESTAMP(0) AS DATE FORMAT 'DD-MMM-YYYY')- cast(ap_hold_date as date)) <= 30 and
    ap_days_on_hold_id is null;

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
   set ap_days_on_hold_id = '2'
where
    ap_hold_rel_date IS NULL and 
    (cast(CURRENT_TIMESTAMP(0) AS DATE FORMAT 'DD-MMM-YYYY') - cast(ap_hold_date as date)) <= 60 and
    (cast(CURRENT_TIMESTAMP(0) AS DATE FORMAT 'DD-MMM-YYYY') - cast(ap_hold_date as date)) > 30 and
    ap_days_on_hold_id is null;   

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
   set ap_days_on_hold_id = '1'
where
    ap_hold_rel_date IS NULL and 
    (cast(CURRENT_TIMESTAMP(0) AS DATE FORMAT 'DD-MMM-YYYY') - cast(ap_hold_date as date)) > 60 and
    ap_days_on_hold_id is null;   

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
   set ap_days_on_hold_id = '0'
where
    ap_days_on_hold_id IS NULL;

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
   set ap_days_held_id  = '0'
where
    ap_days_on_hold_id <> 0;

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
  set ap_days_held_id = '1'
where
  ((cast(ap_hold_rel_date as date)) - (cast(ap_hold_date as date))) >= 60
  and 
  ap_days_held_id is NULL 
  and 
  ap_hold_rel_date is NOT NULL;
   
 
Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
  set ap_days_held_id = '2'
where
  ((cast(ap_hold_rel_date as date)) - (cast(ap_hold_date as date))) >= 30
  and 
 ap_days_held_id is NULL 
 and 
 ap_hold_rel_date is NOT NULL;


Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
 set ap_days_held_id = '3'
where
 ((cast(ap_hold_rel_date as date)) - (cast(ap_hold_date as date))) > 0
 and 
  ap_days_held_id is NULL 
 and 
 ap_hold_rel_date is NOT NULL; 
 
Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
 set ap_days_held_id = '3'
where
 ap_hold_rel_date is null
 and 
  ap_days_held_id is NULL; 

Update FDW_TABLES_DB.OA3NF_AP_OA_INV_HOLD
   set ap_days_held_id = '0'
where
    ap_days_held_id IS NULL;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PAYMENT AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PAYMENT WHERE  OA_SET_OF_BOOKS_ID NOT IN(1002);
INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT ( 
   PAYMENT_ID,
   PAYMENT_CURRENCY_CD,
   PAYMENT_TRANSACTION_AMT,
   PAYMENT_LOCAL_AMT,
   PAYMENT_ACCOUNT_ID,
   PAYMENT_METHOD_TYPE_CD,
   PAYMENT_TYPE_CD,
   PAYMENT_COMMENTS_TXT,
   PAYMENT_PARTY_ID,
   OA_EXCHANGE_RATE,
   OA_BANK_ACCOUNT_NAME,
   OA_VOID_DATE,
   OA_ORG_ID,
   OA_VENDOR_ID,
   OA_VENDOR_SITE_ID,
   OA_CHECKRUN_NAME,
   OA_CHECK_NUM,
   OA_CHECK_DATE,
   OA_CHECK_STOCK_ID,
   OA_EXCHANGE_DATE,
   OA_CLEARED_DATE,
   LAST_UPDATE_DTTM,
   ORG_VEND_SITE_ID,
   OA_ORG_CRNAME_ID,
   OA_SET_OF_BOOKS_ID,
   P_SET_OF_BOOKS_ID,
   P_BASE_AMOUNT,
   OA_CHECK_DTTM ) 
SELECT 
   PAYMENT_ID,
   PAYMENT_CURRENCY_CD,
   PAYMENT_TRANSACTION_AMT,
   PAYMENT_LOCAL_AMT,
   PAYMENT_ACCOUNT_ID,
   PAYMENT_METHOD_TYPE_CD,
   PAYMENT_TYPE_CD,
   PAYMENT_COMMENTS_TXT,
   PAYMENT_PARTY_ID,
   OA_EXCHANGE_RATE,
   OA_BANK_ACCOUNT_NAME,
   OA_VOID_DATE,
   OA_ORG_ID,
   OA_VENDOR_ID,
   OA_VENDOR_SITE_ID,
   OA_CHECKRUN_NAME,
   OA_CHECK_NUM,
   OA_CHECK_DATE,
   OA_CHECK_STOCK_ID,
   OA_EXCHANGE_DATE,
   OA_CLEARED_DATE,
   LAST_UPDATE_DTTM,
   ORG_VEND_SITE_ID,
   OA_ORG_CRNAME_ID,
   OA_SET_OF_BOOKS_ID,
   P_SET_OF_BOOKS_ID,
   P_BASE_AMOUNT,
   OA_CHECK_DTTM
FROM FDW_STAGE_DB.LOAD_AP_PAYMENT_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PAYMENT_ACCOUNT AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PAYMENT_ACCOUNT
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_PAYMENT_ACCOUNT_s
where
   LOAD_AP_PAYMENT_ACCOUNT_s.PAYMENT_ACCOUNT_ID = OA3NF_AP_PAYMENT_ACCOUNT.PAYMENT_ACCOUNT_ID
   AND LOAD_AP_PAYMENT_ACCOUNT_s.OA_SET_OF_BOOKS_ID = OA3NF_AP_PAYMENT_ACCOUNT.OA_SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_ACCOUNT ( 
   PAYMENT_ACCOUNT_ID,
   PAYMENT_ACCOUNT_NUM,
   PAYMENT_ACCOUNT_NAME,
   PAYMENT_ACCOUNT_TYPE_CD,
   PAYMENT_ACCOUNT_CURRENCY_CD,
   BANK_BRANCH_PARTY_ID,
   OA_DESCRIPTION,
   OA_ACCOUNT_TYPE,
   OA_SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   INACTIVE_DATE,
   MAX_CHECK_AMOUNT,
   MIN_CHECK_AMOUNT,
   MULTI_CURRENCY_FLAG,
   ZERO_AMOUNTS_ALLOWED,
   BANK_ACCOUNT_NAME_ALT,
   BANK_CODE,
   POSITIVE_PAYEE_INDICATOR,
   ATTRIBUTE_CATEGORY,
   INACTIVE_FLAG,
   IBAN_NUMBER,
   ALLOW_MULTI_ASSIGNMENTS_FLAG,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4 ) 
SELECT 
   PAYMENT_ACCOUNT_ID,
   PAYMENT_ACCOUNT_NUM,
   PAYMENT_ACCOUNT_NAME,
   PAYMENT_ACCOUNT_TYPE_CD,
   PAYMENT_ACCOUNT_CURRENCY_CD,
   BANK_BRANCH_PARTY_ID,
   OA_DESCRIPTION,
   OA_ACCOUNT_TYPE,
   OA_SET_OF_BOOKS_ID,
   LAST_UPDATE_DTTM,
   INACTIVE_DATE,
   MAX_CHECK_AMOUNT,
   MIN_CHECK_AMOUNT,
   MULTI_CURRENCY_FLAG,
   ZERO_AMOUNTS_ALLOWED,
   BANK_ACCOUNT_NAME_ALT,
   BANK_CODE,
   POSITIVE_PAYEE_INDICATOR,
   ATTRIBUTE_CATEGORY,
   INACTIVE_FLAG,
   IBAN_NUMBER,
   ALLOW_MULTI_ASSIGNMENTS_FLAG,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4
FROM FDW_STAGE_DB.LOAD_AP_PAYMENT_ACCOUNT_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PAYMENT_DIST AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PAYMENT_DIST
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_PAYMENT_DIST_s
where
   LOAD_AP_PAYMENT_DIST_s.PAYMENT_ID = OA3NF_AP_PAYMENT_DIST.PAYMENT_ID
   AND LOAD_AP_PAYMENT_DIST_s.OA_AE_HEADER_ID = OA3NF_AP_PAYMENT_DIST.OA_AE_HEADER_ID
   AND LOAD_AP_PAYMENT_DIST_s.OA_ACCOUNTING_EVENT_ID = OA3NF_AP_PAYMENT_DIST.OA_ACCOUNTING_EVENT_ID
   AND LOAD_AP_PAYMENT_DIST_s.OA_AE_LINE_ID = OA3NF_AP_PAYMENT_DIST.OA_AE_LINE_ID
   AND LOAD_AP_PAYMENT_DIST_s.OA_SET_OF_BOOKS_ID = OA3NF_AP_PAYMENT_DIST.OA_SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_DIST ( 
   OA_EVENT_NUMBER,
   OA_AE_CATEGORY,
   OA_AE_HEADER_DESCRIPTION,
   OA_AE_LINE_DESCRIPTION,
   OA_AE_LINE_NUMBER,
   AP_ACCOUNTING_DATE,
   OA_AE_LINE_TYPE_CODE,
   OA_AP_EVENT_TYPE_CODE,
   AP_GL_TRANSFER_CD,
   LOCAL_CREDIT_AMOUNT,
   LOCAL_DEBIT_AMOUNT,
   INVOICE_NUMBER,
   PERIOD_NAME,
   OA_SET_OF_BOOKS_ID,
   TRX_CREDIT_AMOUNT,
   TRX_DEBIT_AMOUNT,
   CURRENCY_CODE,
   TRX_EXCHANGE_DATE,
   TRX_EXCHANGE_RATE,
   PAYMENT_ID,
   CHART_OF_ACCOUNT_ID,
   OA_AE_HEADER_ID,
   OA_GL_SL_LINK_ID,
   OA_ACCOUNTING_EVENT_ID,
   OA_AE_LINE_ID,
   SOURCE_SYSTEM_ID,
   LAST_UPDATE_DTTM,
   JE_HEADER_ID,
   JE_LINE_NUM,
   JE_HDR_ID_LINE_NUM,
   AP_ACCOUNTING_DTTM,
   CROSS_CURRENCY_FLAG,
   EVENT_STATUS_CODE,
   GL_TRANSFER_FLAG ) 
SELECT 
   OA_EVENT_NUMBER,
   OA_AE_CATEGORY,
   OA_AE_HEADER_DESCRIPTION,
   OA_AE_LINE_DESCRIPTION,
   OA_AE_LINE_NUMBER,
   AP_ACCOUNTING_DATE,
   OA_AE_LINE_TYPE_CODE,
   OA_AP_EVENT_TYPE_CODE,
   AP_GL_TRANSFER_CD,
   LOCAL_CREDIT_AMOUNT,
   LOCAL_DEBIT_AMOUNT,
   INVOICE_NUMBER,
   PERIOD_NAME,
   OA_SET_OF_BOOKS_ID,
   TRX_CREDIT_AMOUNT,
   TRX_DEBIT_AMOUNT,
   CURRENCY_CODE,
   TRX_EXCHANGE_DATE,
   TRX_EXCHANGE_RATE,
   PAYMENT_ID,
   CHART_OF_ACCOUNT_ID,
   OA_AE_HEADER_ID,
   OA_GL_SL_LINK_ID,
   OA_ACCOUNTING_EVENT_ID,
   OA_AE_LINE_ID,
   SOURCE_SYSTEM_ID,
   LAST_UPDATE_DTTM,
   JE_HEADER_ID,
   JE_LINE_NUM,
   JE_HDR_ID_LINE_NUM,
   AP_ACCOUNTING_DTTM,
   CROSS_CURRENCY_FLAG,
   EVENT_STATUS_CODE,
   GL_TRANSFER_FLAG
FROM FDW_STAGE_DB.LOAD_AP_PAYMENT_DIST_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------



REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PAYMENT_HIST AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_PAYMENT WHERE OA_SET_OF_BOOKS_ID IN (1002,-99999);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT
(
PAYMENT_ID,
PAYMENT_CURRENCY_CD,
PAYMENT_TRANSACTION_AMT,
PAYMENT_LOCAL_AMT,
PAYMENT_ACCOUNT_ID,
PAYMENT_METHOD_TYPE_CD,
PAYMENT_TYPE_CD,
PAYMENT_COMMENTS_TXT,
PAYMENT_PARTY_ID,
OA_EXCHANGE_RATE,
OA_BANK_ACCOUNT_NAME,
OA_VOID_DATE,
OA_ORG_ID,
OA_VENDOR_ID,
OA_VENDOR_SITE_ID,
OA_CHECKRUN_NAME,
OA_CHECK_NUM,
OA_CHECK_DATE,
OA_CHECK_STOCK_ID,
OA_EXCHANGE_DATE,
OA_CLEARED_DATE,
LAST_UPDATE_DTTM,
ORG_VEND_SITE_ID,
OA_ORG_CRNAME_ID,
OA_SET_OF_BOOKS_ID,
P_SET_OF_BOOKS_ID,
P_BASE_AMOUNT,
OA_CHECK_DTTM
)
SELECT
PAYMENT.PAYMENT_ID,
PAYMENT.PAYMENT_CURRENCY_CD,
PAYMENT.PAYMENT_TRANSACTION_AMT,
PAYMENT.PAYMENT_LOCAL_AMT,
PAYMENT.PAYMENT_ACCOUNT_ID,
PAYMENT.PAYMENT_METHOD_TYPE_CD,
PAYMENT.PAYMENT_TYPE_CD,
PAYMENT.PAYMENT_COMMENTS_TXT,
PAYMENT.PAYMENT_PARTY_ID,
PAYMENT.OA_EXCHANGE_RATE,
PAYMENT.OA_BANK_ACCOUNT_NAME,
PAYMENT.OA_VOID_DATE,
--PAYMENT.OA_ORG_ID,
(CASE 

WHEN VSP.NEW_VENDOR_SITE_ID IS NOT NULL THEN

(CASE PAYMENT.OA_ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)
ELSE 
PAYMENT.OA_ORG_ID END) AS OA_ORG_ID,
--OA3NF_AP_PAYMENT.OA_VENDOR_ID,
COALESCE(SRC.NEW_VENDOR_ID,PAYMENT.OA_VENDOR_ID) AS OA_VENDOR_ID,
--PAYMENT.OA_VENDOR_SITE_ID,
COALESCE(VSP.NEW_VENDOR_SITE_ID,PAYMENT.OA_VENDOR_SITE_ID) AS OA_VENDOR_SITE_ID,
PAYMENT.OA_CHECKRUN_NAME,
PAYMENT.OA_CHECK_NUM,
PAYMENT.OA_CHECK_DATE,
PAYMENT.OA_CHECK_STOCK_ID,
PAYMENT.OA_EXCHANGE_DATE,
PAYMENT.OA_CLEARED_DATE,
PAYMENT.LAST_UPDATE_DTTM,
--PAYMENT.ORG_VEND_SITE_ID,
CASE WHEN PAYMENT.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID THEN  ((CASE PAYMENT.OA_ORG_ID
WHEN 587 THEN 23424
WHEN 487 THEN 23422
WHEN 567 THEN 23423
WHEN 127 THEN 23421
END)||'-'||TRIM(CAST(SRC.NEW_VENDOR_ID AS INTEGER))||'-'||TRIM(CAST(VSP.NEW_VENDOR_SITE_ID AS INTEGER))) ELSE PAYMENT.ORG_VEND_SITE_ID END AS ORG_VEND_SITE_ID,
PAYMENT.OA_ORG_CRNAME_ID,
PAYMENT.OA_SET_OF_BOOKS_ID,
PAYMENT.P_SET_OF_BOOKS_ID,
PAYMENT.P_BASE_AMOUNT,
PAYMENT.OA_CHECK_DTTM
FROM FDM_TABLES_DB.OA3NF_AP_PAYMENT PAYMENT
LEFT JOIN FDW_STAGE_DB.LOAD_VENDOR_SITE_MAP VSP
ON (PAYMENT.OA_VENDOR_SITE_ID =VSP.OLD_VENDOR_SITE_ID)
LEFT JOIN (SELECT   
 VO.VENDOR_ID AS OLD_VENDOR_ID,VN.VENDOR_ID AS NEW_VENDOR_ID
FROM FDM_TABLES_DB.OA3NF_VENDOR VO,FDW_TABLES_DB.OA3NF_VENDOR VN,FDW_STAGE_DB.LOAD_VENDOR_MAP M
WHERE (VO.OA_VENDOR_NUMBER = M.OLD_VENDOR_NBR) AND
(VN.OA_VENDOR_NUMBER = M.NEW_VENDOR_NBR)) SRC
ON (PAYMENT.OA_VENDOR_ID=SRC.OLD_VENDOR_ID) 
and PAYMENT.OA_SET_OF_BOOKS_ID = 1002;


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PAYMENT_STATUS (CBS_Studio INT, CBS_Distribution INT) AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PAYMENT_STATUS WHERE  SET_OF_BOOKS_ID NOT IN 1002;

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PAYMENT_STATUS ( 
   PAYMENT_ID,
   PAYMENT_STATUS_TYPE_CD,
   PAYMENT_STATUS_DTTM,
   SET_OF_BOOKS_ID) 
SELECT 
   PAYMENT_ID,
   PAYMENT_STATUS_TYPE_CD,
   PAYMENT_STATUS_DTTM,
   :CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PAYMENT_STATUS_s
UNION ALL
SELECT 
   PAYMENT_ID,
   PAYMENT_STATUS_TYPE_CD,
   PAYMENT_STATUS_DTTM,
   :CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PAYMENT_STATUS_s
;
);
--------------------------------------------------------------------------------


--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_AP_PYMNT_SCHEDULE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PYMNT_SCHEDULE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHEDULE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_PYMNT_SCHEDULE_s
where
   LOAD_AP_PYMNT_SCHEDULE_s.PAYMENT_SCHEDULE_ID = OA3NF_AP_PYMNT_SCHEDULE.PAYMENT_SCHEDULE_ID
   AND LOAD_AP_PYMNT_SCHEDULE_s.SET_OF_BOOKS_ID = OA3NF_AP_PYMNT_SCHEDULE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHEDULE ( 
   PAYMENT_SCHEDULE_ID,
   INVOICE_ID,
   CONSOL_INVOICE_ID,
   OA_PAYMENT_NUM,
   LAST_UPDATE_DTTM,
   DISCOUNT_DATE,
   DUE_DATE,
   LOCAL_GROSS_AMOUNT,
   SECOND_DISCOUNT_DATE,
   THIRD_DISCOUNT_DATE,
   TRX_AMOUNT_REMAINING,
   TRX_FIRST_DISC_AMT_AVAIL,
   TRX_GROSS_AMOUNT,
   TRX_SECOND_DISC_AMT_AVAIL,
   TRX_THIRD_DISC_AMT_AVAIL,
   PAYMENT_PRIORITY,
   DISCOUNT_AMOUNT_AVAILABLE,
   DISCOUNT_AMOUNT_REMAINING,
   GROSS_AMOUNT,
   HOLD_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   CREATION_DATE,
   SECOND_DISC_AMT_AVAILABLE,
   THIRD_DISC_AMT_AVAILABLE,
   PAYMENT_STATUS_FLAG,
   AMOUNT_REMAINING,
   SET_OF_BOOKS_ID) 
SELECT 
   PAYMENT_SCHEDULE_ID,
   INVOICE_ID,
   CONSOL_INVOICE_ID,
   OA_PAYMENT_NUM,
   LAST_UPDATE_DTTM,
   DISCOUNT_DATE,
   DUE_DATE,
   LOCAL_GROSS_AMOUNT,
   SECOND_DISCOUNT_DATE,
   THIRD_DISCOUNT_DATE,
   TRX_AMOUNT_REMAINING,
   TRX_FIRST_DISC_AMT_AVAIL,
   TRX_GROSS_AMOUNT,
   TRX_SECOND_DISC_AMT_AVAIL,
   TRX_THIRD_DISC_AMT_AVAIL,
   PAYMENT_PRIORITY,
   DISCOUNT_AMOUNT_AVAILABLE,
   DISCOUNT_AMOUNT_REMAINING,
   GROSS_AMOUNT,
   HOLD_FLAG,
   PAYMENT_METHOD_LOOKUP_CODE,
   CREATION_DATE,
   SECOND_DISC_AMT_AVAILABLE,
   THIRD_DISC_AMT_AVAILABLE,
   PAYMENT_STATUS_FLAG,
   AMOUNT_REMAINING,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PYMNT_SCHEDULE_s;

DELETE FROM FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHEDULE WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHED_DEL S
WHERE OA3NF_AP_PYMNT_SCHEDULE.PAYMENT_SCHEDULE_ID = S.PAYMENT_SCHEDULE_ID
AND OA3NF_AP_PYMNT_SCHEDULE.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND  OA3NF_AP_PYMNT_SCHEDULE.SET_OF_BOOKS_ID<>1002 
;

);
--------------------------------------------------------------------------------

--- Request Text
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PYMNT_SCHED_DEL AS (

DELETE FROM FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHED_DEL WHERE SET_OF_BOOKS_ID NOT IN(1002);
INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_SCHED_DEL ( 
PAYMENT_SCHEDULE_ID,
SET_OF_BOOKS_ID
)
SELECT 
PAYMENT_SCHEDULE_ID,
SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PYMNT_SCHED_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PYMNT_TERM_TYPE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_PYMNT_TERM_TYPE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_AP_PYMNT_TERM_TYPE_s
where
   LOAD_AP_PYMNT_TERM_TYPE_s.PAYMENT_TERM_TYPE_CD = OA3NF_AP_PYMNT_TERM_TYPE.PAYMENT_TERM_TYPE_CD
   AND LOAD_AP_PYMNT_TERM_TYPE_s.SET_OF_BOOKS_ID = OA3NF_AP_PYMNT_TERM_TYPE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMNT_TERM_TYPE ( 
   PAYMENT_TERM_TYPE_DESC,
   PAYMENT_TERM_TYPE_CD,
   LAST_UPDATE_DTTM,
   OA_NAME,
   LANGUAGE_CD,
   PAYMENT_TERM_TYPE_END_DTTM,
   PAYMENT_TERM_TYPE_START_DTTM,
   SET_OF_BOOKS_ID) 
SELECT 
   PAYMENT_TERM_TYPE_DESC,
   PAYMENT_TERM_TYPE_CD,
   LAST_UPDATE_DTTM,
   OA_NAME,
   LANGUAGE_CD,
   PAYMENT_TERM_TYPE_END_DTTM,
   PAYMENT_TERM_TYPE_START_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PYMNT_TERM_TYPE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_PYMT_SCHED_PYMT AS (

DELETE  FROM FDW_TABLES_DB.OA3NF_AP_PYMT_SCHED_PYMT WHERE SET_OF_BOOKS_ID <> 1002;

INSERT INTO FDW_TABLES_DB.OA3NF_AP_PYMT_SCHED_PYMT ( 
   PAYMENT_ID,
   PAYMENT_SCHEDULE_ID,
   LAST_UPDATE_DTTM,
   BANK_NUM,
   DISCOUNT_LOST,
   DISCOUNT_TAKEN,
   FUTURE_PAY_POSTED_FLAG,
   PAYMENT_NUM,
   PERIOD_NAME,
   POSTED_FLAG,
   CREATION_DATE,
   INVOICE_PAYMENT_ID,
   INVOICE_ID,
   ACCOUNTING_DATE,
   AMOUNT,
   INVOICE_PAYMENT_TYPE,
   REVERSAL_FLAG,
   ACCOUNTING_EVENT_ID,
   BANK_ACCOUNT_NUM,
   BANK_ACCOUNT_TYPE,
   CASH_JE_BATCH_ID,
   CASH_POSTED_FLAG,
   INVOICE_BASE_AMOUNT,
   JE_BATCH_ID,
   ORG_ID,
   ACCRUAL_POSTED_FLAG,
   ACCTS_PAY_CODE_COMBINATION_ID,
   ASSETS_ADDITION_FLAG,
   ASSET_CODE_COMBINATION_ID,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE_CATEGORY,
   CREATED_BY,
   ELECTRONIC_TRANSFER_ID,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXTERNAL_BANK_ACCOUNT_ID,
   FUTURE_PAY_CODE_COMBINATION_ID,
   GAIN_CODE_COMBINATION_ID,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   IBAN_NUMBER,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   LOSS_CODE_COMBINATION_ID,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   MRC_GAIN_CODE_COMBINATION_ID,
   MRC_INVOICE_BASE_AMOUNT,
   MRC_LOSS_CODE_COMBINATION_ID,
   MRC_PAYMENT_BASE_AMOUNT,
   OTHER_INVOICE_ID,
   PAYMENT_BASE_AMOUNT,
   REVERSAL_INV_PMT_ID,
   SET_OF_BOOKS_ID ) 
SELECT 
   PAYMENT_ID,
   PAYMENT_SCHEDULE_ID,
   LAST_UPDATE_DTTM,
   BANK_NUM,
   DISCOUNT_LOST,
   DISCOUNT_TAKEN,
   FUTURE_PAY_POSTED_FLAG,
   PAYMENT_NUM,
   PERIOD_NAME,
   POSTED_FLAG,
   CREATION_DATE,
   INVOICE_PAYMENT_ID,
   INVOICE_ID,
   ACCOUNTING_DATE,
   AMOUNT,
   INVOICE_PAYMENT_TYPE,
   REVERSAL_FLAG,
   ACCOUNTING_EVENT_ID,
   BANK_ACCOUNT_NUM,
   BANK_ACCOUNT_TYPE,
   CASH_JE_BATCH_ID,
   CASH_POSTED_FLAG,
   INVOICE_BASE_AMOUNT,
   JE_BATCH_ID,
   ORG_ID,
   ACCRUAL_POSTED_FLAG,
   ACCTS_PAY_CODE_COMBINATION_ID,
   ASSETS_ADDITION_FLAG,
   ASSET_CODE_COMBINATION_ID,
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE_CATEGORY,
   CREATED_BY,
   ELECTRONIC_TRANSFER_ID,
   EXCHANGE_DATE,
   EXCHANGE_RATE,
   EXCHANGE_RATE_TYPE,
   EXTERNAL_BANK_ACCOUNT_ID,
   FUTURE_PAY_CODE_COMBINATION_ID,
   GAIN_CODE_COMBINATION_ID,
   GLOBAL_ATTRIBUTE1,
   GLOBAL_ATTRIBUTE10,
   GLOBAL_ATTRIBUTE11,
   GLOBAL_ATTRIBUTE12,
   GLOBAL_ATTRIBUTE13,
   GLOBAL_ATTRIBUTE14,
   GLOBAL_ATTRIBUTE15,
   GLOBAL_ATTRIBUTE16,
   GLOBAL_ATTRIBUTE17,
   GLOBAL_ATTRIBUTE18,
   GLOBAL_ATTRIBUTE19,
   GLOBAL_ATTRIBUTE2,
   GLOBAL_ATTRIBUTE20,
   GLOBAL_ATTRIBUTE3,
   GLOBAL_ATTRIBUTE4,
   GLOBAL_ATTRIBUTE5,
   GLOBAL_ATTRIBUTE6,
   GLOBAL_ATTRIBUTE7,
   GLOBAL_ATTRIBUTE8,
   GLOBAL_ATTRIBUTE9,
   GLOBAL_ATTRIBUTE_CATEGORY,
   IBAN_NUMBER,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   LOSS_CODE_COMBINATION_ID,
   MRC_EXCHANGE_DATE,
   MRC_EXCHANGE_RATE,
   MRC_EXCHANGE_RATE_TYPE,
   MRC_GAIN_CODE_COMBINATION_ID,
   MRC_INVOICE_BASE_AMOUNT,
   MRC_LOSS_CODE_COMBINATION_ID,
   MRC_PAYMENT_BASE_AMOUNT,
   OTHER_INVOICE_ID,
   PAYMENT_BASE_AMOUNT,
   REVERSAL_INV_PMT_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_PYMT_SCHED_PYMT_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_SECURITY AS(

DELETE FROM  FDW_TABLES_DB.OA3NF_AP_SECURITY;

INSERT INTO  FDW_TABLES_DB.OA3NF_AP_SECURITY
(
	USER_NAME, 
	ORGANIZATION_ID,
	NAME 
)
SELECT 
	USER_NAME, 
	ORGANIZATION_ID,
	NAME 
FROM FDW_STAGE_DB.LOAD_AP_SECURITY_S;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AP_TERMS_TL (CBS_Studio INT, CBS_Distribution INT) AS 
 (
DELETE FROM FDW_TABLES_DB.OA3NF_AP_TERMS_TL   WHERE  SET_OF_BOOKS_ID NOT IN 1002;


INSERT INTO FDW_TABLES_DB.OA3NF_AP_TERMS_TL ( 
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE_CATEGORY,
   CREATED_BY,
   CREATION_DATE,
   DESCRIPTION,
   DUE_CUTOFF_DAY,
   ENABLED_FLAG,
   END_DATE_ACTIVE,
   LANGUAGE_,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   NAME,
   RANK_,
   SOURCE_LANG,
   START_DATE_ACTIVE,
   TERM_ID,
   TYPE_,
   SET_OF_BOOKS_ID) 
SELECT 
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE_CATEGORY,
   CREATED_BY,
   CREATION_DATE,
   DESCRIPTION,
   DUE_CUTOFF_DAY,
   ENABLED_FLAG,
   END_DATE_ACTIVE,
   LANGUAGE_,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   NAME,
   RANK_,
   SOURCE_LANG,
   START_DATE_ACTIVE,
   TERM_ID,
   TYPE_,
   :CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_TERMS_TL_s
UNION ALL
SELECT 
   ATTRIBUTE1,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE_CATEGORY,
   CREATED_BY,
   CREATION_DATE,
   DESCRIPTION,
   DUE_CUTOFF_DAY,
   ENABLED_FLAG,
   END_DATE_ACTIVE,
   LANGUAGE_,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   LAST_UPDATE_LOGIN,
   NAME,
   RANK_,
   SOURCE_LANG,
   START_DATE_ACTIVE,
   TERM_ID,
   TYPE_,
   :CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AP_TERMS_TL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AUTHRZR AS(

MERGE INTO FDW_TABLES_DB.OA3NF_AUTHRZR_S
USING
(SELECT 
EMPLOYEE_ID   AS EMPLOYEE_ID,
OBJECT_ID     AS OBJECT_ID ,
SEQUENCE_NUM  AS SEQUENCE_NUM
FROM FDW_STAGE_DB.LOAD_AUTHRZR_S_s)  AS LOAD_AUTHRZR_S
ON ( FDW_TABLES_DB.OA3NF_AUTHRZR_S.OBJECT_ID  =LOAD_AUTHRZR_S.OBJECT_ID)
WHEN MATCHED THEN UPDATE
SET 
EMPLOYEE_ID   = LOAD_AUTHRZR_S.EMPLOYEE_ID,
SEQUENCE_NUM  = LOAD_AUTHRZR_S.SEQUENCE_NUM
WHEN NOT MATCHED THEN INSERT
(
EMPLOYEE_ID,
OBJECT_ID ,
SEQUENCE_NUM
)VALUES
(
LOAD_AUTHRZR_S.EMPLOYEE_ID,
LOAD_AUTHRZR_S.OBJECT_ID,
LOAD_AUTHRZR_S.SEQUENCE_NUM
);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_AUTHRZR_S(CBS_Studio INT, CBS_Distribution INT)  AS(
DELETE FROM FDW_TABLES_DB.OA3NF_AUTHRZR_S  WHERE SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_AUTHRZR_S

(
EMPLOYEE_ID,
OBJECT_ID ,
SEQUENCE_NUM,
SET_OF_BOOKS_ID
)
SELECT 
EMPLOYEE_ID,
OBJECT_ID ,
SEQUENCE_NUM,
:CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AUTHRZR_S_s
UNION ALL
SELECT 
EMPLOYEE_ID,
OBJECT_ID ,
SEQUENCE_NUM,
:CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_AUTHRZR_S_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_AUDIT
AS (


--Delete in case of a re-run


DELETE FROM  FDW_TABLES_DB.OA3NF_BAL_AUDIT
  
  WHERE CAST(PROCESS_DATE AS DATE) 
    IN
    (SELECT CAST(PD.PROCESS_DATE AS DATE)   FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD) ;


/*
======================================================================================
Populate the Audit Table
======================================================================================
*/

/*
======================================================================================
Teradata LA v/s ORACLE Status 
======================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_AUDIT
(
PROCESS_DATE
, PERIOD_NAME
,SET_OF_BOOKS_ID
, STATUS
, SRC_SYS
, DW_TS
)
SELECT 
VAR_DT.PROCESS_DATE AS PROCESS_DATE
,VAR_DT.PERIOD_ID AS PERIOD_NAME
,VAR_DT.SET_OF_BOOKS_ID
,CASE
WHEN REC_CNT=0 THEN 'IN-BALANCE' 
ELSE 'OUT-OF-BALANCE'
END AS STATUS
,'TERADATA LA - ORACLE' AS SRC_SYS
,CURRENT_TIMESTAMP AS DW_TS
--,AMOUNT_TYPE

FROM 
(
SELECT 
CAL.PERIOD_ID
,CAL.PROCESS_DATE
,COALESCE(VAR.SET_OF_BOOKS_ID,2248)  AS SET_OF_BOOKS_ID
,SUM
(
CASE WHEN  AMOUNT_TYPE LIKE '%LA-ORA-VAR' THEN 1
ELSE 0
END
) AS REC_CNT

FROM FDW_TABLES_DB. OA3NF_BAL_GL_BALANCES_VAR AS VAR

FULL OUTER JOIN 
(
SEL UPPER(CAST ((CAST(PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE

) CAL

ON CAL.PERIOD_ID=VAR.GL_PERIOD_ID  and CAL.PROCESS_DATE=VAR.PROCESS_DATE AND VAR.SET_OF_BOOKS_ID=2248

GROUP BY 1,2,3
) 

VAR_DT  ;



/*
======================================================================================
Teradata LA v/s Teradata Phoenix Status 
======================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_AUDIT

(
PROCESS_DATE
, PERIOD_NAME
,SET_OF_BOOKS_ID
, STATUS
, SRC_SYS
, DW_TS
)


SELECT 
VAR_DT.PROCESS_DATE AS PROCESS_DATE
,VAR_DT.PERIOD_ID AS PERIOD_NAME
,VAR_DT.SET_OF_BOOKS_ID
,CASE
WHEN REC_CNT=0 THEN 'IN-BALANCE' 
ELSE 'OUT-OF-BALANCE'
END AS STATUS
,'TERADATA LA -TERADATA PHX' AS SRC_SYS
,CURRENT_TIMESTAMP AS DW_TS
--,AMOUNT_TYPE

FROM 
(
SELECT 
CAL.PERIOD_ID
,CAL.PROCESS_DATE
,COALESCE(VAR.SET_OF_BOOKS_ID,2248)  AS SET_OF_BOOKS_ID
,SUM
(
CASE WHEN  AMOUNT_TYPE LIKE '%LA-PH-VAR' THEN 1
ELSE 0
END
) AS REC_CNT

FROM FDW_TABLES_DB. OA3NF_BAL_GL_BALANCES_VAR AS VAR

FULL OUTER JOIN 
(
SEL UPPER(CAST ((CAST(PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE
) CAL

ON CAL.PERIOD_ID=VAR.GL_PERIOD_ID  and CAL.PROCESS_DATE=VAR.PROCESS_DATE AND VAR.SET_OF_BOOKS_ID=2248


GROUP BY 1,2,3
) VAR_DT
;


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_AUDIT
(
PROCESS_DATE
, PERIOD_NAME
,SET_OF_BOOKS_ID
, STATUS
, SRC_SYS
, DW_TS
)
SELECT 
VAR_DT.PROCESS_DATE AS PROCESS_DATE
,VAR_DT.PERIOD_ID AS PERIOD_NAME
,VAR_DT.SET_OF_BOOKS_ID
,CASE
WHEN REC_CNT=0 THEN 'IN-BALANCE' 
ELSE 'OUT-OF-BALANCE'
END AS STATUS
,'TERADATA LA - ORACLE' AS SRC_SYS
,CURRENT_TIMESTAMP AS DW_TS
--,AMOUNT_TYPE

FROM 
(
SELECT 
CAL.PERIOD_ID
,CAL.PROCESS_DATE
,COALESCE(VAR.SET_OF_BOOKS_ID,2249)  AS SET_OF_BOOKS_ID
,SUM
(
CASE WHEN  AMOUNT_TYPE LIKE '%LA-ORA-VAR' THEN 1
ELSE 0
END
) AS REC_CNT

FROM FDW_TABLES_DB. OA3NF_BAL_GL_BALANCES_VAR AS VAR

FULL OUTER JOIN 
(
SEL UPPER(CAST ((CAST(PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE

) CAL

ON CAL.PERIOD_ID=VAR.GL_PERIOD_ID  and CAL.PROCESS_DATE=VAR.PROCESS_DATE AND VAR.SET_OF_BOOKS_ID=2249

GROUP BY 1,2,3
) 

VAR_DT  ;



/*
======================================================================================
Teradata LA v/s Teradata Phoenix Status 
======================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_AUDIT

(
PROCESS_DATE
, PERIOD_NAME
,SET_OF_BOOKS_ID
, STATUS
, SRC_SYS
, DW_TS
)


SELECT 
VAR_DT.PROCESS_DATE AS PROCESS_DATE
,VAR_DT.PERIOD_ID AS PERIOD_NAME
,VAR_DT.SET_OF_BOOKS_ID
,CASE
WHEN REC_CNT=0 THEN 'IN-BALANCE' 
ELSE 'OUT-OF-BALANCE'
END AS STATUS
,'TERADATA LA -TERADATA PHX' AS SRC_SYS
,CURRENT_TIMESTAMP AS DW_TS
--,AMOUNT_TYPE

FROM 
(
SELECT 
CAL.PERIOD_ID
,CAL.PROCESS_DATE
,COALESCE(VAR.SET_OF_BOOKS_ID,'2249')  AS SET_OF_BOOKS_ID
,SUM
(
CASE WHEN  AMOUNT_TYPE LIKE '%LA-PH-VAR' THEN 1
ELSE 0
END
) AS REC_CNT

FROM FDW_TABLES_DB. OA3NF_BAL_GL_BALANCES_VAR AS VAR

FULL OUTER JOIN 
(
SEL UPPER(CAST ((CAST(PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
,PROCESS_DATE
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE
) CAL

ON CAL.PERIOD_ID=VAR.GL_PERIOD_ID  and CAL.PROCESS_DATE=VAR.PROCESS_DATE AND VAR.SET_OF_BOOKS_ID=2249


GROUP BY 1,2,3
) VAR_DT
;

/*
======================================================================================
Delete Null process_date records-Got inserted  due to full outer join
======================================================================================
*/
DELETE FROM  FDW_TABLES_DB.OA3NF_BAL_AUDIT
  
  WHERE CAST(PROCESS_DATE AS DATE) IS NULL;

 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_BALANCES (CBS_Studio INT, CBS_Distribution INT)
AS (

--DELETE

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES ;

--INSERT

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES
(
CHART_OF_ACCOUNT_ID
,CURRENCY_CD
,GL_PERIOD_ID
,LAST_UPDATE_DTTM
,BEGIN_BALANCE_DR
,BEGIN_BALANCE_CR
,PERIOD_NET_DR
,PERIOD_NET_CR
,BEGIN_BALANCE_CR_BEQ
,BEGIN_BALANCE_DR_BEQ
,PERIOD_NET_CR_BEQ
,PERIOD_NET_DR_BEQ
,SET_OF_BOOKS_ID
,ACCOUNT_TYPE
,BUSINESS_ENTITY_KEY
,VENDOR_KEY
,FUTURE_KEY
,ACCOUNT_KEY
,DEPARTMENT_KEY
,PRODUCT_SEASON_EPISODE_KEY
,DETAIL_KEY
,TERRITORY_KEY
, MEDIUM_KEY
, USER_DEFINED_KEY
, INTERCOMPANY_KEY
)


SELECT 
OA3NF_BAL_GL_BALANCES_STG.CHART_OF_ACCOUNT_ID   AS CHART_OF_ACCOUNT_ID
,OA3NF_BAL_GL_BALANCES_STG.CURRENCY_CD   AS CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_STG.GL_PERIOD_ID   AS GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES_STG.LAST_UPDATE_DTTM   AS LAST_UPDATE_DTTM
,OA3NF_BAL_GL_BALANCES_STG.BEGIN_BALANCE_DR   AS BEGIN_BALANCE_DR
,OA3NF_BAL_GL_BALANCES_STG.BEGIN_BALANCE_CR   AS BEGIN_BALANCE_CR
,OA3NF_BAL_GL_BALANCES_STG.PERIOD_NET_DR  AS PERIOD_NET_DR
,OA3NF_BAL_GL_BALANCES_STG.PERIOD_NET_CR   AS PERIOD_NET_CR
,OA3NF_BAL_GL_BALANCES_STG.BEGIN_BALANCE_CR_BEQ   AS BEGIN_BALANCE_CR_BEQ
,OA3NF_BAL_GL_BALANCES_STG.BEGIN_BALANCE_DR_BEQ   AS  BEGIN_BALANCE_DR_BEQ
,OA3NF_BAL_GL_BALANCES_STG.PERIOD_NET_CR_BEQ  AS PERIOD_NET_CR_BEQ
,OA3NF_BAL_GL_BALANCES_STG.PERIOD_NET_DR_BEQ   AS PERIOD_NET_DR_BEQ
,OA3NF_BAL_GL_BALANCES_STG.SET_OF_BOOKS_ID
,OA3NF_COA.ACCOUNT_TYPE     AS ACCOUNT_TYPE
,COALESCE(OA3NF_COA.SEGMENT1,'XXXX')     AS BUSINESS_ENTITY_KEY
,COALESCE(OA3NF_COA.SEGMENT10,'XXXX')   AS VENDOR_KEY
,COALESCE(OA3NF_COA.SEGMENT11,'XXXX')   AS FUTURE_KEY
,COALESCE(OA3NF_COA.SEGMENT2,'XXXX')    AS ACCOUNT_KEY
,COALESCE(OA3NF_COA.SEGMENT3,'XXXX')    AS DEPARTMENT_KEY
,COALESCE(OA3NF_COA.SEGMENT4,'XXXX')    AS PRODUCT_SEASON_EPISODE_KEY
,COALESCE(OA3NF_COA.SEGMENT5,'XXXX')    AS DETAIL_KEY
,COALESCE(OA3NF_COA.SEGMENT6,'XXXX')    AS TERRITORY_KEY
,COALESCE(OA3NF_COA.SEGMENT7,'XXXX')    AS MEDIUM_KEY
,COALESCE(OA3NF_COA.SEGMENT8,'XXXX')    AS USER_DEFINED_KEY
,COALESCE(OA3NF_COA.SEGMENT9,'XXXX')    AS INTERCOMPANY_KEY

FROM   FDW_STAGE_DB.OA3NF_BAL_GL_BALANCES_STG AS OA3NF_BAL_GL_BALANCES_STG
LEFT JOIN  FDW_TABLES_DB.OA3NF_COA    AS OA3NF_COA

ON (CAST(OA3NF_BAL_GL_BALANCES_STG.CHART_OF_ACCOUNT_ID AS DECIMAL(18,0))=OA3NF_COA.CHART_OF_ACCOUNT_ID 

AND CAST(OA3NF_BAL_GL_BALANCES_STG.SET_OF_BOOKS_ID AS DECIMAL(18,0))=OA3NF_COA.SET_OF_BOOKS_ID)
WHERE OA3NF_BAL_GL_BALANCES_STG.ACTUAL_FLAG='A' AND OA3NF_COA.SET_OF_BOOKS_ID IN(:CBS_Studio,:CBS_Distribution);

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_BALANCES_SUM (CBS_Studio INT, CBS_Distribution INT)
AS (


/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 15 DAYS
########################################################################################
*/

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
WHERE CAST(PROCESS_DATE AS DATE) 
NOT BETWEEN 
( SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE)+165    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
    AND 
 (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD)
;


/*
==================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table From Oracle 
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)


SELECT
OA3NF_BAL_GL_BALANCES.GL_PERIOD_ID   AS    GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES.ACCOUNT_KEY    AS ACCOUNT_KEY  
,PD.PROCESS_DATE      AS PROCESS_DATE            
,OA3NF_BAL_GL_BALANCES.CHART_OF_ACCOUNT_ID  AS CHART_OF_ACCOUNT_ID 
,OA3NF_BAL_GL_BALANCES.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,'ORACLE' AS SRC_SYSTEM 
,OA3NF_BAL_GL_BALANCES.CURRENCY_CD AS CURRENCY_CD
,OA3NF_BAL_GL_BALANCES.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID

,SUM (
CASE WHEN OA3NF_BAL_GL_BALANCES.CURRENCY_CD='USD'
THEN
(
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_DR_BEQ+OA3NF_BAL_GL_BALANCES.PERIOD_NET_DR_BEQ)
-
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_CR_BEQ+OA3NF_BAL_GL_BALANCES.PERIOD_NET_CR_BEQ)
)
ELSE 0 END)       AS ACTUAL_ENDING_BALANCE_USD                 
      
,SUM (CASE WHEN OA3NF_BAL_GL_BALANCES.CURRENCY_CD<>'USD'
THEN (
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_DR+OA3NF_BAL_GL_BALANCES.PERIOD_NET_DR)
-
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_CR+OA3NF_BAL_GL_BALANCES.PERIOD_NET_CR)
)
ELSE 0 END )             AS ACTUAL_ENDING_BALANCE_TXN                     

FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES AS OA3NF_BAL_GL_BALANCES

JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

ON 1=1

GROUP BY 
GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
WHERE OA3NF_BAL_GL_BALANCES.SET_OF_BOOKS_ID IN(:CBS_Studio,:CBS_Distribution)
;





/*
========================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table : TERADATA L/A
========================================================================================
*/



INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)



SELECT

OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY   AS GL_PERIOD_ID
,OASEM_BI_GL_ACCT_BAL_F.ACCOUNT__KEY   AS ACCOUNT_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID  AS CHART_OF_ACCOUNT_ID
,OASEM_BI_GL_ACCT_BAL_F.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,'TERADATA-L/A'     AS SRC_SYSTEM
,OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY   AS CURRENCY_CD
,OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY AS SET_OF_BOOKS_KEY
,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN

FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F AS OASEM_BI_GL_ACCT_BAL_F

JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

ON 1=1

GROUP BY GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_KEY


WHERE
SET_OF_BOOKS_KEY IN (:CBS_Studio,:CBS_Distribution) AND
 GL_PERIOD_ID IN
 

(
SEL UPPER(CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

) 
;



/*
======================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table : TERADATA Phx
======================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)



SELECT

STG.GL_PERIOD_ID AS GL_PERIOD_ID
,STG.ACCOUNT_KEY  AS ACCOUNT_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,STG.CHART_OF_ACCOUNT_ID  AS CHART_OF_ACCOUNT_ID
,STG.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,STG.SRC_SYSTEM   AS SRC_SYSTEM
,STG.CURRENCY_CD   AS CURRENCY_CD
,STG.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID
,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN

FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM_PH AS STG
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1


GROUP BY GL_PERIOD_ID
,ACCOUNT_KEY
,PD.PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID

WHERE SET_OF_BOOKS_ID IN(:CBS_Studio,:CBS_Distribution)
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------



REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_BALANCES_VAR
AS (

/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : Populate Variance Table
==================================================================================
*/


/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 180 DAYS
########################################################################################
*/


  DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR


WHERE CAST(PROCESS_DATE AS DATE) NOT BETWEEN 

    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD)
    
         ;




/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : Insert ACTUAL_ENDING_BALANCE_USD-LA
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_1
, DT.AMOUNT_TYPE_1

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_USD-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_USD-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_USD-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_USD
-ORA_TB.ACTUAL_ENDING_BALANCE_USD) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND  TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3>1
AND TD_TB.CURRENCY_CD='USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 

) DT;


/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : Insert ACTUAL_ENDING_BALANCE_USD-ORA
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,SET_OF_BOOKS_ID
,CURRENCY_CD
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.SET_OF_BOOKS_ID
,DT.CURRENCY_CD
, DT.AMOUNT_2
, DT.AMOUNT_TYPE_2

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.SET_OF_BOOKS_ID
,TD_TB.CURRENCY_CD
,'ACTUAL_ENDING_BALANCE_USD-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_USD-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_USD-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_USD
-ORA_TB.ACTUAL_ENDING_BALANCE_USD) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3 > 1
AND TD_TB.CURRENCY_CD='USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 

) DT;


/*
==================================================================================
Step 9-10  : OA3NF_BAL_GL_BALANCES_VAR  : ACTUAL_ENDING_BALANCE_USD-LA-ORA-VAR
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_3
, DT.AMOUNT_TYPE_3

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_USD-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_USD-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_USD-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_USD
-ORA_TB.ACTUAL_ENDING_BALANCE_USD) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3 > 1

AND TD_TB.CURRENCY_CD='USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 

) DT;

/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : ACTUAL_ENDING_BALANCE_TXN-LA
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_1
, DT.AMOUNT_TYPE_1

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_TXN-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_TXN-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_TXN-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_TXN
-ORA_TB.ACTUAL_ENDING_BALANCE_TXN) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3 > 1
AND TD_TB.CURRENCY_CD<>'USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 
) DT;

/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : ACTUAL_ENDING_BALANCE_TXN-ORA
==================================================================================
*/



INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_2
, DT.AMOUNT_TYPE_2

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_TXN-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_TXN-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_TXN-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_TXN
-ORA_TB.ACTUAL_ENDING_BALANCE_TXN) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3>1
AND TD_TB.CURRENCY_CD<>'USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 

) DT;


/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : ACTUAL_ENDING_BALANCE_TXN-LA-ORA-VA
==================================================================================
*/



INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_3
, DT.AMOUNT_TYPE_3

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_TXN-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_TXN-ORA' AS AMOUNT_TYPE_2
,ORA_TB.ACTUAL_ENDING_BALANCE_TXN AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_TXN-LA-ORA-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_TXN
-ORA_TB.ACTUAL_ENDING_BALANCE_TXN) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB AS ORA_TB

ON    TD_TB.GL_PERIOD_ID=ORA_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=ORA_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=ORA_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=ORA_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=ORA_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=ORA_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3>1
AND TD_TB.CURRENCY_CD<>'USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) 

) DT;

/*
==================================================================================
OA3NF_BAL_GL_BALANCES_VAR  : Insert ACTUAL_ENDING_BALANCE_USD-LA
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR
(
GL_PERIOD_ID
,ACCOUNT_KEY
,BUSINESS_ENTITY_KEY
,PROCESS_DATE
,CURRENCY_CD
,SET_OF_BOOKS_ID
, AMOUNT
, AMOUNT_TYPE
)

SELECT 
DT.GL_PERIOD_ID
,DT.ACCOUNT_KEY
,DT.BUSINESS_ENTITY_KEY
,DT.PROCESS_DATE
,DT.CURRENCY_CD
,DT.SET_OF_BOOKS_ID
, DT.AMOUNT_1
, DT.AMOUNT_TYPE_1

FROM 
(

SELECT

TD_TB .GL_PERIOD_ID
,TD_TB .ACCOUNT_KEY
,TD_TB .BUSINESS_ENTITY_KEY
,TD_TB.PROCESS_DATE
,TD_TB.CURRENCY_CD
,TD_TB.SET_OF_BOOKS_ID
,'ACTUAL_ENDING_BALANCE_USD-LA' AS AMOUNT_TYPE_1
,TD_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_1

,'ACTUAL_ENDING_BALANCE_USD-PH' AS AMOUNT_TYPE_2
,PH_TB.ACTUAL_ENDING_BALANCE_USD AS AMOUNT_2

,'ACTUAL_ENDING_BALANCE_USD-LA-PH-VAR' AS AMOUNT_TYPE_3
,ABS(TD_TB.ACTUAL_ENDING_BALANCE_USD
-PH_TB.ACTUAL_ENDING_BALANCE_USD) AS AMOUNT_3


FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB AS TD_TB

LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_PH_TB AS PH_TB

ON    TD_TB.GL_PERIOD_ID=PH_TB.GL_PERIOD_ID
AND  TD_TB.ACCOUNT_KEY=PH_TB.ACCOUNT_KEY
AND  TD_TB.BUSINESS_ENTITY_KEY=PH_TB.BUSINESS_ENTITY_KEY
AND   TD_TB.CURRENCY_CD=PH_TB.CURRENCY_CD
AND   TD_TB.PROCESS_DATE=PH_TB.PROCESS_DATE
AND   TD_TB.SET_OF_BOOKS_ID=PH_TB.SET_OF_BOOKS_ID
WHERE AMOUNT_3>1
AND TD_TB.CURRENCY_CD='USD'
AND 
 CAST(TD_TB.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
  
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_BALA_SUM_SGI (CBS_Studio INT, CBS_Distribution INT)
AS (


/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 15 DAYS
########################################################################################
*/

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
WHERE CAST(PROCESS_DATE AS DATE) 
NOT BETWEEN 
( SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE)+165    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
    AND 
 (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD)
;


/*
==================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table From Oracle 
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)


SELECT
OA3NF_BAL_GL_BALANCES.GL_PERIOD_ID   AS    GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES.ACCOUNT_KEY    AS ACCOUNT_KEY  
,PD.PROCESS_DATE      AS PROCESS_DATE            
,OA3NF_BAL_GL_BALANCES.CHART_OF_ACCOUNT_ID  AS CHART_OF_ACCOUNT_ID 
,OA3NF_BAL_GL_BALANCES.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,'ORACLE' AS SRC_SYSTEM 
,OA3NF_BAL_GL_BALANCES.CURRENCY_CD AS CURRENCY_CD
,OA3NF_BAL_GL_BALANCES.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID

,SUM (
CASE WHEN OA3NF_BAL_GL_BALANCES.CURRENCY_CD='USD'
THEN
(
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_DR_BEQ+OA3NF_BAL_GL_BALANCES.PERIOD_NET_DR_BEQ)
-
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_CR_BEQ+OA3NF_BAL_GL_BALANCES.PERIOD_NET_CR_BEQ)
)
ELSE 0 END)       AS ACTUAL_ENDING_BALANCE_USD                 
      
,SUM (CASE WHEN OA3NF_BAL_GL_BALANCES.CURRENCY_CD<>'USD'
THEN (
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_DR+OA3NF_BAL_GL_BALANCES.PERIOD_NET_DR)
-
(OA3NF_BAL_GL_BALANCES.BEGIN_BALANCE_CR+OA3NF_BAL_GL_BALANCES.PERIOD_NET_CR)
)
ELSE 0 END )             AS ACTUAL_ENDING_BALANCE_TXN                     

FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES AS OA3NF_BAL_GL_BALANCES

JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

ON 1=1

GROUP BY 
GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
WHERE OA3NF_BAL_GL_BALANCES.SET_OF_BOOKS_ID IN(:CBS_Studio,:CBS_Distribution)
;





/*
========================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table : TERADATA L/A
========================================================================================
*/



INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)



SELECT

OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY   AS GL_PERIOD_ID
,OASEM_BI_GL_ACCT_BAL_F.ACCOUNT__KEY   AS ACCOUNT_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID  AS CHART_OF_ACCOUNT_ID
,OASEM_BI_GL_ACCT_BAL_F.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,'TERADATA-L/A'     AS SRC_SYSTEM
,OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY   AS CURRENCY_CD
,OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY AS SET_OF_BOOKS_KEY
,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN

FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI AS OASEM_BI_GL_ACCT_BAL_F

JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

ON 1=1

GROUP BY GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_KEY


WHERE
SET_OF_BOOKS_KEY IN (:CBS_Studio) AND
 GL_PERIOD_ID IN
 

(
SEL UPPER(CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

) 
;



INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)



SELECT

OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY   AS GL_PERIOD_ID
,OASEM_BI_GL_ACCT_BAL_F.ACCOUNT__KEY   AS ACCOUNT_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID  AS CHART_OF_ACCOUNT_ID
,OASEM_BI_GL_ACCT_BAL_F.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,'TERADATA-L/A'     AS SRC_SYSTEM
,OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY   AS CURRENCY_CD
,OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY AS SET_OF_BOOKS_KEY
,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN

FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F AS OASEM_BI_GL_ACCT_BAL_F

JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

ON 1=1

GROUP BY GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_KEY


WHERE
SET_OF_BOOKS_KEY IN (:CBS_Distribution) AND
 GL_PERIOD_ID IN
 

(
SEL UPPER(CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(PD.PROCESS_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD


UNION ALL

SEL UPPER(CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3)) 
|| '-' || CAST ((CAST(ADD_MONTHS(PD.PROCESS_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID
 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD

) 
;



/*
======================================================================================
OA3NF_BAL_GL_BALANCES_SUM  : Populate Summary Prep Table : TERADATA Phx
======================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM
(
GL_PERIOD_ID
,ACCOUNT_KEY
, PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID
,ACTUAL_ENDING_BALANCE_USD
,ACTUAL_ENDING_BALANCE_TXN
)



SELECT

STG.GL_PERIOD_ID AS GL_PERIOD_ID
,STG.ACCOUNT_KEY  AS ACCOUNT_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,STG.CHART_OF_ACCOUNT_ID  AS CHART_OF_ACCOUNT_ID
,STG.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
,STG.SRC_SYSTEM   AS SRC_SYSTEM
,STG.CURRENCY_CD   AS CURRENCY_CD
,STG.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID
,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN

FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM_PH AS STG
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1


GROUP BY GL_PERIOD_ID
,ACCOUNT_KEY
,PD.PROCESS_DATE
,CHART_OF_ACCOUNT_ID
,BUSINESS_ENTITY_KEY
,SRC_SYSTEM
,CURRENCY_CD
,SET_OF_BOOKS_ID

WHERE SET_OF_BOOKS_ID IN(:CBS_Studio,:CBS_Distribution)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_DETAIL_F_XLA (CBS_Studio INT,CBS_Distribution INT,PARAM_DAY VARCHAR(256),PARAM_DATE DATE,PARAM_DATE_INTERVAL_4 INT, PARAM_DATE_INTERVAL_1 INT) AS(

/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 180 DAYS
########################################################################################
*/
DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_F_XLA 
WHERE CAST(PROCESS_DATE AS DATE) NOT BETWEEN 
    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) -1 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD);

/*
==================================================================================
OA3NF_BAL_GL_DETAIL_F_XLA  : Insert TERADATA-LA CTD Data
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_F_XLA
(
PROCESS_DATE, G_PERIOD_KEY, G_SET_OF_BOOKS_KEY, G_BATCH_SOURCE_NAME,G_GL_JE_LINE_KEY, G_ACCOUNT__KEY,
  G_BUSINESS_ENTITY_KEY, G_DEPARTMENT_KEY, G_DETAIL_KEY, G_VENDOR_KEY,
  G_FUTURE_KEY, G_INTERCOMPANY_KEY, G_MEDIUM_KEY, G_PRODUCT_SEASON_EPISODE_KEY,
  G_TERRITORY_KEY, G_USER_DEFINED_KEY, G_BASE_CREDIT_AMOUNT, G_BASE_DEBIT_AMOUNT,
  G_TRX_CREDIT_AMOUNT, G_TRX_DEBIT_AMOUNT, G_BASE_BALANCE, G_TRX_BALANCE,
  S_PERIOD_KEY, S_SET_OF_BOOKS_KEY, S_BATCH_SOURCE_NAME,S_GL_JE_LINE_KEY, S_ENTITY_CODE,
  S_ACCOUNT__KEY, S_BUSINESS_ENTITY_KEY, S_DEPARTMENT_KEY, S_DETAIL_KEY,
  S_VENDOR_KEY, S_FUTURE_KEY, S_INTERCOMPANY_KEY, S_MEDIUM_KEY,
  S_PRODUCT_SEASON_EPISODE_KEY, S_TERRITORY_KEY, S_USER_DEFINED_KEY,
  S_BASE_CREDIT_AMOUNT, S_BASE_DEBIT_AMOUNT, S_TRX_CREDIT_AMOUNT,
  S_TRX_DEBIT_AMOUNT, S_BASE_BALANCE, S_TRX_BALANCE , V_PERIOD_KEY,
  V_SET_OF_BOOKS_KEY, V_BATCH_SOURCE_NAME,V_GL_JE_LINE_KEY, V_ACCOUNT__KEY, V_BUSINESS_ENTITY_KEY,
  V_DEPARTMENT_KEY, V_DETAIL_KEY, V_VENDOR_KEY, V_FUTURE_KEY, V_INTERCOMPANY_KEY,
  V_MEDIUM_KEY, V_PRODUCT_SEASON_EPISODE_KEY, V_TERRITORY_KEY,
  V_USER_DEFINED_KEY, V_BASE_CREDIT_AMOUNT, V_BASE_DEBIT_AMOUNT,
  V_TRX_CREDIT_AMOUNT, V_TRX_DEBIT_AMOUNT, V_BASE_BALANCE, V_TRX_BALANCE) 
SELECT
      (select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE
   ,GL.PERIOD_KEY AS G_PERIOD_KEY  
      ,GL.SET_OF_BOOKS_KEY AS G_SET_OF_BOOKS_KEY 
      ,GL.BATCH_SOURCE_NAME as G_BATCH_SOURCE_NAME
      ,GL.GL_JE_LINE_KEY AS G_GL_JE_LINE_KEY  
      ,GL.ACCOUNT__KEY AS G_ACCOUNT__KEY  
      ,GL.BUSINESS_ENTITY_KEY AS G_BUSINESS_ENTITY_KEY  
      ,GL.DEPARTMENT_KEY AS G_DEPARTMENT_KEY  
      ,GL.DETAIL_KEY AS G_DETAIL_KEY  
      ,GL.VENDOR_KEY AS G_VENDOR_KEY  
      ,GL.FUTURE_KEY AS G_FUTURE_KEY  
      ,GL.INTERCOMPANY_KEY AS G_INTERCOMPANY_KEY  
      ,GL.MEDIUM_KEY AS G_MEDIUM_KEY  
      ,GL.PRODUCT_SEASON_EPISODE_KEY AS G_PRODUCT_SEASON_EPISODE_KEY  
      ,GL.TERRITORY_KEY AS G_TERRITORY_KEY  
      ,GL.USER_DEFINED_KEY AS G_USER_DEFINED_KEY  
   ,GL.BASE_CREDIT_AMOUNT AS G_BASE_CREDIT_AMOUNT 
      ,GL.BASE_DEBIT_AMOUNT AS G_BASE_DEBIT_AMOUNT 
      ,GL.TRX_CREDIT_AMOUNT AS G_TRX_CREDIT_AMOUNT 
      ,GL.TRX_DEBIT_AMOUNT AS G_TRX_DEBIT_AMOUNT 
      ,GL.BASE_BALANCE AS G_BASE_BALANCE 
      ,GL.TRX_BALANCE AS G_TRX_BALANCE 
   
   ,XLA.PERIOD_KEY AS S_PERIOD_KEY  
      ,XLA.SET_OF_BOOKS_KEY AS S_SET_OF_BOOKS_KEY 
   ,XLA.BATCH_SOURCE_NAME as S_BATCH_SOURCE_NAME  
      ,XLA.GL_JE_LINE_KEY AS S_GL_JE_LINE_KEY  
   ,XLA.ENTITY_CODE AS S_ENTITY_CODE  
      ,XLA.ACCOUNT__KEY AS S_ACCOUNT__KEY  
      ,XLA.BUSINESS_ENTITY_KEY AS S_BUSINESS_ENTITY_KEY  
      ,XLA.DEPARTMENT_KEY AS S_DEPARTMENT_KEY  
      ,XLA.DETAIL_KEY AS S_DETAIL_KEY  
      ,XLA.VENDOR_KEY AS S_VENDOR_KEY  
      ,XLA.FUTURE_KEY AS S_FUTURE_KEY  
      ,XLA.INTERCOMPANY_KEY AS S_INTERCOMPANY_KEY  
      ,XLA.MEDIUM_KEY AS S_MEDIUM_KEY  
      ,XLA.PRODUCT_SEASON_EPISODE_KEY AS S_PRODUCT_SEASON_EPISODE_KEY  
      ,XLA.TERRITORY_KEY AS S_TERRITORY_KEY  
      ,XLA.USER_DEFINED_KEY AS S_USER_DEFINED_KEY  
   ,XLA.BASE_CREDIT_AMOUNT AS S_BASE_CREDIT_AMOUNT 
      ,XLA.BASE_DEBIT_AMOUNT AS S_BASE_DEBIT_AMOUNT 
      ,XLA.TRX_CREDIT_AMOUNT AS S_TRX_CREDIT_AMOUNT 
      ,XLA.TRX_DEBIT_AMOUNT AS S_TRX_DEBIT_AMOUNT 
      ,XLA.BASE_BALANCE AS S_BASE_BALANCE 
      ,XLA.TRX_BALANCE S_TRX_BALANCE 
      
   ,CASE WHEN COALESCE(GL.PERIOD_KEY, 'NA') = COALESCE(XLA.PERIOD_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_PERIOD_KEY  
      ,COALESCE(GL.SET_OF_BOOKS_KEY, 0) - COALESCE(XLA.SET_OF_BOOKS_KEY,0 ) AS V_SET_OF_BOOKS_KEY 
      ,CASE WHEN COALESCE(GL.BATCH_SOURCE_NAME, 'NA') = COALESCE(XLA.BATCH_SOURCE_NAME, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_BATCH_SOURCE_NAME  
      ,CASE WHEN COALESCE(GL.GL_JE_LINE_KEY, 'NA') = COALESCE(XLA.GL_JE_LINE_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_GL_JE_LINE_KEY  
      ,CASE WHEN COALESCE(GL.ACCOUNT__KEY, 'NA') = COALESCE(XLA.ACCOUNT__KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_ACCOUNT__KEY  
      ,CASE WHEN COALESCE(GL.BUSINESS_ENTITY_KEY, 'NA') = COALESCE(XLA.BUSINESS_ENTITY_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_BUSINESS_ENTITY_KEY  
      ,CASE WHEN COALESCE(GL.DEPARTMENT_KEY, 'NA') = COALESCE(XLA.DEPARTMENT_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_DEPARTMENT_KEY  
      ,CASE WHEN COALESCE(GL.DETAIL_KEY, 'NA') = COALESCE(XLA.DETAIL_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_DETAIL_KEY  
      ,CASE WHEN COALESCE(GL.VENDOR_KEY, 'NA') = COALESCE(XLA.VENDOR_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_VENDOR_KEY  
      ,CASE WHEN COALESCE(GL.FUTURE_KEY, 'NA') = COALESCE(XLA.FUTURE_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_FUTURE_KEY  
      ,CASE WHEN COALESCE(GL.INTERCOMPANY_KEY, 'NA') = COALESCE(XLA.INTERCOMPANY_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_INTERCOMPANY_KEY  
      ,CASE WHEN COALESCE(GL.MEDIUM_KEY, 'NA') = COALESCE(XLA.MEDIUM_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_MEDIUM_KEY  
      ,CASE WHEN COALESCE(GL.PRODUCT_SEASON_EPISODE_KEY, 'NA') = COALESCE(XLA.PRODUCT_SEASON_EPISODE_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_PRODUCT_SEASON_EPISODE_KEY  
      ,CASE WHEN COALESCE(GL.TERRITORY_KEY, 'NA') = COALESCE(XLA.TERRITORY_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_TERRITORY_KEY  
      ,CASE WHEN COALESCE(GL.USER_DEFINED_KEY, 'NA') = COALESCE(XLA.USER_DEFINED_KEY, 'NA') THEN 'TRUE' ELSE 'FALSE' END AS V_USER_DEFINED_KEY  
   ,COALESCE(GL.BASE_CREDIT_AMOUNT, 0) - COALESCE(XLA.BASE_CREDIT_AMOUNT,0 ) AS  V_BASE_CREDIT_AMOUNT 
      ,COALESCE(GL.BASE_DEBIT_AMOUNT, 0) - COALESCE(XLA.BASE_DEBIT_AMOUNT,0 ) AS  V_BASE_DEBIT_AMOUNT 
      ,COALESCE(GL.TRX_CREDIT_AMOUNT, 0) - COALESCE(XLA.TRX_CREDIT_AMOUNT,0 ) AS  V_TRX_CREDIT_AMOUNT 
      ,COALESCE(GL.TRX_DEBIT_AMOUNT, 0) - COALESCE(XLA.TRX_DEBIT_AMOUNT,0 ) AS  V_TRX_DEBIT_AMOUNT 
      ,COALESCE(GL.BASE_BALANCE, 0) - COALESCE(XLA.BASE_BALANCE,0 ) AS  V_BASE_BALANCE 
      ,COALESCE(GL.TRX_BALANCE, 0) - COALESCE(XLA.TRX_BALANCE,0 ) AS  V_TRX_BALANCE 

 FROM 
(
SELECT  
B.PERIOD_KEY,
B.POSTED_DATE,
B.SET_OF_BOOKS_KEY,
B.BATCH_SOURCE_NAME,
B.GL_JE_LINE_KEY,
B.ACCOUNT__KEY,
B.BUSINESS_ENTITY_KEY,
B.DEPARTMENT_KEY,
B.DETAIL_KEY,
B.VENDOR_KEY,
B.FUTURE_KEY,
B.INTERCOMPANY_KEY,
B.MEDIUM_KEY,
B.PRODUCT_SEASON_EPISODE_KEY,
B.TERRITORY_KEY,
B.USER_DEFINED_KEY,
SUM(COALESCE(B.BASE_CREDIT_AMOUNT ,0)) BASE_CREDIT_AMOUNT,
SUM(COALESCE(B.BASE_DEBIT_AMOUNT,0)) BASE_DEBIT_AMOUNT,
SUM(COALESCE(B.TRX_CREDIT_AMOUNT,0)) TRX_CREDIT_AMOUNT,
SUM(COALESCE(B.TRX_DEBIT_AMOUNT,0))  TRX_DEBIT_AMOUNT,
SUM(COALESCE(B.BASE_BALANCE,0))  BASE_BALANCE,
SUM(COALESCE(B.TRX_BALANCE,0))  TRX_BALANCE
FROM 
FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F B
where B.SET_OF_BOOKS_KEY = :CBS_Distribution
--AND B.PERIOD_KEY = 'SEP-17'
GROUP BY 1,2,3, 4,5,6,7,8,9,10,11,12,13,14,15,16
) GL 

LEFT JOIN 
(SELECT  
B.PERIOD_KEY,
B.POSTED_DATE,
B.SET_OF_BOOKS_KEY,
B.BATCH_SOURCE_NAME,
B.GL_JE_LINE_KEY,
B.ENTITY_CODE ,
B.ACCOUNT__KEY,
B.BUSINESS_ENTITY_KEY,
B.DEPARTMENT_KEY,
B.DETAIL_KEY,
B.VENDOR_KEY,
B.FUTURE_KEY,
B.INTERCOMPANY_KEY,
B.MEDIUM_KEY,
B.PRODUCT_SEASON_EPISODE_KEY,
B.TERRITORY_KEY,
B.USER_DEFINED_KEY,
SUM(COALESCE(B.BASE_CREDIT_AMOUNT,0)) BASE_CREDIT_AMOUNT,
SUM(COALESCE(B.BASE_DEBIT_AMOUNT ,0)) BASE_DEBIT_AMOUNT,
SUM(COALESCE(B.TRX_CREDIT_AMOUNT,0)) TRX_CREDIT_AMOUNT,
SUM(COALESCE(B.TRX_DEBIT_AMOUNT,0)) TRX_DEBIT_AMOUNT,
SUM(COALESCE(B.BASE_BALANCE,0))  BASE_BALANCE,
SUM(COALESCE(B.TRX_BALANCE,0))  TRX_BALANCE
FROM 
FDW_TABLES_DB.OASEM_GL_DETAIL_F_XLA_CTD B
where B.SET_OF_BOOKS_KEY = :CBS_Distribution
--AND B.PERIOD_KEY = 'SEP-17'
GROUP BY 1,2,3, 4,5,6,7,8,9,10,11,12,13,14, 15,16,17
) XLA
ON 
GL.PERIOD_KEY=  XLA.PERIOD_KEY
AND GL.SET_OF_BOOKS_KEY = XLA.SET_OF_BOOKS_KEY
AND GL.GL_JE_LINE_KEY = XLA.GL_JE_LINE_KEY
WHERE GL.POSTED_DATE between (case when TRIM(TO_CHAR(:PARAM_DATE, 'DAY')) 
= :PARAM_DAY then Trunc(:PARAM_DATE-:PARAM_DATE_INTERVAL_4) ELSE Trunc(:PARAM_DATE-:PARAM_DATE_INTERVAL_1) END)
AND Trunc(:PARAM_DATE) ;

/*
==================================================================================
OA3NF_BAL_GL_DETAIL_F_XLA  : Insert TERADATA-LA STUDIO Data
==================================================================================
*/
/*
INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_F_XLA
(
PROCESS_DATE, G_PERIOD_KEY, G_SET_OF_BOOKS_KEY, G_BATCH_SOURCE_NAME,G_GL_JE_LINE_KEY, G_ACCOUNT__KEY,
  G_BUSINESS_ENTITY_KEY, G_DEPARTMENT_KEY, G_DETAIL_KEY, G_VENDOR_KEY,
  G_FUTURE_KEY, G_INTERCOMPANY_KEY, G_MEDIUM_KEY, G_PRODUCT_SEASON_EPISODE_KEY,
  G_TERRITORY_KEY, G_USER_DEFINED_KEY, G_BASE_CREDIT_AMOUNT, G_BASE_DEBIT_AMOUNT,
  G_TRX_CREDIT_AMOUNT, G_TRX_DEBIT_AMOUNT, G_BASE_BALANCE, G_TRX_BALANCE,
  S_PERIOD_KEY, S_SET_OF_BOOKS_KEY, S_BATCH_SOURCE_NAME,S_GL_JE_LINE_KEY, S_ENTITY_CODE,
  S_ACCOUNT__KEY, S_BUSINESS_ENTITY_KEY, S_DEPARTMENT_KEY, S_DETAIL_KEY,
  S_VENDOR_KEY, S_FUTURE_KEY, S_INTERCOMPANY_KEY, S_MEDIUM_KEY,
  S_PRODUCT_SEASON_EPISODE_KEY, S_TERRITORY_KEY, S_USER_DEFINED_KEY,
  S_BASE_CREDIT_AMOUNT, S_BASE_DEBIT_AMOUNT, S_TRX_CREDIT_AMOUNT,
  S_TRX_DEBIT_AMOUNT, S_BASE_BALANCE, S_TRX_BALANCE , V_PERIOD_KEY,
  V_SET_OF_BOOKS_KEY, V_BATCH_SOURCE_NAME,V_GL_JE_LINE_KEY, V_ACCOUNT__KEY, V_BUSINESS_ENTITY_KEY,
  V_DEPARTMENT_KEY, V_DETAIL_KEY, V_VENDOR_KEY, V_FUTURE_KEY, V_INTERCOMPANY_KEY,
  V_MEDIUM_KEY, V_PRODUCT_SEASON_EPISODE_KEY, V_TERRITORY_KEY,
  V_USER_DEFINED_KEY, V_BASE_CREDIT_AMOUNT, V_BASE_DEBIT_AMOUNT,
  V_TRX_CREDIT_AMOUNT, V_TRX_DEBIT_AMOUNT, V_BASE_BALANCE, V_TRX_BALANCE) 
SELECT
      (select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE
   ,GL.PERIOD_KEY AS G_PERIOD_KEY  
      ,GL.SET_OF_BOOKS_KEY AS G_SET_OF_BOOKS_KEY 
   ,GL.BATCH_SOURCE_NAME as G_BATCH_SOURCE_NAME
      ,GL.GL_JE_LINE_KEY AS G_GL_JE_LINE_KEY  
      ,GL.ACCOUNT__KEY AS G_ACCOUNT__KEY  
      ,GL.BUSINESS_ENTITY_KEY AS G_BUSINESS_ENTITY_KEY  
      ,GL.DEPARTMENT_KEY AS G_DEPARTMENT_KEY  
      ,GL.DETAIL_KEY AS G_DETAIL_KEY  
      ,GL.VENDOR_KEY AS G_VENDOR_KEY  
      ,GL.FUTURE_KEY AS G_FUTURE_KEY  
      ,GL.INTERCOMPANY_KEY AS G_INTERCOMPANY_KEY  
      ,GL.MEDIUM_KEY AS G_MEDIUM_KEY  
      ,GL.PRODUCT_SEASON_EPISODE_KEY AS G_PRODUCT_SEASON_EPISODE_KEY  
      ,GL.TERRITORY_KEY AS G_TERRITORY_KEY  
      ,GL.USER_DEFINED_KEY AS G_USER_DEFINED_KEY  
   ,GL.BASE_CREDIT_AMOUNT AS G_BASE_CREDIT_AMOUNT 
      ,GL.BASE_DEBIT_AMOUNT AS G_BASE_DEBIT_AMOUNT 
      ,GL.TRX_CREDIT_AMOUNT AS G_TRX_CREDIT_AMOUNT 
      ,GL.TRX_DEBIT_AMOUNT AS G_TRX_DEBIT_AMOUNT 
      ,GL.BASE_BALANCE AS G_BASE_BALANCE 
      ,GL.TRX_BALANCE AS G_TRX_BALANCE 
   
   ,XLA.PERIOD_KEY AS S_PERIOD_KEY  
      ,XLA.SET_OF_BOOKS_KEY AS S_SET_OF_BOOKS_KEY
,XLA.BATCH_SOURCE_NAME as S_BATCH_SOURCE_NAME   
      ,XLA.GL_JE_LINE_KEY AS S_GL_JE_LINE_KEY  
   ,XLA.ENTITY_CODE AS S_ENTITY_CODE  
      ,XLA.ACCOUNT__KEY AS S_ACCOUNT__KEY  
      ,XLA.BUSINESS_ENTITY_KEY AS S_BUSINESS_ENTITY_KEY  
      ,XLA.DEPARTMENT_KEY AS S_DEPARTMENT_KEY  
      ,XLA.DETAIL_KEY AS S_DETAIL_KEY  
      ,XLA.VENDOR_KEY AS S_VENDOR_KEY  
      ,XLA.FUTURE_KEY AS S_FUTURE_KEY  
      ,XLA.INTERCOMPANY_KEY AS S_INTERCOMPANY_KEY  
      ,XLA.MEDIUM_KEY AS S_MEDIUM_KEY  
      ,XLA.PRODUCT_SEASON_EPISODE_KEY AS S_PRODUCT_SEASON_EPISODE_KEY  
      ,XLA.TERRITORY_KEY AS S_TERRITORY_KEY  
      ,XLA.USER_DEFINED_KEY AS S_USER_DEFINED_KEY  
   ,XLA.BASE_CREDIT_AMOUNT AS S_BASE_CREDIT_AMOUNT 
      ,XLA.BASE_DEBIT_AMOUNT AS S_BASE_DEBIT_AMOUNT 
      ,XLA.TRX_CREDIT_AMOUNT AS S_TRX_CREDIT_AMOUNT 
-- 5315:  An owner referenced by user does not have SELECT WITH GRANT OPTION access to fdw_ctd_sem_db.OASEM_AP_PMT_DIST_F.GL_JE_LINE_KEY. 
--- Request Text
--------------------------------------------------------------------------------

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_DETAIL_PH_STG (CBS_Studio INT, CBS_Distribution INT)
AS (
DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_PH_STG;


--FROM STUDIO

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_PH_STG

(
    GL_JE_LINE_KEY
  , ACCOUNT_TYPE_KEY
  , AP_INVOICE_NUM
  , AP_VENDOR_NAME
  , GL_DTL_CREATE_BY_KEY
  , JE_LINE_DESCRIPTION
  , JE_LINE_NUMBER
  , LAST_UPDATE_DATE
  , PERIOD_KEY
  , POSTED_DATE
  , POSTING_STATUS
  , SET_OF_BOOKS_KEY
  , SOURCE_SYSTEM_ID
  , TRX_CURRENCY_KEY
  , ACCOUNT__KEY
  , BUSINESS_ENTITY_KEY
  , DEPARTMENT_KEY
  , DETAIL_KEY
  , VENDOR_KEY
  , FUTURE_KEY
  , INTERCOMPANY_KEY
  , MEDIUM_KEY
  , PRODUCT_SEASON_EPISODE_KEY
  , TERRITORY_KEY
  , USER_DEFINED_KEY
  , CHART_OF_ACCOUNT_KEY
  , TEMPLATE_KEY
  , POSTED_BY
  , CURRENCY_CONVERSION_RATE
  , EFFECTIVE_DATE
  , OA_CREATED_BY
  , JE_HEADER_DESC
  , LEGACY_CONTEXT
  , ACCRUAL_REV_FLAG
  , BASE_CREDIT_AMOUNT
  , BASE_DEBIT_AMOUNT
  , TRX_CREDIT_AMOUNT
  , TRX_DEBIT_AMOUNT
  , BASE_BALANCE
  , TRX_BALANCE
)
	 SELECT
 CAST(OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS VARCHAR(100)) AS GL_JE_LINE_KEY
,CAST(OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY  AS VARCHAR(100)) AS ACCOUNT_TYPE_KEY
,CAST(OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS VARCHAR(100)) AS AP_INVOICE_NUM
,CAST(OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS VARCHAR(100)) AS AP_VENDOR_NAME
,CAST(OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY  AS VARCHAR(100)) AS GL_DTL_CREATE_BY_KEY
,CAST(OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION  AS VARCHAR(100)) AS JE_LINE_DESCRIPTION
,CAST(OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS VARCHAR(100)) AS JE_LINE_NUMBER
,     OASEM_GL_DETAIL_F.LAST_UPDATE_DATE     AS LAST_UPDATE_DATE
,CAST(OASEM_GL_DETAIL_F.PERIOD_KEY   AS VARCHAR(100)) AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE      AS POSTED_DATE
,CAST(OASEM_GL_DETAIL_F.POSTING_STATUS   AS VARCHAR(100)) AS POSTING_STATUS
,CAST(OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY AS VARCHAR(100)) AS SET_OF_BOOKS_KEY
,CAST('TERADATA PHX'     AS VARCHAR(100))  AS SOURCE_SYSTEM_ID
,CAST(OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY  AS VARCHAR(100)) AS TRX_CURRENCY_KEY
,CAST(OASEM_GL_DETAIL_F.ACCOUNT__KEY   AS VARCHAR(100)) AS ACCOUNT__KEY
,CAST(OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY  AS VARCHAR(100)) AS BUSINESS_ENTITY_KEY
,CAST(OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS VARCHAR(100)) AS DEPARTMENT_KEY
,CAST(OASEM_GL_DETAIL_F.DETAIL_KEY   AS VARCHAR(100)) AS DETAIL_KEY
,CAST(OASEM_GL_DETAIL_F.VENDOR_KEY   AS VARCHAR(100)) AS VENDOR_KEY
,CAST(OASEM_GL_DETAIL_F.FUTURE_KEY  AS VARCHAR(100)) AS FUTURE_KEY
,CAST(OASEM_GL_DETAIL_F.INTERCOMPANY_KEY  AS VARCHAR(100)) AS INTERCOMPANY_KEY
,CAST(OASEM_GL_DETAIL_F.MEDIUM_KEY   AS VARCHAR(100)) AS MEDIUM_KEY
,CAST(OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY AS VARCHAR(100))     AS PRODUCT_SEASON_EPISODE_KEY
,CAST(OASEM_GL_DETAIL_F.TERRITORY_KEY   AS VARCHAR(100)) AS TERRITORY_KEY
,CAST(OASEM_GL_DETAIL_F.USER_DEFINED_KEY AS VARCHAR(100)) AS USER_DEFINED_KEY
,CAST(OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY  AS VARCHAR(100)) AS CHART_OF_ACCOUNT_KEY
,CAST(OASEM_GL_DETAIL_F.TEMPLATE_KEY  AS VARCHAR(100)) AS TEMPLATE_KEY
,CAST(OASEM_GL_DETAIL_F.POSTED_BY   AS VARCHAR(100)) AS POSTED_BY
,CAST(OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE AS VARCHAR(100)) AS CURRENCY_CONVERSION_RATE
,CAST(OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS VARCHAR(100)) AS EFFECTIVE_DATE
,CAST(OASEM_GL_DETAIL_F.OA_CREATED_BY   AS VARCHAR(100)) AS OA_CREATED_BY
,CAST(OASEM_GL_DETAIL_F.JE_HEADER_DESC  AS VARCHAR(100)) AS JE_HEADER_DESC
,CAST('MISSINGCOLVAL'    AS VARCHAR(100)) AS LEGACY_CONTEXT
,CAST('MISSINGCOLVAL'    AS VARCHAR(100)) AS CCRUAL_REV_FLAG
,CAST(OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT  AS VARCHAR(28))  AS BASE_CREDIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT  AS VARCHAR(28))  AS BASE_DEBIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT  AS VARCHAR(28))  AS TRX_CREDIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT AS VARCHAR(28))  AS TRX_DEBIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.BASE_BALANCE  AS VARCHAR(28))  AS BASE_BALANCE
,CAST(OASEM_GL_DETAIL_F.TRX_BALANCE   AS VARCHAR(28))  AS TRX_BALANCE
 FROM  FDW_STU_SEM_DB.OASEM_GL_DETAIL_F    AS OASEM_GL_DETAIL_F 
 WHERE  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY=:CBS_Studio AND
 
 OASEM_GL_DETAIL_F.PERIOD_KEY IN
                (
                (SEL UPPER(CAST ((CAST(CURRENT_DATE AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(CURRENT_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID),
                (SEL UPPER(CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID)
                ); 
  
--FROM CTD
  
INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_PH_STG

(
    GL_JE_LINE_KEY
  , ACCOUNT_TYPE_KEY
  , AP_INVOICE_NUM
  , AP_VENDOR_NAME
  , GL_DTL_CREATE_BY_KEY
  , JE_LINE_DESCRIPTION
  , JE_LINE_NUMBER
  , LAST_UPDATE_DATE
  , PERIOD_KEY
  , POSTED_DATE
  , POSTING_STATUS
  , SET_OF_BOOKS_KEY
  , SOURCE_SYSTEM_ID
  , TRX_CURRENCY_KEY
  , ACCOUNT__KEY
  , BUSINESS_ENTITY_KEY
  , DEPARTMENT_KEY
  , DETAIL_KEY
  , VENDOR_KEY
  , FUTURE_KEY
  , INTERCOMPANY_KEY
  , MEDIUM_KEY
  , PRODUCT_SEASON_EPISODE_KEY
  , TERRITORY_KEY
  , USER_DEFINED_KEY
  , CHART_OF_ACCOUNT_KEY
  , TEMPLATE_KEY
  , POSTED_BY
  , CURRENCY_CONVERSION_RATE
  , EFFECTIVE_DATE
  , OA_CREATED_BY
  , JE_HEADER_DESC
  , LEGACY_CONTEXT
  , ACCRUAL_REV_FLAG
  , BASE_CREDIT_AMOUNT
  , BASE_DEBIT_AMOUNT
  , TRX_CREDIT_AMOUNT
  , TRX_DEBIT_AMOUNT
  , BASE_BALANCE
  , TRX_BALANCE
)
	 SELECT
 CAST(OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS VARCHAR(100)) AS GL_JE_LINE_KEY
,CAST(OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY  AS VARCHAR(100)) AS ACCOUNT_TYPE_KEY
,CAST(OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS VARCHAR(100)) AS AP_INVOICE_NUM
,CAST(OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS VARCHAR(100)) AS AP_VENDOR_NAME
,CAST(OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY  AS VARCHAR(100)) AS GL_DTL_CREATE_BY_KEY
,CAST(OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION  AS VARCHAR(100)) AS JE_LINE_DESCRIPTION
,CAST(OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS VARCHAR(100)) AS JE_LINE_NUMBER
,     OASEM_GL_DETAIL_F.LAST_UPDATE_DATE     AS LAST_UPDATE_DATE
,CAST(OASEM_GL_DETAIL_F.PERIOD_KEY   AS VARCHAR(100)) AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE      AS POSTED_DATE
,CAST(OASEM_GL_DETAIL_F.POSTING_STATUS   AS VARCHAR(100)) AS POSTING_STATUS
,CAST(OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY AS VARCHAR(100)) AS SET_OF_BOOKS_KEY
,CAST('TERADATA PHX'     AS VARCHAR(100))  AS SOURCE_SYSTEM_ID
,CAST(OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY  AS VARCHAR(100)) AS TRX_CURRENCY_KEY
,CAST(OASEM_GL_DETAIL_F.ACCOUNT__KEY   AS VARCHAR(100)) AS ACCOUNT__KEY
,CAST(OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY  AS VARCHAR(100)) AS BUSINESS_ENTITY_KEY
,CAST(OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS VARCHAR(100)) AS DEPARTMENT_KEY
,CAST(OASEM_GL_DETAIL_F.DETAIL_KEY   AS VARCHAR(100)) AS DETAIL_KEY
,CAST(OASEM_GL_DETAIL_F.VENDOR_KEY   AS VARCHAR(100)) AS VENDOR_KEY
,CAST(OASEM_GL_DETAIL_F.FUTURE_KEY  AS VARCHAR(100)) AS FUTURE_KEY
,CAST(OASEM_GL_DETAIL_F.INTERCOMPANY_KEY  AS VARCHAR(100)) AS INTERCOMPANY_KEY
,CAST(OASEM_GL_DETAIL_F.MEDIUM_KEY   AS VARCHAR(100)) AS MEDIUM_KEY
,CAST(OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY AS VARCHAR(100))     AS PRODUCT_SEASON_EPISODE_KEY
,CAST(OASEM_GL_DETAIL_F.TERRITORY_KEY   AS VARCHAR(100)) AS TERRITORY_KEY
,CAST(OASEM_GL_DETAIL_F.USER_DEFINED_KEY AS VARCHAR(100)) AS USER_DEFINED_KEY
,CAST(OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY  AS VARCHAR(100)) AS CHART_OF_ACCOUNT_KEY
,CAST(OASEM_GL_DETAIL_F.TEMPLATE_KEY  AS VARCHAR(100)) AS TEMPLATE_KEY
,CAST(OASEM_GL_DETAIL_F.POSTED_BY   AS VARCHAR(100)) AS POSTED_BY
,CAST(OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE AS VARCHAR(100)) AS CURRENCY_CONVERSION_RATE
,CAST(OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS VARCHAR(100)) AS EFFECTIVE_DATE
,CAST(OASEM_GL_DETAIL_F.OA_CREATED_BY   AS VARCHAR(100)) AS OA_CREATED_BY
,CAST(OASEM_GL_DETAIL_F.JE_HEADER_DESC  AS VARCHAR(100)) AS JE_HEADER_DESC
,CAST('MISSINGCOLVAL'    AS VARCHAR(100)) AS LEGACY_CONTEXT
,CAST('MISSINGCOLVAL'    AS VARCHAR(100)) AS CCRUAL_REV_FLAG
,CAST(OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT  AS VARCHAR(28))  AS BASE_CREDIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT  AS VARCHAR(28))  AS BASE_DEBIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT  AS VARCHAR(28))  AS TRX_CREDIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT AS VARCHAR(28))  AS TRX_DEBIT_AMOUNT
,CAST(OASEM_GL_DETAIL_F.BASE_BALANCE  AS VARCHAR(28))  AS BASE_BALANCE
,CAST(OASEM_GL_DETAIL_F.TRX_BALANCE   AS VARCHAR(28))  AS TRX_BALANCE
 FROM  FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F    AS OASEM_GL_DETAIL_F 
 WHERE  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY=:CBS_Distribution AND
 
 OASEM_GL_DETAIL_F.PERIOD_KEY IN
                (
                (SEL UPPER(CAST ((CAST(CURRENT_DATE AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(CURRENT_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID),
                (SEL UPPER(CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID)
                ); 
				
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_DETAIL_STG AS(

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_STG;

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_STG
(
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
JE_BATCH_ID
)
SELECT
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
JE_BATCH_ID
FROM FDW_STAGE_DB.LOAD_BAL_GL_DETAIL_STG_s;
);
--------------------------------------------------------------------------------


-- 5315:  An owner referenced by user does not have SELECT WITH GRANT OPTION access to fdw_ctd_sem_db.OASEM_AP_PMT_DIST_F.GL_JE_LINE_KEY
--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_DETAIL_VAR (CBS_Studio INT, CBS_Distribution INT)
AS (


--DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 15 DAYS


                DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
                WHERE CAST(PROCESS_DATE AS DATE) 
        NOT BETWEEN 

    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD) ;
         
/*
==================================================================================
Populate OA3NF_BAL_GL_DETAIL_VAR from Oracle Stage Table
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT 

ORA_STG.JE_HDR_ID_LINE_NUM       AS  GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,COA.ACCOUNT_TYPE       AS ACCOUNT_TYPE_KEY

,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN  (COALESCE(ORA_STG.OA_REFERENCE_5,'NO INVOICE SPECIFIED'))
  ELSE 'NO INVOICE SPECIFIED' 
END          AS AP_INVOICE_NUM

,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN (COALESCE (ORA_STG.OA_REFERENCE_1,'NO AP VENDOR'))
  ELSE 'NO AP VENDOR' 
END          AS AP_VENDOR_NAME
,ORA_STG.OA_CREATED_BY       AS GL_DTL_CREATE_BY_KEY
,ORA_STG.JE_LINE_DESC       AS JE_LINE_DESCRIPTION
,ORA_STG.JE_LINE_NUM       AS JE_LINE_NUMBER
,ORA_STG.LAST_UPDATE_DTTM      AS LAST_UPDATE_DATE
,ORA_STG.GL_PERIOD_ID       AS PERIOD_KEY
, GL_BATCH.JE_BATCH_POSTED_DTTM AS POSTED_DATE
   ,CASE WHEN  GL_BATCH.JE_BATCH_POSTING_STATUS_CD = 'P'
    THEN 'POSTED'
ELSE 'UNPOSTED' 
END         AS POSTING_STATUS
,GL_HEADER.SET_OF_BOOKS_ID      AS SET_OF_BOOKS_KEY
,'ORACLE'        AS SOURCE_SYSTEM_ID
,GL_HEADER.CURRENCY_CD       AS TRX_CURRENCY_KEY
,COA.SEGMENT2        AS  ACCOUNT__KEY
,COA.SEGMENT1        AS BUSINESS_ENTITY_KEY
,COA.SEGMENT3        AS DEPARTMENT_KEY
,COA.SEGMENT5        AS DETAIL_KEY
,COA.SEGMENT10        AS VENDOR_KEY 
,COA.SEGMENT11        AS FUTURE_KEY   
,COA.SEGMENT9        AS INTERCOMPANY_KEY
,COA.SEGMENT7        AS MEDIUM_KEY
,COA.SEGMENT4        AS PRODUCT_SEASON_EPISODE_KEY
,COA.SEGMENT6        AS TERRITORY_KEY
,COA.SEGMENT8        AS USER_DEFINED_KEY  
,COA.CHART_OF_ACCOUNT_ID      AS CHART_OF_ACCOUNT_KEY
,COA.CHART_OF_ACCOUNT_ID      AS TEMPLATE_KEY
, GL_BATCH.POSTED_BY       AS POSTED_BY
,GL_HEADER.CURRENCY_CONVERSION_RATE      AS CURRENCY_CONVERSION_RATE
,ORA_STG.EFFECTIVE_DATE       AS EFFECTIVE_DATE
,ORA_STG.OA_CREATED_BY       AS OA_CREATED_BY    
,GL_HEADER.JE_HEADER_DESC      AS JE_HEADER_DESC
,ORA_STG.LEGACY_CONTEXT       AS LEGACY_CONTEXT
,GL_HEADER.ACCRUAL_REV_FLAG      AS ACCRUAL_REV_FLAG
,ORA_STG.JE_LINE_CR_LOCAL_AMT      AS BASE_CREDIT_AMOUNT
,ORA_STG.JE_LINE_DR_LOCAL_AMT      AS BASE_DEBIT_AMOUNT 
,ORA_STG.JE_LINE_CR_TRANS_AMT      AS TRX_CREDIT_AMOUNT
,ORA_STG.JE_LINE_DR_TRANS_AMT      AS TRX_DEBIT_AMOUNT
,COALESCE(ORA_STG.JE_LINE_DR_LOCAL_AMT,0) - 
COALESCE(ORA_STG.JE_LINE_CR_LOCAL_AMT,0)     AS BASE_BALANCE

,COALESCE(ORA_STG.JE_LINE_DR_TRANS_AMT,0) -
COALESCE(ORA_STG.JE_LINE_CR_TRANS_AMT,0)     AS TRX_BALANCE

FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_STG AS ORA_STG
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1 

LEFT JOIN FDW_TABLES_DB.OA3NF_COA AS COA
ON (CAST(ORA_STG.CHART_OF_ACCOUNT_ID AS DECIMAL(18,0))=COA.CHART_OF_ACCOUNT_ID
AND ORA_STG.SET_OF_BOOKS_ID=COA.SET_OF_BOOKS_ID)
LEFT JOIN OA3NF_GL_JE_HEADER AS GL_HEADER  
ON (CAST(ORA_STG.JE_HEADER_ID AS DECIMAL(18,0))=GL_HEADER.JE_HEADER_ID
AND GL_HEADER.SET_OF_BOOKS_ID=ORA_STG.SET_OF_BOOKS_ID)
LEFT JOIN OA3NF_GL_JE_BATCH AS GL_BATCH
ON (CAST(ORA_STG.JE_BATCH_ID AS DECIMAL(18,0))=GL_BATCH.JE_BATCH_ID
AND GL_BATCH.SET_OF_BOOKS_ID=ORA_STG.SET_OF_BOOKS_ID)
LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR    AS VAR

ON  COA.SEGMENT2   =VAR.ACCOUNT_KEY
AND COA.SEGMENT1  =VAR.BUSINESS_ENTITY_KEY
--AND   GL_HEADER.CURRENCY_CD  =VAR.CURRENCY_CD
AND  ORA_STG.GL_PERIOD_ID   =VAR.GL_PERIOD_ID

AND VAR.AMOUNT_TYPE LIKE '%VAR'
    AND
 CAST(VAR.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) ;






/*
==================================================================================
Populate OA3NF_BAL_GL_DETAIL_VAR from Teradata LA View Table
==================================================================================
*/

--FROM STUDIO

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA LA'       AS SOURCE_SYSTEM_ID
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT   AS BASE_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT   AS TRX_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT   AS TRX_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_BALANCE    AS BASE_BALANCE
, OASEM_GL_DETAIL_F.TRX_BALANCE    AS TRX_BALANCE


 FROM FDW_STU_SEM_DB.OASEM_GL_DETAIL_F    AS OASEM_GL_DETAIL_F 
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1

 LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR    AS VAR

 ON  OASEM_GL_DETAIL_F.ACCOUNT__KEY   =VAR.ACCOUNT_KEY
 AND OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY  =VAR.BUSINESS_ENTITY_KEY
 AND  OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY  =VAR.CURRENCY_CD
 AND  OASEM_GL_DETAIL_F.PERIOD_KEY   =VAR.GL_PERIOD_ID
 AND  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   =VAR.SET_OF_BOOKS_ID
AND VAR.AMOUNT_TYPE LIKE '%VAR'
    AND 
    
 CAST(VAR.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  )
  WHERE  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY=:CBS_Studio  AND OASEM_GL_DETAIL_F.PERIOD_KEY IN (
                (SEL UPPER(CAST ((CAST(CURRENT_DATE AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(CURRENT_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID),
                (SEL UPPER(CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID)
 )
 ;

 
--FROM CTD

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA LA'       AS SOURCE_SYSTEM_ID
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_
--------------------------------------------------------------------------------



----- 5315:  An owner referenced by user does not have SELECT WITH GRANT OPTION access to fdw_ctd_sem_db.OASEM_AP_PMT_DIST_F.GL_JE_LINE_KEY. 
--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_DETAIL_VAR_BK (CBS_Studio INT, CBS_Distribution INT)
AS (


--DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 15 DAYS


                DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
                WHERE CAST(PROCESS_DATE AS DATE) 
        NOT BETWEEN 

    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD) ;
         
/*
==================================================================================
Populate OA3NF_BAL_GL_DETAIL_VAR from Oracle Stage Table
==================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT 

ORA_STG.JE_HDR_ID_LINE_NUM       AS  GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
,COA.ACCOUNT_TYPE       AS ACCOUNT_TYPE_KEY

,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN  (COALESCE(ORA_STG.OA_REFERENCE_5,'NO INVOICE SPECIFIED'))
  ELSE 'NO INVOICE SPECIFIED' 
END          AS AP_INVOICE_NUM

,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN (COALESCE (ORA_STG.OA_REFERENCE_1,'NO AP VENDOR'))
  ELSE 'NO AP VENDOR' 
END          AS AP_VENDOR_NAME
,ORA_STG.OA_CREATED_BY       AS GL_DTL_CREATE_BY_KEY
,ORA_STG.JE_LINE_DESC       AS JE_LINE_DESCRIPTION
,ORA_STG.JE_LINE_NUM       AS JE_LINE_NUMBER
,ORA_STG.LAST_UPDATE_DTTM      AS LAST_UPDATE_DATE
,ORA_STG.GL_PERIOD_ID       AS PERIOD_KEY
, GL_BATCH.JE_BATCH_POSTED_DTTM AS POSTED_DATE
   ,CASE WHEN  GL_BATCH.JE_BATCH_POSTING_STATUS_CD = 'P'
    THEN 'POSTED'
ELSE 'UNPOSTED' 
END         AS POSTING_STATUS
,GL_HEADER.SET_OF_BOOKS_ID      AS SET_OF_BOOKS_KEY
,'ORACLE'        AS SOURCE_SYSTEM_ID
,GL_HEADER.CURRENCY_CD       AS TRX_CURRENCY_KEY
,COA.SEGMENT2        AS  ACCOUNT__KEY
,COA.SEGMENT1        AS BUSINESS_ENTITY_KEY
,COA.SEGMENT3        AS DEPARTMENT_KEY
,COA.SEGMENT5        AS DETAIL_KEY
,COA.SEGMENT10        AS VENDOR_KEY 
,COA.SEGMENT11        AS FUTURE_KEY   
,COA.SEGMENT9        AS INTERCOMPANY_KEY
,COA.SEGMENT7        AS MEDIUM_KEY
,COA.SEGMENT4        AS PRODUCT_SEASON_EPISODE_KEY
,COA.SEGMENT6        AS TERRITORY_KEY
,COA.SEGMENT8        AS USER_DEFINED_KEY  
,COA.CHART_OF_ACCOUNT_ID      AS CHART_OF_ACCOUNT_KEY
,COA.CHART_OF_ACCOUNT_ID      AS TEMPLATE_KEY
, GL_BATCH.POSTED_BY       AS POSTED_BY
,GL_HEADER.CURRENCY_CONVERSION_RATE      AS CURRENCY_CONVERSION_RATE
,ORA_STG.EFFECTIVE_DATE       AS EFFECTIVE_DATE
,ORA_STG.OA_CREATED_BY       AS OA_CREATED_BY    
,GL_HEADER.JE_HEADER_DESC      AS JE_HEADER_DESC
,ORA_STG.LEGACY_CONTEXT       AS LEGACY_CONTEXT
,GL_HEADER.ACCRUAL_REV_FLAG      AS ACCRUAL_REV_FLAG
,ORA_STG.JE_LINE_CR_LOCAL_AMT      AS BASE_CREDIT_AMOUNT
,ORA_STG.JE_LINE_DR_LOCAL_AMT      AS BASE_DEBIT_AMOUNT 
,ORA_STG.JE_LINE_CR_TRANS_AMT      AS TRX_CREDIT_AMOUNT
,ORA_STG.JE_LINE_DR_TRANS_AMT      AS TRX_DEBIT_AMOUNT
,COALESCE(ORA_STG.JE_LINE_DR_LOCAL_AMT,0) - 
COALESCE(ORA_STG.JE_LINE_CR_LOCAL_AMT,0)     AS BASE_BALANCE

,COALESCE(ORA_STG.JE_LINE_DR_TRANS_AMT,0) -
COALESCE(ORA_STG.JE_LINE_CR_TRANS_AMT,0)     AS TRX_BALANCE

FROM FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_STG AS ORA_STG
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1 

LEFT JOIN FDW_TABLES_DB.OA3NF_COA AS COA
ON (CAST(ORA_STG.CHART_OF_ACCOUNT_ID AS DECIMAL(18,0))=COA.CHART_OF_ACCOUNT_ID
AND ORA_STG.SET_OF_BOOKS_ID=COA.SET_OF_BOOKS_ID)
LEFT JOIN OA3NF_GL_JE_HEADER AS GL_HEADER  
ON (CAST(ORA_STG.JE_HEADER_ID AS DECIMAL(18,0))=GL_HEADER.JE_HEADER_ID
AND GL_HEADER.SET_OF_BOOKS_ID=ORA_STG.SET_OF_BOOKS_ID)
LEFT JOIN OA3NF_GL_JE_BATCH AS GL_BATCH
ON (CAST(ORA_STG.JE_BATCH_ID AS DECIMAL(18,0))=GL_BATCH.JE_BATCH_ID
AND GL_BATCH.SET_OF_BOOKS_ID=ORA_STG.SET_OF_BOOKS_ID)
LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR    AS VAR

ON  COA.SEGMENT2   =VAR.ACCOUNT_KEY
AND COA.SEGMENT1  =VAR.BUSINESS_ENTITY_KEY
--AND   GL_HEADER.CURRENCY_CD  =VAR.CURRENCY_CD
AND  ORA_STG.GL_PERIOD_ID   =VAR.GL_PERIOD_ID

AND VAR.AMOUNT_TYPE LIKE '%VAR'
    AND
 CAST(VAR.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  ) ;






/*
==================================================================================
Populate OA3NF_BAL_GL_DETAIL_VAR from Teradata LA View Table
==================================================================================
*/

--FROM STUDIO

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA LA'       AS SOURCE_SYSTEM_ID
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT   AS BASE_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT   AS TRX_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT   AS TRX_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_BALANCE    AS BASE_BALANCE
, OASEM_GL_DETAIL_F.TRX_BALANCE    AS TRX_BALANCE


 FROM FDW_STU_SEM_DB.OASEM_GL_DETAIL_F    AS OASEM_GL_DETAIL_F 
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1

 LEFT JOIN FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_VAR    AS VAR

 ON  OASEM_GL_DETAIL_F.ACCOUNT__KEY   =VAR.ACCOUNT_KEY
 AND OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY  =VAR.BUSINESS_ENTITY_KEY
 AND  OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY  =VAR.CURRENCY_CD
 AND  OASEM_GL_DETAIL_F.PERIOD_KEY   =VAR.GL_PERIOD_ID
 AND  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   =VAR.SET_OF_BOOKS_ID
AND VAR.AMOUNT_TYPE LIKE '%VAR'
    AND 
    
 CAST(VAR.PROCESS_DATE AS DATE) IN
  ( SELECT CAST(PD.PROCESS_DATE AS DATE)
    FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  )
  WHERE  OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY=:CBS_Studio
 ;

 
--FROM CTD

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,SOURCE_SYSTEM_ID
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,PD.PROCESS_DATE                AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA LA'       AS SOURCE_SYSTEM_ID
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT   AS BASE_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT   AS TRX_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT   AS TRX_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_BALANCE    AS BASE_BALANCE
, OASEM_GL_DETAIL_F.TRX_BALANCE    AS TRX_BALANCE


 FROM FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F    AS OASEM_GL_DETAIL_F 
JOIN FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
ON 1=1

 LEFT
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_JE_DETAIL AS(
/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 180 DAYS
########################################################################################
*/

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL 
WHERE CAST(PROCESS_DATE AS DATE) NOT BETWEEN 
    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) -1 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD);

/*
==================================================================================
OA3NF_BAL_GL_JE_DETAIL  : Insert Data
==================================================================================
*/
INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL
(
      PROCESS_DATE,
      CHART_OF_ACCOUNT_ID,
      OA_CREATED_BY,
      GL_PERIOD_ID,
      JE_HEADER_ID,
      JE_LINE_DESC,
      JE_LINE_CR_LOCAL_AMT,
      JE_LINE_NUM,
      JE_LINE_CR_TRANS_AMT,
      LAST_UPDATE_DTTM ,
      OA_REFERENCE_1,
      OA_REFERENCE_5,
      SET_OF_BOOKS_ID,
      JE_LINE_DR_LOCAL_AMT,
      JE_LINE_DR_TRANS_AMT ,
      JE_HDR_ID_LINE_NUM,
      OA_GL_SL_LINK_ID,
      OA_REFERENCE_10,
      OA_REFERENCE_2,
      OA_REFERENCE_3,
      OA_REFERENCE_4,
      OA_REFERENCE_6,
      OA_REFERENCE_7,
      OA_REFERENCE_8,
      OA_REFERENCE_9,
      LINE_POSTING_STATUS_CD,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      LAST_UPDATED_BY,
      EFFECTIVE_DATE,
      ATTRIBUTE11,
      LEGACY_CONTEXT,
      POSTED_DATE
                )
                
SELECT 
(select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE,
      CHART_OF_ACCOUNT_ID,
      OA_CREATED_BY,
      GL_PERIOD_ID,
      JE_HEADER_ID,
      JE_LINE_DESC,
      JE_LINE_CR_LOCAL_AMT,
      JE_LINE_NUM,
      JE_LINE_CR_TRANS_AMT,
      LAST_UPDATE_DTTM ,
      OA_REFERENCE_1,
      OA_REFERENCE_5,
      SET_OF_BOOKS_ID,
      JE_LINE_DR_LOCAL_AMT,
      JE_LINE_DR_TRANS_AMT ,
      JE_HDR_ID_LINE_NUM,
      OA_GL_SL_LINK_ID,
      OA_REFERENCE_10,
      OA_REFERENCE_2,
      OA_REFERENCE_3,
      OA_REFERENCE_4,
      OA_REFERENCE_6,
      OA_REFERENCE_7,
      OA_REFERENCE_8,
      OA_REFERENCE_9,
      LINE_POSTING_STATUS_CD,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      LAST_UPDATED_BY,
      EFFECTIVE_DATE,
      ATTRIBUTE11,
      LEGACY_CONTEXT,
      POSTED_DATE

FROM FDW_STAGE_DB.LOAD_BAL_GL_JE_DETAIL_s;
);
--------------------------------------------------------------------------------


-- 5315:  An owner referenced by user does not have SELECT WITH GRANT OPTION access to fdw_ctd_sem_db.OASEM_AP_PMT_DIST_F.GL_JE_LINE_KEY. 
--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_JE_DETAIL_VAR (CBS_Studio INT,CBS_Distribution INT) AS(

/*
########################################################################################
#  DELETE DATA FROM TABLE FOR DATA OLDER THAN LAST 180 DAYS
########################################################################################
*/
DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL_VAR 
WHERE CAST(PROCESS_DATE AS DATE) NOT BETWEEN 
    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) -1 FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD);

/*
==================================================================================
OA3NF_BAL_GL_JE_DETAIL_VAR  : Insert OracleData
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,AMOUNT_TYPE
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT 

GL_DETAIL_VAR.JE_HDR_ID_LINE_NUM       AS  GL_JE_LINE_KEY
,(select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE
,COA.ACCOUNT_TYPE       AS ACCOUNT_TYPE_KEY
,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN  (COALESCE(GL_DETAIL_VAR.OA_REFERENCE_5,'NO INVOICE SPECIFIED'))
  ELSE 'NO INVOICE SPECIFIED' 
END          AS AP_INVOICE_NUM

,CASE WHEN GL_HEADER.OA_JE_SOURCE = 'PAYABLES'
     THEN (COALESCE (GL_DETAIL_VAR.OA_REFERENCE_1,'NO AP VENDOR'))
  ELSE 'NO AP VENDOR' 
END          AS AP_VENDOR_NAME
,GL_DETAIL_VAR.OA_CREATED_BY       AS GL_DTL_CREATE_BY_KEY
,GL_DETAIL_VAR.JE_LINE_DESC       AS JE_LINE_DESCRIPTION
,GL_DETAIL_VAR.JE_LINE_NUM       AS JE_LINE_NUMBER
,GL_DETAIL_VAR.LAST_UPDATE_DTTM      AS LAST_UPDATE_DATE
,GL_DETAIL_VAR.GL_PERIOD_ID       AS PERIOD_KEY
, GL_DETAIL_VAR.POSTED_DATE AS POSTED_DATE
,GL_DETAIL_VAR.LINE_POSTING_STATUS_CD AS POSTING_STATUS
,GL_HEADER.SET_OF_BOOKS_ID      AS SET_OF_BOOKS_KEY
,'ORACLE'        AS AMOUNT_TYPE
,GL_HEADER.CURRENCY_CD       AS TRX_CURRENCY_KEY
,COA.SEGMENT2        AS  ACCOUNT__KEY
,COA.SEGMENT1        AS BUSINESS_ENTITY_KEY
,COA.SEGMENT3        AS DEPARTMENT_KEY
,COA.SEGMENT5        AS DETAIL_KEY
,COA.SEGMENT10        AS VENDOR_KEY 
,COA.SEGMENT11        AS FUTURE_KEY   
,COA.SEGMENT9        AS INTERCOMPANY_KEY
,COA.SEGMENT7        AS MEDIUM_KEY
,COA.SEGMENT4        AS PRODUCT_SEASON_EPISODE_KEY
,COA.SEGMENT6        AS TERRITORY_KEY
,COA.SEGMENT8        AS USER_DEFINED_KEY  
,COA.CHART_OF_ACCOUNT_ID      AS CHART_OF_ACCOUNT_KEY
,COA.CHART_OF_ACCOUNT_ID      AS TEMPLATE_KEY
, GL_DETAIL_VAR.OA_CREATED_BY       AS POSTED_BY
,GL_HEADER.CURRENCY_CONVERSION_RATE      AS CURRENCY_CONVERSION_RATE
,GL_DETAIL_VAR.EFFECTIVE_DATE       AS EFFECTIVE_DATE
,GL_DETAIL_VAR.OA_CREATED_BY       AS OA_CREATED_BY    
,GL_HEADER.JE_HEADER_DESC      AS JE_HEADER_DESC
,GL_DETAIL_VAR.LEGACY_CONTEXT       AS LEGACY_CONTEXT
,GL_HEADER.ACCRUAL_REV_FLAG      AS ACCRUAL_REV_FLAG
,GL_DETAIL_VAR.JE_LINE_CR_LOCAL_AMT      AS BASE_CREDIT_AMOUNT
,GL_DETAIL_VAR.JE_LINE_DR_LOCAL_AMT      AS BASE_DEBIT_AMOUNT 
,GL_DETAIL_VAR.JE_LINE_CR_TRANS_AMT      AS TRX_CREDIT_AMOUNT
,GL_DETAIL_VAR.JE_LINE_DR_TRANS_AMT      AS TRX_DEBIT_AMOUNT
,COALESCE(GL_DETAIL_VAR.JE_LINE_DR_LOCAL_AMT,0) - COALESCE(GL_DETAIL_VAR.JE_LINE_CR_LOCAL_AMT,0)     AS BASE_BALANCE
,COALESCE(GL_DETAIL_VAR.JE_LINE_DR_TRANS_AMT,0) -COALESCE(GL_DETAIL_VAR.JE_LINE_CR_TRANS_AMT,0)     AS TRX_BALANCE
FROM FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL AS GL_DETAIL_VAR
INNER JOIN FDW_TABLES_DB.OA3NF_COA AS COA
ON (CAST(GL_DETAIL_VAR.CHART_OF_ACCOUNT_ID AS DECIMAL(18,0))=COA.CHART_OF_ACCOUNT_ID
AND COA.SET_OF_BOOKS_ID=GL_DETAIL_VAR.SET_OF_BOOKS_ID)
INNER JOIN OA3NF_GL_JE_HEADER AS GL_HEADER  
ON CAST(GL_DETAIL_VAR.JE_HEADER_ID AS DECIMAL(18,0))=GL_HEADER.JE_HEADER_ID
AND GL_HEADER.SET_OF_BOOKS_ID=GL_DETAIL_VAR.SET_OF_BOOKS_ID
AND GL_DETAIL_VAR.SET_OF_BOOKS_ID IN (select set_of_books_id from FDW_TABLES_DB.OA3NF_SET_OF_BOOKS where set_of_books_name in ('CBS Studios USD','CBS Distribution USD'))
AND GL_DETAIL_VAR.POSTED_DATE between (case when TRIM(TO_CHAR(current_date, 'DAY')) 
= 'MONDAY' then Trunc(current_date-4) ELSE Trunc(current_date-1) END)
AND Trunc(current_date)
;





/*
==================================================================================
OA3NF_BAL_GL_JE_DETAIL_VAR  : Insert TERADATA-LA Studio Data
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,AMOUNT_TYPE
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,(select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA-LA'       AS AMOUNT_TYPE
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT   AS BASE_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT   AS TRX_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT   AS TRX_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_BALANCE    AS BASE_BALANCE
, OASEM_GL_DETAIL_F.TRX_BALANCE    AS TRX_BALANCE
 FROM FDW_STU_SEM_DB.OASEM_GL_DETAIL_F 
 WHERE OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY= :CBS_Studio
 AND OASEM_GL_DETAIL_F.POSTING_STATUS  = 'POSTED'
and OASEM_GL_DETAIL_F.POSTED_DATE between (case when TRIM(TO_CHAR(current_date, 'DAY')) 
= 'MONDAY' then Trunc(current_date-4) ELSE Trunc(current_date-1) END) 
AND Trunc(current_date)
 ;
 
 
 /*
==================================================================================
OA3NF_BAL_GL_JE_DETAIL_VAR  : Insert TERADATA-LA CTD Data
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_JE_DETAIL_VAR
(
GL_JE_LINE_KEY
,PROCESS_DATE
, ACCOUNT_TYPE_KEY
,AP_INVOICE_NUM
, AP_VENDOR_NAME
,GL_DTL_CREATE_BY_KEY
, JE_LINE_DESCRIPTION
, JE_LINE_NUMBER
, LAST_UPDATE_DATE
,PERIOD_KEY
,POSTED_DATE
,POSTING_STATUS
,SET_OF_BOOKS_KEY
,AMOUNT_TYPE
,TRX_CURRENCY_KEY
,ACCOUNT__KEY
,BUSINESS_ENTITY_KEY
,DEPARTMENT_KEY
,DETAIL_KEY
,VENDOR_KEY 
,FUTURE_KEY
,INTERCOMPANY_KEY
,MEDIUM_KEY
,PRODUCT_SEASON_EPISODE_KEY
,TERRITORY_KEY
,USER_DEFINED_KEY
,CHART_OF_ACCOUNT_KEY
,TEMPLATE_KEY
,POSTED_BY
, CURRENCY_CONVERSION_RATE
, EFFECTIVE_DATE
,OA_CREATED_BY
,JE_HEADER_DESC
,LEGACY_CONTEXT
,ACCRUAL_REV_FLAG
,BASE_CREDIT_AMOUNT
,BASE_DEBIT_AMOUNT
,TRX_CREDIT_AMOUNT
,TRX_DEBIT_AMOUNT
,BASE_BALANCE
,TRX_BALANCE
)


SELECT
 OASEM_GL_DETAIL_F.GL_JE_LINE_KEY   AS GL_JE_LINE_KEY
,(select PROCESS_DATE from FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE) AS PROCESS_DATE
, OASEM_GL_DETAIL_F.ACCOUNT_TYPE_KEY   AS ACCOUNT_TYPE_KEY
, OASEM_GL_DETAIL_F.AP_INVOICE_NUM   AS AP_INVOICE_NUM
, OASEM_GL_DETAIL_F.AP_VENDOR_NAME   AS AP_VENDOR_NAME
, OASEM_GL_DETAIL_F.GL_DTL_CREATE_BY_KEY   AS GL_DTL_CREATE_BY_KEY
, OASEM_GL_DETAIL_F.JE_LINE_DESCRIPTION   AS JE_LINE_DESCRIPTION
, OASEM_GL_DETAIL_F.JE_LINE_NUMBER   AS JE_LINE_NUMBER
, OASEM_GL_DETAIL_F.LAST_UPDATE_DATE   AS LAST_UPDATE_DATE
, OASEM_GL_DETAIL_F.PERIOD_KEY    AS PERIOD_KEY
, OASEM_GL_DETAIL_F.POSTED_DATE    AS POSTED_DATE
, OASEM_GL_DETAIL_F.POSTING_STATUS   AS POSTING_STATUS
, OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY   AS SET_OF_BOOKS_KEY
, 'TERADATA-LA'       AS AMOUNT_TYPE
, OASEM_GL_DETAIL_F.TRX_CURRENCY_KEY   AS TRX_CURRENCY_KEY
, OASEM_GL_DETAIL_F.ACCOUNT__KEY    AS ACCOUNT__KEY
, OASEM_GL_DETAIL_F.BUSINESS_ENTITY_KEY   AS BUSINESS_ENTITY_KEY
, OASEM_GL_DETAIL_F.DEPARTMENT_KEY   AS DEPARTMENT_KEY
, OASEM_GL_DETAIL_F.DETAIL_KEY    AS DETAIL_KEY
, OASEM_GL_DETAIL_F.VENDOR_KEY    AS VENDOR_KEY 
, OASEM_GL_DETAIL_F.FUTURE_KEY    AS FUTURE_KEY
, OASEM_GL_DETAIL_F.INTERCOMPANY_KEY   AS INTERCOMPANY_KEY
, OASEM_GL_DETAIL_F.MEDIUM_KEY    AS MEDIUM_KEY
, OASEM_GL_DETAIL_F.PRODUCT_SEASON_EPISODE_KEY  AS PRODUCT_SEASON_EPISODE_KEY
, OASEM_GL_DETAIL_F.TERRITORY_KEY    AS TERRITORY_KEY
, OASEM_GL_DETAIL_F.USER_DEFINED_KEY   AS USER_DEFINED_KEY
, OASEM_GL_DETAIL_F.CHART_OF_ACCOUNT_KEY   AS CHART_OF_ACCOUNT_KEY
, OASEM_GL_DETAIL_F.TEMPLATE_KEY    AS TEMPLATE_KEY
, OASEM_GL_DETAIL_F.POSTED_BY    AS POSTED_BY
, OASEM_GL_DETAIL_F.CURRENCY_CONVERSION_RATE  AS CURRENCY_CONVERSION_RATE
, OASEM_GL_DETAIL_F.EFFECTIVE_DATE   AS EFFECTIVE_DATE
, OASEM_GL_DETAIL_F.OA_CREATED_BY    AS OA_CREATED_BY
, OASEM_GL_DETAIL_F.JE_HEADER_DESC   AS JE_HEADER_DESC
, OASEM_GL_DETAIL_F.LEGACY_CONTEXT   AS LEGACY_CONTEXT
, OASEM_GL_DETAIL_F.ACCRUAL_REV_FLAG   AS ACCRUAL_REV_FLAG
, OASEM_GL_DETAIL_F.BASE_CREDIT_AMOUNT   AS BASE_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_DEBIT_AMOUNT   AS BASE_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_CREDIT_AMOUNT   AS TRX_CREDIT_AMOUNT
, OASEM_GL_DETAIL_F.TRX_DEBIT_AMOUNT   AS TRX_DEBIT_AMOUNT
, OASEM_GL_DETAIL_F.BASE_BALANCE    AS BASE_BALANCE
, OASEM_GL_DETAIL_F.TRX_BALANCE    AS TRX_BALANCE
 FROM FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F 
 WHERE OASEM_GL_DETAIL_F.SET_OF_BOOKS_KEY= :CBS_Distribution
 AND OASEM_GL_DETAIL_F.POSTING_STATUS  = 'POSTED'
and OASEM_GL_DETAIL_F.POSTED_DATE Between (case when TRIM(TO_CHAR(current_date, 'DAY')) 
= 'MONDAY' then Trunc(current_date-4) ELSE Trunc(current_date-1) END)
AND Trunc(curr
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_BAL_GL_PROCESS_DATE
AS (

--DELETE

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE;


--INSERT CURRENT_TIMESTAMP AND CURRENT_TIMESTAMP BEFORE 180 DAYS

INSERT INTO  FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE(
PROCESS_DATE,
PROCESS_DATE_MINUS_14)
SELECT
CAST(CAST(CURRENT_DATE AS FORMAT 'YYYY-MM-DD') || ' ' || CAST(CAST(CURRENT_TIME AS FORMAT 'HH:MI:SS') AS CHAR(8)) AS TIMESTAMP(6))
,(CAST(CAST(CURRENT_DATE AS FORMAT 'YYYY-MM-DD') || ' ' || CAST(CAST(CURRENT_TIME AS FORMAT 'HH:MI:SS') AS CHAR(8))  AS TIMESTAMP(6)) - INTERVAL '180' DAY);


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE	MACRO FDW_MACROS_DB.MAC_OA3NF_BATCH_AUDIT_AP
AS
(

DELETE from FDW_TABLES_DB.OA3NF_BATCH_AUDIT_AP
where  exists
( select '1' from FDW_STAGE_DB.LOAD_BATCH_AUDIT_ORA_AP_s
where OA3NF_BATCH_AUDIT_AP.BATCH_ID = LOAD_BATCH_AUDIT_ORA_AP_s.BATCH_ID
AND OA3NF_BATCH_AUDIT_AP.TABLE_NM = LOAD_BATCH_AUDIT_ORA_AP_s.TABLE_NM)
;

INSERT	INTO FDW_TABLES_DB.OA3NF_BATCH_AUDIT_AP
(BATCH_ID, TABLE_NM, ORA_BAL_AMT, ORA_RCRD_CNT, STG_RCRD_CNT,
		DW_RCRD_CNT, STG_CNT_VARIANCE, DW_CNT_VARIANCE, STG_BAL_AMT,
		DW_BAL_AMT, STG_BAL_AMT_VARIANCE, DW_BAL_AMT_VARIANCE, CRT_DTTM)
SELECT 
ORA.BATCH_ID,
DW.TABLE_NM, --STG.TABLE_NM,ORA.TABLE_NAME,
ORA.ORA_BAL_AMT,
ORA.ORA_RCRD_CNT,
STG.STG_RCRD_CNT,
DW.DW_RCRD_CNT,
ABS(ORA.ORA_RCRD_CNT - STG.STG_RCRD_CNT) AS STG_CNT_VARIANCE,
ABS (DW.DW_RCRD_CNT - STG.STG_RCRD_CNT ) AS DW_CNT_VARIANCE,
STG.STG_BAL_AMT,
DW.DW_BAL_AMT, 
ABS(STG.STG_BAL_AMT - ORA.ORA_BAL_AMT)AS STG_BAL_AMT_VARIANCE,
ABS(STG.STG_BAL_AMT-DW.DW_BAL_AMT) AS DW_BAL_AMT_VARIANCE,
ORA.CRT_DTTM
FROM
FDW_STAGE_DB.LOAD_BATCH_AUDIT_DW_AP_s DW , 
FDW_STAGE_DB.LOAD_BATCH_AUDIT_STG_AP_s STG,
FDW_STAGE_DB.LOAD_BATCH_AUDIT_ORA_AP_s ORA
WHERE
STG.TABLE_NM = DW.TABLE_NM
    AND DW.TABLE_NM = ORA.TABLE_NM
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE	MACRO FDW_MACROS_DB.MAC_OA3NF_BATCH_AUDIT_GL
AS
(
DELETE from FDW_TABLES_DB.OA3NF_BATCH_AUDIT_GL
where  exists
( select '1' from FDW_STAGE_DB.LOAD_BATCH_AUDIT_ORA_GL_s 
where OA3NF_BATCH_AUDIT_GL.BATCH_ID = LOAD_BATCH_AUDIT_ORA_GL_s.BATCH_ID
AND OA3NF_BATCH_AUDIT_GL.TABLE_NM = LOAD_BATCH_AUDIT_ORA_GL_s.TABLE_NM)
;

INSERT	INTO FDW_TABLES_DB.OA3NF_BATCH_AUDIT_GL
(BATCH_ID, TABLE_NM, ORA_BAL_AMT, ORA_RCRD_CNT, STG_RCRD_CNT,
		DW_RCRD_CNT, STG_CNT_VARIANCE, DW_CNT_VARIANCE, STG_BAL_AMT,
		DW_BAL_AMT, STG_BAL_AMT_VARIANCE, DW_BAL_AMT_VARIANCE, CRT_DTTM)
SELECT 
ORA.BATCH_ID,
DW.TABLE_NM,
coalesce(ORA.ORA_BAL_AMT, 0)  AS ORA_BAL_AMT,
ORA.ORA_RCRD_CNT,
STG.STG_RCRD_CNT,
DW.DW_RCRD_CNT,
ABS(ORA.ORA_RCRD_CNT - STG.STG_RCRD_CNT) AS STG_CNT_VARIANCE,
ABS (DW.DW_RCRD_CNT - STG.STG_RCRD_CNT ) AS DW_CNT_VARIANCE,
coalesce(STG.STG_BAL_AMT,0) AS STG_BAL_AMT,
coalesce(DW.DW_BAL_AMT,0) AS DW_BAL_AMT, 
ABS( coalesce(STG.STG_BAL_AMT,0) - coalesce(ORA.ORA_BAL_AMT,0))AS STG_BAL_AMT_VARIANCE,
ABS(coalesce(STG.STG_BAL_AMT,0) - coalesce(DW.DW_BAL_AMT,0) ) AS DW_BAL_AMT_VARIANCE,
ORA.CRT_DTTM
FROM
FDW_STAGE_DB.LOAD_BATCH_AUDIT_DW_GL_s DW , 
FDW_STAGE_DB.LOAD_BATCH_AUDIT_STG_GL_s STG,
FDW_STAGE_DB.LOAD_BATCH_AUDIT_ORA_GL_s ORA
WHERE
STG.TABLE_NM = DW.TABLE_NM
    AND DW.TABLE_NM = ORA.TABLE_NM
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_COA AS (
DELETE FROM FDW_TABLES_DB.OA3NF_COA
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_COA_s
where
   LOAD_COA_s.CHART_OF_ACCOUNT_ID = OA3NF_COA.CHART_OF_ACCOUNT_ID
   AND
   LOAD_COA_s.SET_OF_BOOKS_ID = OA3NF_COA.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_COA ( 
   ACCOUNT_TYPE,
   SET_OF_BOOKS_ID,
   CHART_OF_ACCOUNT_ID,
   COA_STRUCTURE_ID,
   LAST_UPDATE_DTTM,
   SEGMENT1,
   SEGMENT10,
   SEGMENT11,
   SEGMENT12,
   SEGMENT13,
   SEGMENT14,
   SEGMENT15,
   SEGMENT16,
   SEGMENT17,
   SEGMENT18,
   SEGMENT19,
   SEGMENT2,
   SEGMENT20,
   SEGMENT21,
   SEGMENT22,
   SEGMENT23,
   SEGMENT24,
   SEGMENT25,
   SEGMENT26,
   SEGMENT27,
   SEGMENT28,
   SEGMENT29,
   SEGMENT3,
   SEGMENT30,
   SEGMENT4,
   SEGMENT5,
   SEGMENT6,
   SEGMENT7,
   SEGMENT8,
   SEGMENT9,
   SUMMARY_FLAG,
   START_DATE_ACTIVE,
   END_DATE_ACTIVE,
   ENABLED_FLAG,
   TEMPLATE_ID ) 
SELECT 
   ACCOUNT_TYPE,
   SET_OF_BOOKS_ID,
   CHART_OF_ACCOUNT_ID,
   COA_STRUCTURE_ID,
   LAST_UPDATE_DTTM,
   SEGMENT1,
   SEGMENT10,
   SEGMENT11,
   SEGMENT12,
   SEGMENT13,
   SEGMENT14,
   SEGMENT15,
   SEGMENT16,
   SEGMENT17,
   SEGMENT18,
   SEGMENT19,
   SEGMENT2,
   SEGMENT20,
   SEGMENT21,
   SEGMENT22,
   SEGMENT23,
   SEGMENT24,
   SEGMENT25,
   SEGMENT26,
   SEGMENT27,
   SEGMENT28,
   SEGMENT29,
   SEGMENT3,
   SEGMENT30,
   SEGMENT4,
   SEGMENT5,
   SEGMENT6,
   SEGMENT7,
   SEGMENT8,
   SEGMENT9,
   SUMMARY_FLAG,
   START_DATE_ACTIVE,
   END_DATE_ACTIVE,
   ENABLED_FLAG,
   TEMPLATE_ID
FROM FDW_STAGE_DB.LOAD_COA_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--OA3NF_COA_SEGMENT
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_COA_SEGMENT AS(
DELETE FROM FDW_TABLES_DB.OA3NF_COA_SEGMENT WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_COA_SEGMENT
(
				COA_STRUCTURE_ID,
				APPLICATION_COLUMN_NAME,
				COA_SEGMENT_NAME,
				COA_SEGMENT_ID,
				SET_OF_BOOKS_ID
                )
                
SELECT 
                COA_STRUCTURE_ID,
				APPLICATION_COLUMN_NAME,
				COA_SEGMENT_NAME,
				COA_SEGMENT_ID,
				SET_OF_BOOKS_ID


FROM FDW_STAGE_DB.LOAD_COA_SEGMENT_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------

/*
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_LINE_LOAD AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_LINE_LOAD where SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE_LOAD
(
		JE_HEADER_ID,         
		JE_LINE_NUM,         
		LAST_UPDATE_DTTM,
		LAST_UPDATED_BY,       
		SET_OF_BOOKS_ID,       
		CHART_OF_ACCOUNT_ID,   
		GL_PERIOD_ID,   
		JE_HDR_ID_LINE_NUM,    
		EFFECTIVE_DATE,        
		LINE_POSTING_STATUS_CD,
		OA_CREATED_BY,         
		JE_LINE_DR_TRANS_AMT,  
		JE_LINE_CR_TRANS_AMT,  
		JE_LINE_DR_LOCAL_AMT,  
		JE_LINE_CR_LOCAL_AMT,  
		JE_LINE_DESC ,         
		OA_REFERENCE_1,
		OA_REFERENCE_2,
		OA_REFERENCE_3,
		OA_REFERENCE_4,
		OA_REFERENCE_5,
		OA_REFERENCE_6,
		OA_REFERENCE_7,
		OA_REFERENCE_8,
		OA_REFERENCE_9,
		OA_REFERENCE_10,
		ATTRIBUTE1,
		ATTRIBUTE2,   
		ATTRIBUTE3,   
		ATTRIBUTE4,     
		ATTRIBUTE5,     
		ATTRIBUTE6,     
		ATTRIBUTE7,      
		ATTRIBUTE8,     
		ATTRIBUTE9,     
		ATTRIBUTE10,        
		OA_GL_SL_LINK_ID
)
SELECT 
		JE_HEADER_ID,         
		JE_LINE_NUM,         
		LAST_UPDATE_DTTM,
		LAST_UPDATED_BY,       
		SET_OF_BOOKS_ID,       
		CHART_OF_ACCOUNT_ID,   
		GL_PERIOD_ID,   
		JE_HDR_ID_LINE_NUM,    
		EFFECTIVE_DATE,        
		LINE_POSTING_STATUS_CD,
		OA_CREATED_BY,         
		JE_LINE_DR_TRANS_AMT,  
		JE_LINE_CR_TRANS_AMT,  
		JE_LINE_DR_LOCAL_AMT,  
		JE_LINE_CR_LOCAL_AMT,  
		JE_LINE_DESC ,         
		OA_REFERENCE_1,
		OA_REFERENCE_2,
		OA_REFERENCE_3,
		OA_REFERENCE_4,
		OA_REFERENCE_5,
		OA_REFERENCE_6,
		OA_REFERENCE_7,
		OA_REFERENCE_8,
		OA_REFERENCE_9,
		OA_REFERENCE_10,
		ATTRIBUTE1,
		ATTRIBUTE2,   
		ATTRIBUTE3,   
		ATTRIBUTE4,     
		ATTRIBUTE5,     
		ATTRIBUTE6,     
		ATTRIBUTE7,      
		ATTRIBUTE8,     
		ATTRIBUTE9,     
		ATTRIBUTE10,        
		OA_GL_SL_LINK_ID
FROM FDW_STAGE_DB.LOAD_GL_JE_LINE_LOAD_s;
);
--------------------------------------------------------------------------------
*/

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_COA_STRUCTURE (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_COA_STRUCTURE where SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_COA_STRUCTURE
(
		COA_STRUCTURE_TYPE,
		COA_STRUCTURE_ID,
		COA_STRUCTURE_NAME,
		SET_OF_BOOKS_ID
)
SELECT 

		COA_STRUCTURE_TYPE,
		COA_STRUCTURE_ID,
		COA_STRUCTURE_NAME,
		:CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_COA_STRUCTURE_s
UNION ALL
SELECT 

		COA_STRUCTURE_TYPE,
		COA_STRUCTURE_ID,
		COA_STRUCTURE_NAME,
		:CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_COA_STRUCTURE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_COA_VALUE_DESC (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_COA_VALUE_DESC WHERE OA3NF_COA_VALUE_DESC.SET_OF_BOOKS_ID NOT IN(1002);
INSERT INTO FDW_TABLES_DB.OA3NF_COA_VALUE_DESC
(
SET_OF_BOOKS_ID,
COA_SEGMENT_ID,
COA_VALUE,
COA_VALUE_DESCRIPTION,
LANG,
LAST_UPDATE_DATE,
COA_VALUE_PARENT,
OA_FLEX_VALUE_ID,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE7,
ATTRIBUTE6,
ATTRIBUTE1,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE8,
ATTRIBUTE45,
ATTRIBUTE39,
ATTRIBUTE40,
ATTRIBUTE23,
ATTRIBUTE22,
ATTRIBUTE21,
ATTRIBUTE20,
ATTRIBUTE11,
ATTRIBUTE38,
ATTRIBUTE37,
ATTRIBUTE14,
ATTRIBUTE31,
ATTRIBUTE32,
ATTRIBUTE33,
ATTRIBUTE35,
ATTRIBUTE34,
ATTRIBUTE36,
ATTRIBUTE15,
ATTRIBUTE30,
ATTRIBUTE16,
ATTRIBUTE13,
ATTRIBUTE12,
ATTRIBUTE18,
ATTRIBUTE41,
ATTRIBUTE42,
ATTRIBUTE19,
ATTRIBUTE28,
ATTRIBUTE27,
ATTRIBUTE24,
ATTRIBUTE25,
ATTRIBUTE26,
ATTRIBUTE17,
ATTRIBUTE29,
ATTRIBUTE43,
ENABLED_FLAG
)
SELECT
:CBS_Studio As SET_OF_BOOKS_ID,
LOAD_COA_VALUE_DESC_s.COA_SEGMENT_ID,
LOAD_COA_VALUE_DESC_s.COA_VALUE,
LOAD_COA_VALUE_DESC_s.COA_VALUE_DESCRIPTION,
LOAD_COA_VALUE_DESC_s.LANG,
LOAD_COA_VALUE_DESC_s.LAST_UPDATE_DATE,
LOAD_COA_VALUE_DESC_s.COA_VALUE_PARENT,
LOAD_COA_VALUE_DESC_s.OA_FLEX_VALUE_ID,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE4,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE5,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE2,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE3,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE7,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE6,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE1,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE9,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE10,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE8,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE45,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE39,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE40,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE23,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE22,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE21,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE20,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE11,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE38,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE37,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE14,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE31,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE32,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE33,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE35,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE34,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE36,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE15,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE30,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE16,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE13,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE12,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE18,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE41,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE42,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE19,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE28,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE27,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE24,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE25,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE26,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE17,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE29,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE43,
LOAD_COA_VALUE_DESC_s.ENABLED_FLAG
FROM FDW_STAGE_DB.LOAD_COA_VALUE_DESC_s
UNION ALL
SELECT 
:CBS_Distribution As  SET_OF_BOOKS_ID,
LOAD_COA_VALUE_DESC_s.COA_SEGMENT_ID,
LOAD_COA_VALUE_DESC_s.COA_VALUE,
LOAD_COA_VALUE_DESC_s.COA_VALUE_DESCRIPTION,
LOAD_COA_VALUE_DESC_s.LANG,
LOAD_COA_VALUE_DESC_s.LAST_UPDATE_DATE,
LOAD_COA_VALUE_DESC_s.COA_VALUE_PARENT,
LOAD_COA_VALUE_DESC_s.OA_FLEX_VALUE_ID,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE4,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE5,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE2,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE3,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE7,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE6,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE1,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE9,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE10,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE8,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE45,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE39,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE40,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE23,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE22,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE21,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE20,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE11,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE38,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE37,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE14,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE31,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE32,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE33,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE35,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE34,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE36,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE15,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE30,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE16,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE13,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE12,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE18,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE41,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE42,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE19,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE28,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE27,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE24,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE25,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE26,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE17,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE29,
LOAD_COA_VALUE_DESC_s.ATTRIBUTE43,
LOAD_COA_VALUE_DESC_s.ENABLED_FLAG
FROM FDW_STAGE_DB.LOAD_COA_VALUE_DESC_s ;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CURRENCY AS (

DELETE FROM FDW_TABLES_DB.OA3NF_CURRENCY
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CURRENCY_s
where
   LOAD_CURRENCY_s.CURRENCY_CD = OA3NF_CURRENCY.CURRENCY_CD
   AND LOAD_CURRENCY_s.LANGUAGE_CD = OA3NF_CURRENCY.LANGUAGE_CD
   AND LOAD_CURRENCY_s.SET_OF_BOOKS_ID = OA3NF_CURRENCY.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_CURRENCY ( 
   CURRENCY_CD,
   CURRENCY_NAME,
   CURRENCY_DESC,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
SET_OF_BOOKS_ID   ) 
SELECT 
   CURRENCY_CD,
   CURRENCY_NAME,
   CURRENCY_DESC,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_CURRENCY_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUSTOMER AS (
DELETE FROM FDW_TABLES_DB.OA3NF_CUSTOMER
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CUSTOMER_s
where
   LOAD_CUSTOMER_s.CUSTOMER_ID = OA3NF_CUSTOMER.CUSTOMER_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER ( 
   CUSTOMER_ID,
   CUSTOMER_NAME,
   CUSTOMER_TYPE_CD,
   OA_LAST_UPDATE_DTTM,
   OA_YEAR_ESTABLISHED,
   OA_CUSTOMER_STATUS_CD,
   OA_CUST_FISCAL_YEAREND_MONTH,
   CUSTOMER_NUMBER ) 
SELECT 
   CUSTOMER_ID,
   CUSTOMER_NAME,
   CUSTOMER_TYPE_CD,
   OA_LAST_UPDATE_DTTM,
   OA_YEAR_ESTABLISHED,
   OA_CUSTOMER_STATUS_CD,
   OA_CUST_FISCAL_YEAREND_MONTH,
   CUSTOMER_NUMBER
FROM FDW_STAGE_DB.LOAD_CUSTOMER_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUSTOMER_ACCT AS (
DELETE FROM FDW_TABLES_DB.OA3NF_CUSTOMER_ACCT;
INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER_ACCT
(
	   CUSTOMER_ACCOUNT_ID,
	   CUSTOMER_ID,
	   OA_LAST_UPDATE_DTTM,
	   CUSTOMER_ACCOUNT_NUMBER,
	   OA_CUSTOMER_CLASS_CD,
	   OA_SALES_CHANNEL_CODE
)

SELECT 
	   CUSTOMER_ACCOUNT_ID,
	   CUSTOMER_ID,
	   OA_LAST_UPDATE_DTTM,
	   CUSTOMER_ACCOUNT_NUMBER,
	   OA_CUSTOMER_CLASS_CD,
	   OA_SALES_CHANNEL_CODE
	   
FROM FDW_STAGE_DB.LOAD_CUSTOMER_ACCT_s	;   
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUSTOMER_ACCT_SITE AS(
DELETE FROM FDW_TABLES_DB.OA3NF_CUSTOMER_ACCT_SITE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CUSTOMER_ACCT_SITE_s
where
   LOAD_CUSTOMER_ACCT_SITE_s.CUST_ACCOUNT_SITE_ID = OA3NF_CUSTOMER_ACCT_SITE.CUST_ACCOUNT_SITE_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER_ACCT_SITE ( 
   CUSTOMER_ID,
   CUST_ACCOUNT_SITE_ID,
   MARKETING_FLAG,
   CUSTOMER_CATEGORY_CD,
   KEY_ACCOUNT_FLAG,
   LANGUAGE_CD,
   BILL_TO_FLAG,
   SHIP_TO_FLAG,
   CUSTOMER_SITE_ID,
   CUSTOMER_ACCOUNT_ID,
   LAST_UPDATE_DTTM ) 
SELECT 
   CUSTOMER_ID,
   CUST_ACCOUNT_SITE_ID,
   MARKETING_FLAG,
   CUSTOMER_CATEGORY_CD,
   KEY_ACCOUNT_FLAG,
   LANGUAGE_CD,
   BILL_TO_FLAG,
   SHIP_TO_FLAG,
   CUSTOMER_SITE_ID,
   CUSTOMER_ACCOUNT_ID,
   LAST_UPDATE_DTTM
FROM FDW_STAGE_DB.LOAD_CUSTOMER_ACCT_SITE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUSTOMER_LOCATION AS(
DELETE FROM FDW_TABLES_DB.OA3NF_CUSTOMER_LOCATION
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CUSTOMER_LOCATION_s
where
   LOAD_CUSTOMER_LOCATION_s.CUSTOMER_LOCATION_ID = OA3NF_CUSTOMER_LOCATION.CUSTOMER_LOCATION_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER_LOCATION ( 
   CUSTOMER_LOCATION_ID,
   ADDRESS1,
   ADDRESS2,
   ADDRESS3,
   ADDRESS4,
   CITY,
   COUNTRY,
   COUNTY,
   CUSTOMER_LOCATION_DESC,
   POSTAL_CODE,
   PROVINCE,
   STATE_NAME,
   LAST_UPDATE_DTTM ) 
SELECT 
   CUSTOMER_LOCATION_ID,
   ADDRESS1,
   ADDRESS2,
   ADDRESS3,
   ADDRESS4,
   CITY,
   COUNTRY,
   COUNTY,
   CUSTOMER_LOCATION_DESC,
   POSTAL_CODE,
   PROVINCE,
   STATE_NAME,
   LAST_UPDATE_DTTM
FROM FDW_STAGE_DB.LOAD_CUSTOMER_LOCATION_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUSTOMER_SITE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_CUSTOMER_SITE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CUSTOMER_SITE_s
where
   LOAD_CUSTOMER_SITE_s.CUSTOMER_SITE_ID = OA3NF_CUSTOMER_SITE.CUSTOMER_SITE_ID);

INSERT INTO FDW_TABLES_DB.OA3NF_CUSTOMER_SITE ( 
   CUSTOMER_LOCATION_ID,
   CUSTOMER_ID,
   CUSTOMER_SITE_ID,
   CUSTOMER_SITE_NAME,
   CUSTOMER_SITE_NUMBER,
   LAST_UPDATE_DTTM ) 
SELECT 
   CUSTOMER_LOCATION_ID,
   CUSTOMER_ID,
   CUSTOMER_SITE_ID,
   CUSTOMER_SITE_NAME,
   CUSTOMER_SITE_NUMBER,
   LAST_UPDATE_DTTM
FROM FDW_STAGE_DB.LOAD_CUSTOMER_SITE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_CUST_ACCT_SITE_USE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_CUST_ACCT_SITE_USE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_CUST_ACCT_SITE_USE_s
where
   LOAD_CUST_ACCT_SITE_USE_s.CUST_ACCT_SITE_USE_ID = OA3NF_CUST_ACCT_SITE_USE.CUST_ACCT_SITE_USE_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_CUST_ACCT_SITE_USE ( 
   CUST_ACCOUNT_SITE_ID,
   SITE_USE_CD,
   CUST_ACCT_SITE_USE_ID,
   TAX_CD,
   STATUS_CD,
   ORG_ID,
   FREIGHT_TERM,
   LAST_UPDATE_DTTM ) 
SELECT 
   CUST_ACCOUNT_SITE_ID,
   SITE_USE_CD,
   CUST_ACCT_SITE_USE_ID,
   TAX_CD,
   STATUS_CD,
   ORG_ID,
   FREIGHT_TERM,
   LAST_UPDATE_DTTM
FROM FDW_STAGE_DB.LOAD_CUST_ACCT_SITE_USE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_DB_CALENDAR AS(

DELETE FROM FDW_TABLES_DB.OA3NF_DB_CALENDAR;

INSERT INTO FDW_TABLES_DB.OA3NF_DB_CALENDAR
( 
   CALENDAR_DATE
   ,CALENDAR_MONTH
   ,CALENDAR_QUARTER
   ,CALENDAR_WEEK_ENDING
   ,CALENDAR_YEAR
   ,CALENDAR_PERIOD
   ,CALENDAR_PERIOD_NAME
   ,CALENDAR_PERIOD_QUARTER
) 
SELECT
   COALESCE(CALENDAR_DATE, CAST('01/01/1900' AS DATE FORMAT 'MM/DD/YYYY'))
   ,COALESCE(CAST(CAST((CALENDAR.CALENDAR_DATE (FORMAT 'M4')) AS VARCHAR(10)) AS VARCHAR(20)), 'NA')
   ,COALESCE(CAST('Q' || TRIM(CALENDAR.QUARTER_OF_YEAR) AS VARCHAR(20)), 'NA')
   ,CASE
          WHEN 6 = 1
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 1
                 END
          WHEN 6 = 2
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 2
                 END
          WHEN 6 = 3
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 3
                 END
          WHEN 6 = 4
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 4
                 END
          WHEN 6 = 5
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 5
                 END
          WHEN 6 = 6
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date + 6
                 END
          WHEN 6 = 7
             THEN CASE
                    WHEN calendar.day_of_week = 1
                       THEN calendar.calendar_date + 6
                    WHEN calendar.day_of_week = 2
                       THEN calendar.calendar_date + 5
                    WHEN calendar.day_of_week = 3
                       THEN calendar.calendar_date + 4
                    WHEN calendar.day_of_week = 4
                       THEN calendar.calendar_date + 3
                    WHEN calendar.day_of_week = 5
                       THEN calendar.calendar_date + 2
                    WHEN calendar.day_of_week = 6
                       THEN calendar.calendar_date + 1
                    WHEN calendar.day_of_week = 7
                       THEN calendar.calendar_date
                 END
       END
   ,COALESCE(CAST(CAST(CALENDAR.YEAR_OF_CALENDAR AS VARCHAR(256)) AS VARCHAR(256)), 'NA')
   ,trim(CALENDAR.YEAR_OF_CALENDAR) ||'-'|| ( trim(CALENDAR.MONTH_OF_YEAR (format '99')) )
   ,case
  when CALENDAR.month_of_year=1 then 'JAN' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=2 then 'FEB' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=3 then 'MAR' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=4 then 'APR' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=5 then 'MAY' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=6 then 'JUN' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=7 then 'JUL' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=8 then 'AUG' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=9 then 'SEP' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=10 then 'OCT' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=11 then 'NOV' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  when CALENDAR.month_of_year=12 then 'DEC' ||'-'|| substr(trim(CALENDAR.YEAR_OF_CALENDAR), 3, 2)
  else null
end
   ,trim(CALENDAR.YEAR_OF_CALENDAR) ||'-Q'|| TRIM(CALENDAR.QUARTER_OF_YEAR)
 FROM 
   SYS_CALENDAR.CALENDAR
WHERE
   CALENDAR.YEAR_OF_CALENDAR > 1990
    AND CALENDAR.YEAR_OF_CALENDAR < 2040;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_EMPLOYEE AS(
DELETE FROM FDW_TABLES_DB.OA3NF_EMPLOYEE;
INSERT INTO FDW_TABLES_DB.OA3NF_EMPLOYEE
(
EMPLOYEE_ID,
EFFECTIVE_START_DATE,
EFFECTIVE_START_DTTM,
EFFECTIVE_END_DATE,
EFFECTIVE_END_DTTM,
DISABLED_CD,
BUSINESS_GROUP_ID,
LAST_NAME,
APPLICANT_NUMBER,
LANGUAGE_CD,
DATE_OF_BIRTH,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
FIRST_NAME,
EMPLOYEE_NAME,
INTERNAL_LOCATION,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
MILITARY_STATUS,
NATIONALITY,
NATIONAL_IDENTIFIER,
OFFICE_NUMBER,
PERSON_TYPE,
SEX,
LAST_UPDATE_DATE
)
SELECT 
EMPLOYEE_ID,
EFFECTIVE_START_DATE,
EFFECTIVE_START_DTTM,
EFFECTIVE_END_DATE,
EFFECTIVE_END_DTTM,
DISABLED_CD,
BUSINESS_GROUP_ID,
LAST_NAME,
APPLICANT_NUMBER,
LANGUAGE_CD,
DATE_OF_BIRTH,
EMAIL_ADDRESS,
EMPLOYEE_NUMBER,
FIRST_NAME,
EMPLOYEE_NAME,
INTERNAL_LOCATION,
MAILSTOP,
MARITAL_STATUS,
MIDDLE_NAMES,
MILITARY_STATUS,
NATIONALITY,
NATIONAL_IDENTIFIER,
OFFICE_NUMBER,
PERSON_TYPE,
SEX,
LAST_UPDATE_DATE
FROM FDW_STAGE_DB.LOAD_EMPLOYEE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_EMPLOYEE_ADDRESS AS(
DELETE FROM FDW_TABLES_DB.OA3NF_EMPLOYEE_ADDRESS;
INSERT INTO FDW_TABLES_DB.OA3NF_EMPLOYEE_ADDRESS
(
ADDRESS_ID,
EMPLOYEE_ID,
EFF_START_DATE,
PRIMARY_FLAG,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
COUNTRY,
EFF_END_DATE,
POSTAL_CODE,
COUNTY,
STATE_CD,
TELEPHONE_NUMBER_1,
TELEPHONE_NUMBER_2,
TELEPHONE_NUMBER_3,
CITY

) SELECT

LOAD_EMPLOYEE_ADDRESS_s.ADDRESS_ID,
LOAD_EMPLOYEE_ADDRESS_s.EMPLOYEE_ID,
LOAD_EMPLOYEE_ADDRESS_s.EFF_START_DATE,
LOAD_EMPLOYEE_ADDRESS_s.PRIMARY_FLAG,
LOAD_EMPLOYEE_ADDRESS_s.ADDRESS_LINE1,
LOAD_EMPLOYEE_ADDRESS_s.ADDRESS_LINE2,
LOAD_EMPLOYEE_ADDRESS_s.ADDRESS_LINE3,
LOAD_EMPLOYEE_ADDRESS_s.COUNTRY,
LOAD_EMPLOYEE_ADDRESS_s.EFF_END_DATE,
LOAD_EMPLOYEE_ADDRESS_s.POSTAL_CODE,
LOAD_EMPLOYEE_ADDRESS_s.COUNTY,
LOAD_EMPLOYEE_ADDRESS_s.STATE_CD,
LOAD_EMPLOYEE_ADDRESS_s.TELEPHONE_NUMBER_1,
LOAD_EMPLOYEE_ADDRESS_s.TELEPHONE_NUMBER_2,
LOAD_EMPLOYEE_ADDRESS_s.TELEPHONE_NUMBER_3,
LOAD_EMPLOYEE_ADDRESS_s.CITY
FROM FDW_STAGE_DB.LOAD_EMPLOYEE_ADDRESS_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FLEX_HIER AS (

DELETE FROM FDW_TABLES_DB.OA3NF_FLEX_HIER;


INSERT INTO FDW_TABLES_DB.OA3NF_FLEX_HIER ( 
   FLEX_VALUE,
   DESCRIPTION,
   FLEX_VALUE_SET_ID,
   PARENT_FLEX_VALUE) 
   
SELECT 
   FLEX_VALUE,
   DESCRIPTION,
   FLEX_VALUE_SET_ID,
   PARENT_FLEX_VALUE
FROM FDW_STAGE_DB.LOAD_FLEX_HIER_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FLX_VAL_RL_VL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FLX_VAL_RL_VL  WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RL_VL
(
				FLEX_VALUE_RULE_ID,
				FLEX_VALUE_RULE_NAME,
				FLEX_VALUE_SET_ID,
				ERROR_MESSAGE,
				DESCRIPTION,
				SET_OF_BOOKS_ID
                )
                
SELECT 
                FLEX_VALUE_RULE_ID,
				FLEX_VALUE_RULE_NAME,
				FLEX_VALUE_SET_ID,
				ERROR_MESSAGE,
				DESCRIPTION,
				:CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RL_VL_s
UNION ALL
SELECT 
                FLEX_VALUE_RULE_ID,
				FLEX_VALUE_RULE_NAME,
				FLEX_VALUE_SET_ID,
				ERROR_MESSAGE,
				DESCRIPTION,
				:CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RL_VL_s;;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FLX_VAL_RUL_LN (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_LN  WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_LN
(
        FLEX_VALUE_RULE_ID,
        SET_OF_BOOKS_ID,
        FLEX_VALUE_SET_ID,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_LOGIN,
        INCLUDE_EXCLUDE_INDICATOR,
        FLEX_VALUE_LOW,
        FLEX_VALUE_HIGH,
        PARENT_FLEX_VALUE_LOW,
        PARENT_FLEX_VALUE_HIGH
)
SELECT        
        FLEX_VALUE_RULE_ID,
        :CBS_Studio AS SET_OF_BOOKS_ID,
        FLEX_VALUE_SET_ID,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_LOGIN,
        INCLUDE_EXCLUDE_INDICATOR,
        FLEX_VALUE_LOW,
        FLEX_VALUE_HIGH,
        PARENT_FLEX_VALUE_LOW,
        PARENT_FLEX_VALUE_HIGH
		
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_LN_s
UNION ALL
SELECT        
        FLEX_VALUE_RULE_ID,
        :CBS_Distribution AS SET_OF_BOOKS_ID,
        FLEX_VALUE_SET_ID,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_LOGIN,
        INCLUDE_EXCLUDE_INDICATOR,
        FLEX_VALUE_LOW,
        FLEX_VALUE_HIGH,
        PARENT_FLEX_VALUE_LOW,
        PARENT_FLEX_VALUE_HIGH
		
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_LN_s;    
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FLX_VAL_RUL_UG (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_UG WHERE OA3NF_FLX_VAL_RUL_UG.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_UG
(
APPLICATION_ID,
SET_OF_BOOKS_ID,
RESPONSIBILITY_ID,
FLEX_VALUE_RULE_ID,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
FLEX_VALUE_SET_ID,
PARENT_FLEX_VALUE_LOW,
PARENT_FLEX_VALUE_HIGH
) SELECT
APPLICATION_ID,
:CBS_Studio AS SET_OF_BOOKS_ID,
RESPONSIBILITY_ID,
FLEX_VALUE_RULE_ID,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
FLEX_VALUE_SET_ID,
PARENT_FLEX_VALUE_LOW,
PARENT_FLEX_VALUE_HIGH
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_UG_s
UNION ALL
SELECT
APPLICATION_ID,
:CBS_Distribution AS SET_OF_BOOKS_ID,
RESPONSIBILITY_ID,
FLEX_VALUE_RULE_ID,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
FLEX_VALUE_SET_ID,
PARENT_FLEX_VALUE_LOW,
PARENT_FLEX_VALUE_HIGH
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_UG_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FLX_VAL_RUL_VL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_VL  WHERE SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_VL
(
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	ERROR_MESSAGE,
	FLEX_VALUE_RULE_ID,
	SET_OF_BOOKS_ID,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
	)
	
SELECT 
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	ERROR_MESSAGE,
	FLEX_VALUE_RULE_ID,
	:CBS_Studio AS SET_OF_BOOKS_ID,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_VL_s
UNION ALL
SELECT 
	CREATED_BY,
	CREATION_DATE,
	DESCRIPTION,
	ERROR_MESSAGE,
	FLEX_VALUE_RULE_ID,
	:CBS_Distribution AS SET_OF_BOOKS_ID,
	LANGUAGE_,
	LAST_UPDATED_BY,
	LAST_UPDATE_DATE,
	LAST_UPDATE_LOGIN,
	SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FLX_VAL_RUL_VL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_APPL_TL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_APPL_TL  WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_APPL_TL
(
				APPLICATION_ID,
				SET_OF_BOOKS_ID,
				LANGUAGE_,
				APPLICATION_NAME,
				CREATED_BY,
				CREATION_DATE,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				LAST_UPDATE_LOGIN,
				DESCRIPTION,
				SOURCE_LANG
                )
                
SELECT 
                APPLICATION_ID,
				:CBS_Studio AS SET_OF_BOOKS_ID,
				LANGUAGE_,
				APPLICATION_NAME,
				CREATED_BY,
				CREATION_DATE,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				LAST_UPDATE_LOGIN,
				DESCRIPTION,
				SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_APPL_TL_s
UNION ALL
SELECT 
                APPLICATION_ID,
				:CBS_Distribution AS SET_OF_BOOKS_ID,
				LANGUAGE_,
				APPLICATION_NAME,
				CREATED_BY,
				CREATION_DATE,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				LAST_UPDATE_LOGIN,
				DESCRIPTION,
				SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_APPL_TL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_CMPD_MENU_FUNC (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_FND_CMPD_MENU_FUNC WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_FND_CMPD_MENU_FUNC
(
		MENU_ID,    
		SET_OF_BOOKS_ID,
		FUNCTION_ID,
		GRANT_FLAG 
)
SELECT  

		MENU_ID,    
		:CBS_Studio AS SET_OF_BOOKS_ID,
		FUNCTION_ID,
		GRANT_FLAG 

FROM FDW_STAGE_DB.LOAD_FND_CMPD_MENU_FUNC_s
UNION ALL
SELECT  

		MENU_ID,    
		:CBS_Distribution AS SET_OF_BOOKS_ID,
		FUNCTION_ID,
		GRANT_FLAG 

FROM FDW_STAGE_DB.LOAD_FND_CMPD_MENU_FUNC_s;	   
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_FLX_VAL_SETS AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS WHERE OA3NF_FND_FLX_VAL_SETS.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS
(   
FLEX_VALUE_SET_ID,
SET_OF_BOOKS_ID, 
FLEX_VALUE_SET_NAME,
LAST_UPDATE_DATE,   
LAST_UPDATED_BY,          
CREATION_DATE,     
CREATED_BY, 
LAST_UPDATE_LOGIN,   
VALIDATION_TYPE,  
PROTECTED_FLAG,    
SECURITY_ENABLED_FLAG,
LONGLIST_FLAG,    
FORMAT_TYPE, 
MAXIMUM_SIZE,           
ALPHANUMERIC_ALLOWED_FLAG,
UPPERCASE_ONLY_FLAG,      
NUMERIC_MODE_ENABLED_FLAG,
DESCRIPTION,      
DEPENDANT_DEFAULT_VALUE,  
DEPENDANT_DEFAULT_MEANING,
PARENT_FLEX_VALUE_SET_ID, 
MINIMUM_VALUE,      
MAXIMUM_VALUE,    
NUMBER_PRECISION
)
SELECT
LOAD_FND_FLX_VAL_SETS_s.FLEX_VALUE_SET_ID,
 LOAD_FND_FLX_VAL_SETS_s.SET_OF_BOOKS_ID, 
 LOAD_FND_FLX_VAL_SETS_s.FLEX_VALUE_SET_NAME,
 LOAD_FND_FLX_VAL_SETS_s.LAST_UPDATE_DATE,   
 LOAD_FND_FLX_VAL_SETS_s.LAST_UPDATED_BY,          
 LOAD_FND_FLX_VAL_SETS_s.CREATION_DATE,     
 LOAD_FND_FLX_VAL_SETS_s.CREATED_BY, 
 LOAD_FND_FLX_VAL_SETS_s.LAST_UPDATE_LOGIN,   
 LOAD_FND_FLX_VAL_SETS_s.VALIDATION_TYPE,  
 LOAD_FND_FLX_VAL_SETS_s.PROTECTED_FLAG,    
 LOAD_FND_FLX_VAL_SETS_s.SECURITY_ENABLED_FLAG,
 LOAD_FND_FLX_VAL_SETS_s.LONGLIST_FLAG,    
 LOAD_FND_FLX_VAL_SETS_s.FORMAT_TYPE, 
 LOAD_FND_FLX_VAL_SETS_s.MAXIMUM_SIZE,           
 LOAD_FND_FLX_VAL_SETS_s.ALPHANUMERIC_ALLOWED_FLAG,
 LOAD_FND_FLX_VAL_SETS_s.UPPERCASE_ONLY_FLAG,      
 LOAD_FND_FLX_VAL_SETS_s.NUMERIC_MODE_ENABLED_FLAG,
 LOAD_FND_FLX_VAL_SETS_s.DESCRIPTION,      
 LOAD_FND_FLX_VAL_SETS_s.DEPENDANT_DEFAULT_VALUE,  
 LOAD_FND_FLX_VAL_SETS_s.DEPENDANT_DEFAULT_MEANING,
 LOAD_FND_FLX_VAL_SETS_s.PARENT_FLEX_VALUE_SET_ID, 
 LOAD_FND_FLX_VAL_SETS_s.MINIMUM_VALUE,      
 LOAD_FND_FLX_VAL_SETS_s.MAXIMUM_VALUE,    
 LOAD_FND_FLX_VAL_SETS_s.NUMBER_PRECISION 
 FROM FDW_STAGE_DB.LOAD_FND_FLX_VAL_SETS_s
 ;
 );
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_FORM_FUNC (CBS_Studio INT, CBS_Distribution INT) AS(

DELETE FROM FDW_TABLES_DB.OA3NF_FND_FORM_FUNC WHERE SET_OF_BOOKS_ID NOT IN (1002);

INSERT INTO FDW_TABLES_DB.OA3NF_FND_FORM_FUNC

(
FUNCTION_ID,     
SET_OF_BOOKS_ID,   
FUNCTION_NAME, 
APPLICATION_ID,       
FORM_ID,                      
PARAMETERS,                   
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_DATE,             
LAST_UPDATED_BY,              
LAST_UPDATE_LOGIN,            
TYPE_,                        
WEB_HOST_NAME,                
WEB_AGENT_NAME,               
WEB_HTML_CALL,                
WEB_ENCRYPT_PARAMETERS,       
WEB_SECURED,                  
WEB_ICON,                     
OBJECT_ID,                    
REGION_APPLICATION_ID,        
REGION_CODE,                  
MAINTENANCE_MODE_SUPPORT,     
CONTEXT_DEPENDENCE,           
JRAD_REF_PATH,                
IREP_METHOD_NAME,             
IREP_OVERLOAD_SEQUENCE,       
IREP_SCOPE,                   
IREP_LIFECYCLE,               
IREP_DESCRIPTION,             
IREP_COMPATIBILITY,           
IREP_INBOUND_XML_DESCRIPTION, 
IREP_OUTBOUND_XML_DESCRIPTION,
IREP_SYNCHRO,                 
IREP_DIRECTION,               
IREP_ASSOC_FUNCTION_NAME,     
IREP_CLASS_ID,                
IREP_SCHEMA_VALIDATION_FLAG
)
SELECT 
FUNCTION_ID,     
:CBS_Studio AS SET_OF_BOOKS_ID,   
FUNCTION_NAME, 
APPLICATION_ID,       
FORM_ID,                      
PARAMETERS,                   
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_DATE,             
LAST_UPDATED_BY,              
LAST_UPDATE_LOGIN,            
TYPE_,                        
WEB_HOST_NAME,                
WEB_AGENT_NAME,               
WEB_HTML_CALL,                
WEB_ENCRYPT_PARAMETERS,       
WEB_SECURED,                  
WEB_ICON,                     
OBJECT_ID,                    
REGION_APPLICATION_ID,        
REGION_CODE,                  
MAINTENANCE_MODE_SUPPORT,     
CONTEXT_DEPENDENCE,           
JRAD_REF_PATH,                
IREP_METHOD_NAME,             
IREP_OVERLOAD_SEQUENCE,       
IREP_SCOPE,                   
IREP_LIFECYCLE,               
IREP_DESCRIPTION,             
IREP_COMPATIBILITY,           
IREP_INBOUND_XML_DESCRIPTION, 
IREP_OUTBOUND_XML_DESCRIPTION,
IREP_SYNCHRO,                 
IREP_DIRECTION,               
IREP_ASSOC_FUNCTION_NAME,     
IREP_CLASS_ID,                
IREP_SCHEMA_VALIDATION_FLAG
FROM FDW_STAGE_DB.LOAD_FND_FORM_FUNC_s
UNION ALL
SELECT 
FUNCTION_ID,     
:CBS_Distribution AS SET_OF_BOOKS_ID,   
FUNCTION_NAME, 
APPLICATION_ID,       
FORM_ID,                      
PARAMETERS,                   
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_DATE,             
LAST_UPDATED_BY,              
LAST_UPDATE_LOGIN,            
TYPE_,                        
WEB_HOST_NAME,                
WEB_AGENT_NAME,               
WEB_HTML_CALL,                
WEB_ENCRYPT_PARAMETERS,       
WEB_SECURED,                  
WEB_ICON,                     
OBJECT_ID,                    
REGION_APPLICATION_ID,        
REGION_CODE,                  
MAINTENANCE_MODE_SUPPORT,     
CONTEXT_DEPENDENCE,           
JRAD_REF_PATH,                
IREP_METHOD_NAME,             
IREP_OVERLOAD_SEQUENCE,       
IREP_SCOPE,                   
IREP_LIFECYCLE,               
IREP_DESCRIPTION,             
IREP_COMPATIBILITY,           
IREP_INBOUND_XML_DESCRIPTION, 
IREP_OUTBOUND_XML_DESCRIPTION,
IREP_SYNCHRO,                 
IREP_DIRECTION,               
IREP_ASSOC_FUNCTION_NAME,     
IREP_CLASS_ID,                
IREP_SCHEMA_VALIDATION_FLAG
FROM FDW_STAGE_DB.LOAD_FND_FORM_FUNC_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_FORM_FUNC_TL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_FORM_FUNC_TL  WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_FORM_FUNC_TL
(
				LANGUAGE_,  
				SET_OF_BOOKS_ID,
				FUNCTION_ID,   
				USER_FUNCTION_NAME,
				CREATION_DATE,
				CREATED_BY,     
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,  
				LAST_UPDATE_LOGIN, 
				DESCRIPTION,       
				SOURCE_LANG
                )
                
SELECT 
                LANGUAGE_,  
				:CBS_Studio AS SET_OF_BOOKS_ID,
				FUNCTION_ID,   
				USER_FUNCTION_NAME,
				CREATION_DATE,
				CREATED_BY,     
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,  
				LAST_UPDATE_LOGIN, 
				DESCRIPTION,       
				SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_FORM_FUNC_TL_s
UNION ALL
SELECT 
                LANGUAGE_,  
				:CBS_Distribution AS SET_OF_BOOKS_ID,
				FUNCTION_ID,   
				USER_FUNCTION_NAME,
				CREATION_DATE,
				CREATED_BY,     
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,  
				LAST_UPDATE_LOGIN, 
				DESCRIPTION,       
				SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_FORM_FUNC_TL_s;
);
--------------------------------------------------------------------------------

--- Request Text
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_LKP_OWNER_CODE
AS
(

DELETE  from FDW_TABLES_DB.OA3NF_FND_LOOKUP_OWNER_CODE
where  exists
( select '1' from FDW_STAGE_DB.LOAD_FND_LOOKUP_OWNER_CODE_s
where OA3NF_FND_LOOKUP_OWNER_CODE.LOOKUP_TYPE = LOAD_FND_LOOKUP_OWNER_CODE_s.LOOKUP_TYPE
AND OA3NF_FND_LOOKUP_OWNER_CODE.VIEW_APPLICATION_ID = LOAD_FND_LOOKUP_OWNER_CODE_s.VIEW_APPLICATION_ID
AND OA3NF_FND_LOOKUP_OWNER_CODE.LOOKUP_CODE=LOAD_FND_LOOKUP_OWNER_CODE_s.LOOKUP_CODE
AND OA3NF_FND_LOOKUP_OWNER_CODE.SECURITY_GROUP_ID=LOAD_FND_LOOKUP_OWNER_CODE_s.SECURITY_GROUP_ID
AND OA3NF_FND_LOOKUP_OWNER_CODE.LANGUAGE_CD=LOAD_FND_LOOKUP_OWNER_CODE_s.LANGUAGE_CD
AND OA3NF_FND_LOOKUP_OWNER_CODE.SET_OF_BOOKS_ID=LOAD_FND_LOOKUP_OWNER_CODE_s.SET_OF_BOOKS_ID
) ;

INSERT INTO FDW_TABLES_DB.OA3NF_FND_LOOKUP_OWNER_CODE
(LOOKUP_TYPE, LANGUAGE_CD, LOOKUP_CODE, MEANING, DESCRIPTION,
  ENABLED_FLAG, START_DATE_ACTIVE, END_DATE_ACTIVE, CREATED_BY,
  CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN, LAST_UPDATE_DATE,
  SOURCE_LANG, SECURITY_GROUP_ID, VIEW_APPLICATION_ID, TERRITORY_CODE,
  ATTRIBUTE_CATEGORY, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4,
  ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10,
  ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15,
  TAG, LEAF_NODE, SET_OF_BOOKS_ID)
 SELECT LOOKUP_TYPE, LANGUAGE_CD, LOOKUP_CODE, MEANING, DESCRIPTION,
  ENABLED_FLAG, START_DATE_ACTIVE, END_DATE_ACTIVE, CREATED_BY,
  CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN, LAST_UPDATE_DATE,
  SOURCE_LANG, SECURITY_GROUP_ID, VIEW_APPLICATION_ID, TERRITORY_CODE,
  ATTRIBUTE_CATEGORY, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4,
  ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10,
  ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15,
  TAG, LEAF_NODE, SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_FND_LOOKUP_OWNER_CODE_s ;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_RESPNSBLTY (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY
(
		APPLICATION_ID,            
		RESPONSIBILITY_ID,         
		SET_OF_BOOKS_ID,              
		LAST_UPDATE_DATE,          
		LAST_UPDATED_BY,           
		CREATION_DATE,             
		CREATED_BY,            
		LAST_UPDATE_LOGIN,         
		DATA_GROUP_APPLICATION_ID, 
		DATA_GROUP_ID,             
		MENU_ID,                   
		TERM_SECURITY_ENABLED_FLAG,
		START_DATE,                
		END_DATE,                  
		GROUP_APPLICATION_ID,      
		REQUEST_GROUP_ID,          
		VERSION,                   
		WEB_HOST_NAME,             
		WEB_AGENT_NAME,            
		RESPONSIBILITY_KEY   
)		
SELECT 
		APPLICATION_ID,            
		RESPONSIBILITY_ID,         
		:CBS_Studio AS SET_OF_BOOKS_ID,              
		LAST_UPDATE_DATE,          
		LAST_UPDATED_BY,           
		CREATION_DATE,             
		CREATED_BY,            
		LAST_UPDATE_LOGIN,         
		DATA_GROUP_APPLICATION_ID, 
		DATA_GROUP_ID,             
		MENU_ID,                   
		TERM_SECURITY_ENABLED_FLAG,
		START_DATE,                
		END_DATE,                  
		GROUP_APPLICATION_ID,      
		REQUEST_GROUP_ID,          
		VERSION,                   
		WEB_HOST_NAME,             
		WEB_AGENT_NAME,            
		RESPONSIBILITY_KEY    
FROM FDW_STAGE_DB.LOAD_FND_RESPNSBLTY_s
UNION ALL
SELECT 
		APPLICATION_ID,            
		RESPONSIBILITY_ID,         
		:CBS_Distribution AS SET_OF_BOOKS_ID,              
		LAST_UPDATE_DATE,          
		LAST_UPDATED_BY,           
		CREATION_DATE,             
		CREATED_BY,            
		LAST_UPDATE_LOGIN,         
		DATA_GROUP_APPLICATION_ID, 
		DATA_GROUP_ID,             
		MENU_ID,                   
		TERM_SECURITY_ENABLED_FLAG,
		START_DATE,                
		END_DATE,                  
		GROUP_APPLICATION_ID,      
		REQUEST_GROUP_ID,          
		VERSION,                   
		WEB_HOST_NAME,             
		WEB_AGENT_NAME,            
		RESPONSIBILITY_KEY    
FROM FDW_STAGE_DB.LOAD_FND_RESPNSBLTY_s; 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_RESPNSBLTY_TL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL WHERE OA3NF_FND_RESPNSBLTY_TL.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL
 (
APPLICATION_ID,
RESPONSIBILITY_ID,
SET_OF_BOOKS_ID,
LANGUAGE_,
RESPONSIBILITY_NAME,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
DESCRIPTION,
SOURCE_LANG
) 
SELECT
LOAD_FND_RESPNSBLTY_TL_s.APPLICATION_ID,
LOAD_FND_RESPNSBLTY_TL_s.RESPONSIBILITY_ID,
:CBS_Studio AS SET_OF_BOOKS_ID,
LOAD_FND_RESPNSBLTY_TL_s.LANGUAGE_,
LOAD_FND_RESPNSBLTY_TL_s.RESPONSIBILITY_NAME,
LOAD_FND_RESPNSBLTY_TL_s.CREATED_BY,
LOAD_FND_RESPNSBLTY_TL_s.CREATION_DATE,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATED_BY,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATE_DATE,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATE_LOGIN,
LOAD_FND_RESPNSBLTY_TL_s.DESCRIPTION,
LOAD_FND_RESPNSBLTY_TL_s.SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_RESPNSBLTY_TL_s
UNION ALL
SELECT
LOAD_FND_RESPNSBLTY_TL_s.APPLICATION_ID,
LOAD_FND_RESPNSBLTY_TL_s.RESPONSIBILITY_ID,
:CBS_Distribution AS SET_OF_BOOKS_ID,
LOAD_FND_RESPNSBLTY_TL_s.LANGUAGE_,
LOAD_FND_RESPNSBLTY_TL_s.RESPONSIBILITY_NAME,
LOAD_FND_RESPNSBLTY_TL_s.CREATED_BY,
LOAD_FND_RESPNSBLTY_TL_s.CREATION_DATE,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATED_BY,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATE_DATE,
LOAD_FND_RESPNSBLTY_TL_s.LAST_UPDATE_LOGIN,
LOAD_FND_RESPNSBLTY_TL_s.DESCRIPTION,
LOAD_FND_RESPNSBLTY_TL_s.SOURCE_LANG
FROM FDW_STAGE_DB.LOAD_FND_RESPNSBLTY_TL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_SECURITY_GRPS (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_SECURITY_GRPS  WHERE SET_OF_BOOKS_ID NOT IN 1002 ;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_SECURITY_GRPS
(
SECURITY_GROUP_ID,
SET_OF_BOOKS_ID,
SECURITY_GROUP_KEY,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN
)
SELECT 
SECURITY_GROUP_ID,
:CBS_Studio AS SET_OF_BOOKS_ID,
SECURITY_GROUP_KEY,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_FND_SECURITY_GRPS_s
UNION ALL
SELECT 
SECURITY_GROUP_ID,
:CBS_Distribution AS SET_OF_BOOKS_ID,
SECURITY_GROUP_KEY,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_FND_SECURITY_GRPS_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_USER (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_FND_USER  WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_FND_USER
(
				USER_ID,        
				SET_OF_BOOKS_ID,
				USER_NAME,
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,      
				CREATION_DATE,
				CREATED_BY,       
				LAST_UPDATE_LOGIN,        
				ENCRYPTED_FOUNDATION_PASSWORD,
				ENCRYPTED_USER_PASSWORD,
				SESSION_NUMBER,
				START_DATE,
				END_DATE,
				DESCRIPTION,
				LAST_LOGON_DATE,
				PASSWORD_DATE,
				PASSWORD_ACCESSES_LEFT,
				PASSWORD_LIFESPAN_ACCESSES,   
				PASSWORD_LIFESPAN_DAYS,       
				EMPLOYEE_ID,  
				EMAIL_ADDRESS,
				FAX,
				CUSTOMER_ID, 
				SUPPLIER_ID, 
				WEB_PASSWORD,
				USER_GUID,
				GCN_CODE_COMBINATION_ID,       
				PERSON_PARTY_ID 
                )
                
SELECT 
                USER_ID,        
				:CBS_Studio AS SET_OF_BOOKS_ID,
				USER_NAME,
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,      
				CREATION_DATE,
				CREATED_BY,       
				LAST_UPDATE_LOGIN,        
				ENCRYPTED_FOUNDATION_PASSWORD,
				ENCRYPTED_USER_PASSWORD,
				SESSION_NUMBER,
				START_DATE,
				END_DATE,
				DESCRIPTION,
				LAST_LOGON_DATE,
				PASSWORD_DATE,
				PASSWORD_ACCESSES_LEFT,
				PASSWORD_LIFESPAN_ACCESSES,   
				PASSWORD_LIFESPAN_DAYS,       
				EMPLOYEE_ID,  
				EMAIL_ADDRESS,
				FAX,
				CUSTOMER_ID, 
				SUPPLIER_ID, 
				WEB_PASSWORD,
				USER_GUID,
				GCN_CODE_COMBINATION_ID,       
				PERSON_PARTY_ID 
FROM FDW_STAGE_DB.LOAD_FND_USER_s
UNION ALL
SELECT 
                USER_ID,        
				:CBS_Distribution AS SET_OF_BOOKS_ID,
				USER_NAME,
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,      
				CREATION_DATE,
				CREATED_BY,       
				LAST_UPDATE_LOGIN,        
				ENCRYPTED_FOUNDATION_PASSWORD,
				ENCRYPTED_USER_PASSWORD,
				SESSION_NUMBER,
				START_DATE,
				END_DATE,
				DESCRIPTION,
				LAST_LOGON_DATE,
				PASSWORD_DATE,
				PASSWORD_ACCESSES_LEFT,
				PASSWORD_LIFESPAN_ACCESSES,   
				PASSWORD_LIFESPAN_DAYS,       
				EMPLOYEE_ID,  
				EMAIL_ADDRESS,
				FAX,
				CUSTOMER_ID, 
				SUPPLIER_ID, 
				WEB_PASSWORD,
				USER_GUID,
				GCN_CODE_COMBINATION_ID,       
				PERSON_PARTY_ID 
FROM FDW_STAGE_DB.LOAD_FND_USER_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_FND_USR_RESP_GRPS (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OA3NF_FND_USR_RESP_GRPS WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_FND_USR_RESP_GRPS
(
		USER_ID,
		SET_OF_BOOKS_ID,
		RESPONSIBILITY_ID,
		RESPONSIBILITY_APPLICATION_ID,
		SECURITY_GROUP_ID,
		START_DATE,
		END_DATE,
		DESCRIPTION,
		CREATED_BY,
		CREATION_DATE,
		LAST_UPDATED_BY,
		LAST_UPDATE_DATE,
		LAST_UPDATE_LOGIN
)
SELECT 
		USER_ID,
		:CBS_Studio AS SET_OF_BOOKS_ID,
		RESPONSIBILITY_ID,
		RESPONSIBILITY_APPLICATION_ID,
		SECURITY_GROUP_ID,
		START_DATE,
		END_DATE,
		DESCRIPTION,
		CREATED_BY,
		CREATION_DATE,
		LAST_UPDATED_BY,
		LAST_UPDATE_DATE,
		LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_FND_USR_RESP_GRPS_s
UNION ALL
SELECT 
		USER_ID,
		:CBS_Distribution AS SET_OF_BOOKS_ID,
		RESPONSIBILITY_ID,
		RESPONSIBILITY_APPLICATION_ID,
		SECURITY_GROUP_ID,
		START_DATE,
		END_DATE,
		DESCRIPTION,
		CREATED_BY,
		CREATION_DATE,
		LAST_UPDATED_BY,
		LAST_UPDATE_DATE,
		LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_FND_USR_RESP_GRPS_s
; 
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------



REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_ACCOUNT_HIER AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_ACCOUNT_HIER WHERE OA3NF_GL_ACCOUNT_HIER.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_ACCOUNT_HIER
(
DETAIL_CODE_COMBINATION_ID,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
ORDERING_VALUE,
SET_OF_BOOKS_ID,
CHART_OF_ACCOUNT_ID,
SUMMARY_CODE_COMBINATION_ID,
TEMPLATE_ID
)
SELECT	
DETAIL_CODE_COMBINATION_ID,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
ORDERING_VALUE,
SET_OF_BOOKS_ID,
CHART_OF_ACCOUNT_ID,
SUMMARY_CODE_COMBINATION_ID,
TEMPLATE_ID
FROM fdw_stage_db.LOAD_GL_ACCOUNT_HIER_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_
AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_BALANCES_s
where
   FDW_STAGE_DB.LOAD_GL_BALANCES_s.ACTUAL_FLAG = FDW_TABLES_DB.OA3NF_GL_BALANCES_.ACTUAL_FLAG
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.CHART_OF_ACCOUNT_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.CHART_OF_ACCOUNT_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.CURRENCY_CD = FDW_TABLES_DB.OA3NF_GL_BALANCES_.CURRENCY_CD
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.ENCUMBRANCE_TYPE_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.ENCUMBRANCE_TYPE_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.GL_PERIOD_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.GL_PERIOD_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.SET_OF_BOOKS_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.SET_OF_BOOKS_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.FINANCIAL_PLAN_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.FINANCIAL_PLAN_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.TRANSLATED_FLAG_CD = FDW_TABLES_DB.OA3NF_GL_BALANCES_.TRANSLATED_FLAG_CD
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.PERIOD_NUM = FDW_TABLES_DB.OA3NF_GL_BALANCES_.PERIOD_NUM
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_ ( 
   ACTUAL_FLAG,
   BEGIN_BALANCE_CR,
   BEGIN_BALANCE_DR,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CD,
   ENCUMBRANCE_TYPE_ID,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NET_CR,
   PERIOD_NET_DR,
   PERIOD_TO_DATE_ADB,
   PERIOD_YEAR,
   PROJECT_TO_DATE_CR,
   PROJECT_TO_DATE_DR,
   QUARTER_TO_DATE_ADB,
   QUARTER_TO_DATE_CR,
   QUARTER_TO_DATE_DR,
   SET_OF_BOOKS_ID,
   TRANSLATED_FLAG,
   YEAR_TO_DATE_ADB,
   FINANCIAL_PLAN_ID,
   BEGIN_BALANCE_CR_BEQ,
   BEGIN_BALANCE_DR_BEQ,
   PERIOD_NET_CR_BEQ,
   PERIOD_NET_DR_BEQ,
   PROJECT_TO_DATE_CR_BEQ,
   PROJECT_TO_DATE_DR_BEQ,
   QUARTER_TO_DATE_CR_BEQ,
   QUARTER_TO_DATE_DR_BEQ,
   GL_BUDGET_ID,
   TRANSLATED_FLAG_CD,
   TEMPLATE_ID,
   PERIOD_NUM,
   YEAR_TO_DATE_CR,
   YEAR_TO_DATE_DR,
   YEAR_TO_DATE_NET_ACTIVITY ) 
SELECT 
   ACTUAL_FLAG,
   BEGIN_BALANCE_CR,
   BEGIN_BALANCE_DR,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CD,
   ENCUMBRANCE_TYPE_ID,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NET_CR,
   PERIOD_NET_DR,
   PERIOD_TO_DATE_ADB,
   PERIOD_YEAR,
   PROJECT_TO_DATE_CR,
   PROJECT_TO_DATE_DR,
   QUARTER_TO_DATE_ADB,
   QUARTER_TO_DATE_CR,
   QUARTER_TO_DATE_DR,
   SET_OF_BOOKS_ID,
   TRANSLATED_FLAG,
   YEAR_TO_DATE_ADB,
   FINANCIAL_PLAN_ID,
   BEGIN_BALANCE_CR_BEQ,
   BEGIN_BALANCE_DR_BEQ,
   PERIOD_NET_CR_BEQ,
   PERIOD_NET_DR_BEQ,
   PROJECT_TO_DATE_CR_BEQ,
   PROJECT_TO_DATE_DR_BEQ,
   QUARTER_TO_DATE_CR_BEQ,
   QUARTER_TO_DATE_DR_BEQ,
   GL_BUDGET_ID,
   TRANSLATED_FLAG_CD,
   TEMPLATE_ID,
   PERIOD_NUM,
   YEAR_TO_DATE_CR,
   YEAR_TO_DATE_DR,
   YEAR_TO_DATE_NET_ACTIVITY
FROM FDW_STAGE_DB.LOAD_GL_BALANCES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_CDC
AS (


DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC ALL;

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
( 
   ACTUAL_FLAG
   ,CHART_OF_ACCOUNT_ID
   ,CURRENCY_CD
   ,ENCUMBRANCE_TYPE_ID
   ,SET_OF_BOOKS_ID
   ,FINANCIAL_PLAN_ID
   ,PERIOD_YEAR
) 
SELECT distinct 
   LOAD_GL_BALANCES_s.ACTUAL_FLAG
   ,LOAD_GL_BALANCES_s.CHART_OF_ACCOUNT_ID
   ,LOAD_GL_BALANCES_s.CURRENCY_CD
   ,LOAD_GL_BALANCES_s.ENCUMBRANCE_TYPE_ID
   ,LOAD_GL_BALANCES_s.SET_OF_BOOKS_ID
   ,LOAD_GL_BALANCES_s.FINANCIAL_PLAN_ID
   ,LOAD_GL_BALANCES_s.PERIOD_YEAR
 FROM 
   FDW_STAGE_DB.LOAD_GL_BALANCES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_CORR
AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR
WHERE
OA3NF_GL_BALANCES_CORR.ACTUAL_FLAG  = OA3NF_GL_BALANCES_CDC.ACTUAL_FLAG AND 
OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID = OA3NF_GL_BALANCES_CDC.CHART_OF_ACCOUNT_ID AND 
OA3NF_GL_BALANCES_CORR.CURRENCY_CD = OA3NF_GL_BALANCES_CDC.CURRENCY_CD AND 
OA3NF_GL_BALANCES_CORR.ENCUMBRANCE_TYPE_ID = OA3NF_GL_BALANCES_CDC.ENCUMBRANCE_TYPE_ID  AND 
OA3NF_GL_BALANCES_CORR.PERIOD_YEAR = OA3NF_GL_BALANCES_CDC.PERIOD_YEAR  AND 
OA3NF_GL_BALANCES_CORR.SET_OF_BOOKS_ID = OA3NF_GL_BALANCES_CDC.SET_OF_BOOKS_ID  AND 
OA3NF_GL_BALANCES_CORR.FINANCIAL_PLAN_ID = OA3NF_GL_BALANCES_CDC.FINANCIAL_PLAN_ID ;

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR
( 
   ACTUAL_FLAG
   ,BEGIN_BALANCE_CR
   ,BEGIN_BALANCE_CR_BEQ
   ,BEGIN_BALANCE_CR_BEQ_CORR
   ,BEGIN_BALANCE_CR_CORR
   ,BEGIN_BALANCE_DR
   ,BEGIN_BALANCE_DR_BEQ
   ,BEGIN_BALANCE_DR_BEQ_CORR
   ,BEGIN_BALANCE_DR_CORR
   ,CHART_OF_ACCOUNT_ID
   ,CURRENCY_CD
   ,ENCUMBRANCE_TYPE_ID
   ,FINANCIAL_PLAN_ID
   ,GL_PERIOD_ID
   ,LAST_UPDATE_DTTM
   ,PERIOD_NET_CR
   ,PERIOD_NET_CR_BEQ
   ,PERIOD_NET_CR_BEQ_CORR
   ,PERIOD_NET_CR_CORR
   ,PERIOD_NET_DR
   ,PERIOD_NET_DR_BEQ
   ,PERIOD_NET_DR_BEQ_CORR
   ,PERIOD_NET_DR_CORR
   ,PERIOD_TO_DATE_ADB
   ,PERIOD_YEAR
   ,PROJECT_TO_DATE_CR
   ,PROJECT_TO_DATE_CR_BEQ
   ,PROJECT_TO_DATE_DR
   ,PROJECT_TO_DATE_DR_BEQ
   ,QUARTER_TO_DATE_ADB
   ,QUARTER_TO_DATE_CR
   ,QUARTER_TO_DATE_CR_BEQ
   ,QUARTER_TO_DATE_DR
   ,QUARTER_TO_DATE_DR_BEQ
   ,SET_OF_BOOKS_ID
   ,TRANSLATED_FLAG
   ,YEAR_TO_DATE_ADB
   ,PERIOD_NUM
   ,YEAR_TO_DATE_CR_CORR
   ,YEAR_TO_DATE_DR_CORR
   ,YEAR_TO_DATE_NET_CORR
   ,YEAR_TO_DATE_CR_BEQ_CORR
   ,YEAR_TO_DATE_DR_BEQ_CORR
   ,YEAR_TO_DATE_NET_BEQ_CORR
) 
SELECT
   OA3NF_GL_BALANCES_.ACTUAL_FLAG
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_CR
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_CR_BEQ
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_CR_BEQ
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_CR
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_DR
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_DR_BEQ
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_DR_BEQ
   ,OA3NF_GL_BALANCES_.BEGIN_BALANCE_DR
   ,OA3NF_GL_BALANCES_.CHART_OF_ACCOUNT_ID
   ,OA3NF_GL_BALANCES_.CURRENCY_CD
   ,OA3NF_GL_BALANCES_.ENCUMBRANCE_TYPE_ID
   ,OA3NF_GL_BALANCES_.FINANCIAL_PLAN_ID
   ,OA3NF_GL_BALANCES_.GL_PERIOD_ID
   ,OA3NF_GL_BALANCES_.LAST_UPDATE_DTTM
   ,OA3NF_GL_BALANCES_.PERIOD_NET_CR
   ,OA3NF_GL_BALANCES_.PERIOD_NET_CR_BEQ
   ,OA3NF_GL_BALANCES_.PERIOD_NET_CR_BEQ
   ,OA3NF_GL_BALANCES_.PERIOD_NET_CR
   ,OA3NF_GL_BALANCES_.PERIOD_NET_DR
   ,OA3NF_GL_BALANCES_.PERIOD_NET_DR_BEQ
   ,OA3NF_GL_BALANCES_.PERIOD_NET_DR_BEQ
   ,OA3NF_GL_BALANCES_.PERIOD_NET_DR
   ,OA3NF_GL_BALANCES_.PERIOD_TO_DATE_ADB
   ,OA3NF_GL_BALANCES_.PERIOD_YEAR
   ,OA3NF_GL_BALANCES_.PROJECT_TO_DATE_CR
   ,OA3NF_GL_BALANCES_.PROJECT_TO_DATE_CR_BEQ
   ,OA3NF_GL_BALANCES_.PROJECT_TO_DATE_DR
   ,OA3NF_GL_BALANCES_.PROJECT_TO_DATE_DR_BEQ
   ,OA3NF_GL_BALANCES_.QUARTER_TO_DATE_ADB
   ,OA3NF_GL_BALANCES_.QUARTER_TO_DATE_CR
   ,OA3NF_GL_BALANCES_.QUARTER_TO_DATE_CR_BEQ
   ,OA3NF_GL_BALANCES_.QUARTER_TO_DATE_DR
   ,OA3NF_GL_BALANCES_.QUARTER_TO_DATE_DR_BEQ
   ,OA3NF_GL_BALANCES_.SET_OF_BOOKS_ID
   ,OA3NF_GL_BALANCES_.TRANSLATED_FLAG
   ,OA3NF_GL_BALANCES_.YEAR_TO_DATE_ADB
   ,OA3NF_GL_BALANCES_.PERIOD_NUM
   ,0
   ,0
   ,0
   ,0
   ,0
   ,0
 FROM 
   FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
   ,FDW_TABLES_DB.OA3NF_GL_BALANCES_ 
INNER JOIN
FDW_TABLES_DB.OA3NF_SET_OF_BOOKS
ON OA3NF_GL_BALANCES_.SET_OF_BOOKS_ID = OA3NF_SET_OF_BOOKS.SET_OF_BOOKS_ID
/*eric re-enabled - base currency should come from _COR_S*/
AND OA3NF_GL_BALANCES_.CURRENCY_CD <> OA3NF_SET_OF_BOOKS.CURRENCY_CD
WHERE
   OA3NF_GL_BALANCES_.ACTUAL_FLAG  = OA3NF_GL_BALANCES_CDC.ACTUAL_FLAG
    AND OA3NF_GL_BALANCES_.CHART_OF_ACCOUNT_ID = OA3NF_GL_BALANCES_CDC.CHART_OF_ACCOUNT_ID
    AND OA3NF_GL_BALANCES_.CURRENCY_CD = OA3NF_GL_BALANCES_CDC.CURRENCY_CD
    AND OA3NF_GL_BALANCES_.ENCUMBRANCE_TYPE_ID = OA3NF_GL_BALANCES_CDC.ENCUMBRANCE_TYPE_ID 
    AND OA3NF_GL_BALANCES_.PERIOD_YEAR = OA3NF_GL_BALANCES_CDC.PERIOD_YEAR 
    AND OA3NF_GL_BALANCES_.SET_OF_BOOKS_ID = OA3NF_GL_BALANCES_CDC.SET_OF_BOOKS_ID
    AND OA3NF_GL_BALANCES_.FINANCIAL_PLAN_ID = OA3NF_GL_BALANCES_CDC.FINANCIAL_PLAN_ID;

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR
(
  ACTUAL_FLAG, 
  BEGIN_BALANCE_CR, 
  BEGIN_BALANCE_CR_BEQ, 
  BEGIN_BALANCE_CR_BEQ_CORR, 
  BEGIN_BALANCE_CR_CORR, 
  BEGIN_BALANCE_DR, 
  BEGIN_BALANCE_DR_BEQ, 
  BEGIN_BALANCE_DR_BEQ_CORR, 
  BEGIN_BALANCE_DR_CORR, 
  CHART_OF_ACCOUNT_ID, 
  CURRENCY_CD, 
  ENCUMBRANCE_TYPE_ID, 
  FINANCIAL_PLAN_ID, 
  GL_PERIOD_ID, 
  LAST_UPDATE_DTTM, 
  PERIOD_NET_CR, 
  PERIOD_NET_CR_BEQ, 
  PERIOD_NET_CR_BEQ_CORR, 
  PERIOD_NET_CR_CORR, 
  PERIOD_NET_DR, 
  PERIOD_NET_DR_BEQ, 
  PERIOD_NET_DR_BEQ_CORR, 
  PERIOD_NET_DR_CORR, 
  PERIOD_TO_DATE_ADB, 
  PERIOD_YEAR, 
  PROJECT_TO_DATE_CR, 
  PROJECT_TO_DATE_CR_BEQ, 
  PROJECT_TO_DATE_DR, 
  PROJECT_TO_DATE_DR_BEQ, 
  QUARTER_TO_DATE_ADB, 
  QUARTER_TO_DATE_CR, 
  QUARTER_TO_DATE_CR_BEQ, 
  QUARTER_TO_DATE_DR, 
  QUARTER_TO_DATE_DR_BEQ, 
  SET_OF_BOOKS_ID, 
  TRANSLATED_FLAG, 
  YEAR_TO_DATE_ADB, 
  PERIOD_NUM, 
  YEAR_TO_DATE_CR_CORR, 
  YEAR_TO_DATE_DR_CORR, 
  YEAR_TO_DATE_NET_CORR, 
  YEAR_TO_DATE_CR_BEQ_CORR, 
  YEAR_TO_DATE_DR_BEQ_CORR, 
  YEAR_TO_DATE_NET_BEQ_CORR
)
SELECT 
  ACTUAL_FLAG, 
  BEGIN_BALANCE_CR, 
  BEGIN_BALANCE_CR_BEQ, 
  BEGIN_BALANCE_CR_BEQ_CORR, 
  BEGIN_BALANCE_CR_CORR, 
  BEGIN_BALANCE_DR, 
  BEGIN_BALANCE_DR_BEQ, 
  BEGIN_BALANCE_DR_BEQ_CORR, 
  BEGIN_BALANCE_DR_CORR, 
  CHART_OF_ACCOUNT_ID, 
  CURRENCY_CD, 
  ENCUMBRANCE_TYPE_ID, 
  FINANCIAL_PLAN_ID, 
  GL_PERIOD_ID, 
  LAST_UPDATE_DTTM, 
  PERIOD_NET_CR, 
  PERIOD_NET_CR_BEQ, 
  PERIOD_NET_CR_BEQ_CORR, 
  PERIOD_NET_CR_CORR, 
  PERIOD_NET_DR, 
  PERIOD_NET_DR_BEQ, 
  PERIOD_NET_DR_BEQ_CORR, 
  PERIOD_NET_DR_CORR, 
  PERIOD_TO_DATE_ADB, 
  PERIOD_YEAR, 
  PROJECT_TO_DATE_CR, 
  PROJECT_TO_DATE_CR_BEQ, 
  PROJECT_TO_DATE_DR, 
  PROJECT_TO_DATE_DR_BEQ, 
  QUARTER_TO_DATE_ADB, 
  QUARTER_TO_DATE_CR, 
  QUARTER_TO_DATE_CR_BEQ, 
  QUARTER_TO_DATE_DR, 
  QUARTER_TO_DATE_DR_BEQ, 
  SET_OF_BOOKS_ID, 
  TRANSLATED_FLAG, 
  YEAR_TO_DATE_ADB, 
  PERIOD_NUM, 
  YEAR_TO_DATE_CR_CORR, 
  YEAR_TO_DATE_DR_CORR, 
  YEAR_TO_DATE_NET_CORR, 
  YEAR_TO_DATE_CR_BEQ_CORR, 
  YEAR_TO_DATE_DR_BEQ_CORR, 
  YEAR_TO_DATE_NET_BEQ_CORR
FROM
  FDW_TABLES_DB.OA3NF_GL_BALANCES_COR_S;

  
 UPDATE glb 

  FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR glb, 

      (SELECT ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 
	FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
  ) lupd,

(SELECT 

 ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, PERIOD_NUM, 
case when period_num between 1 and 3    then 1
							      when period_num between 4 and 6    then 2
							      when period_num between 7 and 9    then 3
							      when period_num between 10 and 12 then 4 end PERIOD_QTR,

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_NET_CR 

 ,COALESCE(SUM(PERIOD_NET_CR_BEQ_CORR) OVER (PARTITION BY 
          ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  
          SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_QTR 
           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) QUARTER_TO_DATE_CR_BEQ_CORR
    ,COALESCE(SUM(PERIOD_NET_DR_BEQ_CORR) OVER (PARTITION BY 
          ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  
          SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_QTR 
           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) QUARTER_TO_DATE_DR_BEQ_CORR          


 ,COALESCE(SUM(PERIOD_NET_CR_CORR) OVER (PARTITION BY 
          ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  
          SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_QTR 
           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) QUARTER_TO_DATE_CR_CORR
    ,COALESCE(SUM(PERIOD_NET_DR_CORR) OVER (PARTITION BY 
          ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  
          SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_QTR 
           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) QUARTER_TO_DATE_DR_CORR  


 FROM  FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR   

--- WHERE /*COALESCE(TRANSLATED_FLAG,'X') IN ('Y','N','X') */  
---case when translated_flag is null then 'X' when translated_flag='' then 'X' else TRANSLATED_FLAG end  
---             IN ('Y','N','X') 
WHERE 
(ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID )
IN
(SELECT ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 
	FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
  ) 
  ) glb_sums 

 SET

   QUARTER_TO_DATE_CR_BEQ     = glb_sums.QUARTER_TO_DATE_CR_BEQ_CORR
   ,QUARTER_TO_DATE_DR_BEQ     = glb_sums.QUARTER_TO_DATE_DR_BEQ_CORR
   ,QUARTER_TO_DATE_CR     = glb_sums.QUARTER_TO_DATE_CR_CORR
   ,QUARTER_TO_DATE_DR     = glb_sums.QUARTER_TO_DATE_DR_CORR

WHERE 

			glb.ACTUAL_FLAG  = glb_sums.ACTUAL_FLAG 

AND glb.CHART_OF_ACCOUNT_ID = glb_sums.CHART_OF_ACCOUNT_ID  

AND glb.CURRENCY_CD  = glb_sums.CURRENCY_CD

AND glb.ENCUMBRANCE_TYPE_ID =  glb_sums.ENCUMBRANCE_TYPE_ID 

AND glb.SET_OF_BOOKS_ID =  glb_sums.SET_OF_BOOKS_ID 

AND glb.FINANCIAL_PLAN_ID = glb_sums.FINANCIAL_PLAN_ID 

AND glb.PERIOD_YEAR =  glb_sums.PERIOD_YEAR 

AND glb.PERIOD_NUM =  glb_sums.PERIOD_NUM 

AND glb.ACTUAL_FLAG  = lupd.ACTUAL_FLAG 

AND glb.CHART_OF_ACCOUNT_ID = lupd.CHART_OF_ACCOUNT_ID  

AND glb.CURRENCY_CD  = lupd.CURRENCY_CD

AND glb.ENCUMBRANCE_TYPE_ID =  lupd.ENCUMBRANCE_TYPE_ID 

AND glb.SET_OF_BOOKS_ID =  lupd.SET_OF_BOOKS_ID 

AND glb.FINANCIAL_PLAN_ID = lupd.FINANCIAL_PLAN_ID 

AND glb.PERIOD_YEAR =  lupd.PERIOD_YEAR; 

UPDATE ytd_glb 

  FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR ytd_glb,

      (SELECT ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 
	FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
  ) lupd,

(SELECT 

 ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, PERIOD_NUM, 

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID, PERIOD_NET_CR, 

 COALESCE(SUM(PERIOD_NET_CR_CORR) OVER (PARTITION BY 

ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_CR_CORR,

 COALESCE(SUM(PERIOD_NET_DR_CORR)  OVER (PARTITION BY 

  ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, 

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_DR_CORR, 

  COALESCE(SUM(PERIOD_NET_DR_CORR - PERIOD_NET_CR_CORR)  OVER (PARTITION BY 

  ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, 

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_NET_CORR 

,COALESCE(SUM(PERIOD_NET_CR_BEQ_CORR) OVER (PARTITION BY 

ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR,  

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_CR_BEQ_CORR,

 COALESCE(SUM(PERIOD_NET_DR_BEQ_CORR)  OVER (PARTITION BY 

  ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, 

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_DR_BEQ_CORR, 

  COALESCE(SUM(PERIOD_NET_DR_BEQ_CORR - PERIOD_NET_CR_BEQ_CORR)  OVER (PARTITION BY 

  ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, 

SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 

           ORDER BY PERIOD_NUM ROWS UNBOUNDED PRECEDING ),0) YEAR_TO_DATE_NET_BEQ_CORR          

 FROM  FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR   
WHERE
(ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID ) IN
      (SELECT ACTUAL_FLAG, CHART_OF_ACCOUNT_ID, CURRENCY_CD, ENCUMBRANCE_TYPE_ID, PERIOD_YEAR, SET_OF_BOOKS_ID, FINANCIAL_PLAN_ID 
	FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC
  )

  ) glb_su
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_COR_S
AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_COR_S ALL;

INSERT into
	FDW_TABLES_DB.OA3NF_GL_BALANCES_COR_S (	
    ACTUAL_FLAG                   
	, BEGIN_BALANCE_CR              
	, BEGIN_BALANCE_CR_BEQ          
	, BEGIN_BALANCE_CR_BEQ_CORR     
	, BEGIN_BALANCE_DR              
	, BEGIN_BALANCE_DR_BEQ          
	, BEGIN_BALANCE_DR_BEQ_CORR     
	, CHART_OF_ACCOUNT_ID           
	, CURRENCY_CD                   
	, ENCUMBRANCE_TYPE_ID           
	, FINANCIAL_PLAN_ID             
	, GL_PERIOD_ID                  
	, LAST_UPDATE_DTTM              
	, PERIOD_NET_CR                 
	, PERIOD_NET_CR_BEQ             
	, PERIOD_NET_CR_BEQ_CORR        
	, PERIOD_NET_DR                 
	, PERIOD_NET_DR_BEQ             
	, PERIOD_NET_DR_BEQ_CORR        
	, PERIOD_TO_DATE_ADB            
	, PERIOD_YEAR                   
	, PROJECT_TO_DATE_CR            
	, PROJECT_TO_DATE_CR_BEQ        
	, PROJECT_TO_DATE_DR            
	, PROJECT_TO_DATE_DR_BEQ        
	, QUARTER_TO_DATE_ADB           
	, QUARTER_TO_DATE_CR            
	, QUARTER_TO_DATE_CR_BEQ        
	, QUARTER_TO_DATE_DR            
	, QUARTER_TO_DATE_DR_BEQ        
	, SET_OF_BOOKS_ID               
	, TRANSLATED_FLAG               
	, YEAR_TO_DATE_ADB              
	, BEGIN_BALANCE_CR_CORR         
	, BEGIN_BALANCE_DR_CORR         
	, PERIOD_NET_CR_CORR            
	, PERIOD_NET_DR_CORR
  , PERIOD_NUM /*CBS*/
	, QUARTER_TO_DATE_CR_CORR            
	, QUARTER_TO_DATE_CR_BEQ_CORR   )
SELECT
	dt4.ACTUAL_FLAG                   
	, BEGIN_BALANCE_CR              
	, BEGIN_BALANCE_CR_BEQ          
	, BEGIN_BALANCE_CR_BEQ_CORR     
	, BEGIN_BALANCE_DR              
	, BEGIN_BALANCE_DR_BEQ          
	, BEGIN_BALANCE_DR_BEQ_CORR     
	, dt4.CHART_OF_ACCOUNT_ID           
	, dt4.CURRENCY_CD                   
	, dt4.ENCUMBRANCE_TYPE_ID           
	, dt4.FINANCIAL_PLAN_ID             
	, GL_PERIOD_ID                  
	, LAST_UPDATE_DTTM              
	, PERIOD_NET_CR                 
	, PERIOD_NET_CR_BEQ             
	, PERIOD_NET_CR_BEQ_CORR        
	, PERIOD_NET_DR                 
	, PERIOD_NET_DR_BEQ             
	, PERIOD_NET_DR_BEQ_CORR        
	, PERIOD_TO_DATE_ADB            
	, dt4.PERIOD_YEAR                   
	, PROJECT_TO_DATE_CR            
	, PROJECT_TO_DATE_CR_BEQ        
	, PROJECT_TO_DATE_DR            
	, PROJECT_TO_DATE_DR_BEQ        
	, QUARTER_TO_DATE_ADB           
	, QUARTER_TO_DATE_CR            
	, QUARTER_TO_DATE_CR_BEQ        
	, QUARTER_TO_DATE_DR            
	, QUARTER_TO_DATE_DR_BEQ        
	, dt4.SET_OF_BOOKS_ID               
	, TRANSLATED_FLAG               
	, YEAR_TO_DATE_ADB              
	, BEGIN_BALANCE_CR_CORR         
	, BEGIN_BALANCE_DR_CORR         
	, PERIOD_NET_CR_CORR            
	, PERIOD_NET_DR_CORR 
  , PERIOD_NUM /*CBS*/ 
	, QUARTER_TO_DATE_CR_CORR            
	, QUARTER_TO_DATE_CR_BEQ_CORR            
FROM
(	
/*Start of DT4*/
SELECT
		NFB2.Actual_Flag
		, NFB2.BEGIN_BALANCE_CR /*OV */
		/*BR200 - correct the Begin_Balances_CR_BEQ*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.BEGIN_BALANCE_CR - dt2.Sum_BEGIN_BALANCE_CR_BEQ)
			ELSE
				NFB2.BEGIN_BALANCE_CR	
		END   (Named BEGIN_BALANCE_CR_CORR)
		, NFB2.BEGIN_BALANCE_CR_BEQ  /*OV*/
		/*BR400 - source the BEGIN_BALANCE_CR_BEQ from the Sum_CRCT_BEGIN_BALANCE_CR*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN BEGIN_BALANCE_CR_CORR 
			ELSE
				/*dt2.Sum_BEGIN_BALANCE_CR_BEQ	*/
				/*fix 2008-02-19*/
				BEGIN_BALANCE_CR_BEQ
		END   (Named BEGIN_BALANCE_CR_BEQ_CORR)

		, NFB2.BEGIN_BALANCE_DR /*OV BEGIN_BALANCE_DR*/
		, NFB2.BEGIN_BALANCE_DR_BEQ  /*OV*/
		/*BR200 - correct the Begin_Balances_DR_BEQ*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.BEGIN_BALANCE_DR - dt2.Sum_BEGIN_BALANCE_DR_BEQ)
			ELSE
				NFB2.BEGIN_BALANCE_DR	
		END   (Named BEGIN_BALANCE_DR_CORR)

		/*BR400 - source the BEGIN_BALANCE_DR_BEQ from the CRCT_BEGIN_BALANCE_DR*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				/*dt2.Sum_BEGIN_BALANCE_DR_BEQ */
				/*fix 2008-02-19*/
				THEN BEGIN_BALANCE_DR_CORR
			ELSE
				NFB2.BEGIN_BALANCE_DR_BEQ	
		END   (Named BEGIN_BALANCE_DR_BEQ_CORR)

		, NFB2.CHART_OF_ACCOUNT_ID
		, NFB2.CURRENCY_CD
		, NFB2.ENCUMBRANCE_TYPE_ID
		, NFB2.FINANCIAL_PLAN_ID
		, NFB2.GL_PERIOD_ID
		, NFB2.LAST_UPDATE_DTTM
		, NFB2.PERIOD_NET_CR   /* OV */		
		, NFB2.PERIOD_NET_CR_BEQ /*OV */
		/*BR300 */
		/*correct the PERIOD_NET_CR*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.PERIOD_NET_CR - dt2.Sum_PERIOD_NET_CR_BEQ ) 
			ELSE
				NFB2.PERIOD_NET_CR	
		END   (Named PERIOD_NET_CR_CORR)

		/*BR500 - source the Period_Net_CR_BEQ_CORR  from the Period_Net_CR_BEQ for corrected records*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				/*THEN dt2.Sum_PERIOD_NET_CR_BEQ*/
				/*fix 20080219*/
				THEN PERIOD_NET_CR_CORR
			ELSE
				NFB2.Period_Net_CR_BEQ	
		END   (Named Period_Net_CR_BEQ_CORR)

		, NFB2.PERIOD_NET_DR   /* OV */	
		, NFB2.PERIOD_NET_DR_BEQ /*OV */
		
		/*BR300 - correct the BEGIN_BALANCE_DR_BEQ*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.PERIOD_NET_DR - dt2.Sum_PERIOD_NET_DR_BEQ ) 
			ELSE
				NFB2.PERIOD_NET_DR	
		END   (Named PERIOD_NET_DR_CORR)

		/*BR500 - source the Period_Net_DR_BEQ_CORR  from the Period_Net_DR_BEQ*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN 
				/*dt2.Sum_PERIOD_NET_DR_BEQ*/
				/*fix 20080219*/
				PERIOD_NET_DR_CORR
			ELSE
				NFB2.Period_Net_DR_BEQ
		END   (Named Period_Net_DR_BEQ_CORR)

		, NFB2.PERIOD_TO_DATE_ADB
		, NFB2.PERIOD_YEAR
		
		, NFB2.PROJECT_TO_DATE_CR
		, NFB2.PROJECT_TO_DATE_CR_BEQ
		, NFB2.PROJECT_TO_DATE_DR
		, NFB2.PROJECT_TO_DATE_DR_BEQ
		
		, NFB2.QUARTER_TO_DATE_ADB
		, NFB2.QUARTER_TO_DATE_CR
		, NFB2.QUARTER_TO_DATE_CR_BEQ
		, NFB2.QUARTER_TO_DATE_DR
		, NFB2.QUARTER_TO_DATE_DR_BEQ
		
		, NFB2.SET_OF_BOOKS_ID
		, NFB2.TRANSLATED_FLAG
		, NFB2.YEAR_TO_DATE_ADB

		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  then 'Y' 
		ELSE 'N'
		END  (Named Balance_Corr_F)

		, NFB2.PERIOD_NUM /*CBS*/
		/*CBS - correct the QUARTER_TO_DATE_CR*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.QUARTER_TO_DATE_CR - dt2.Sum_QUARTER_TO_DATE_CR ) 
			ELSE
				NFB2.QUARTER_TO_DATE_CR	
		END   (Named QUARTER_TO_DATE_CR_CORR)


		/*CBS - correct the QUARTER_TO_DATE_CR_BEQ*/
		, CASE 
			WHEN NFB2.CURRENCY_CD = dt3.Currency_code  
				THEN (NFB2.QUARTER_TO_DATE_CR - dt2.Sum_QUARTER_TO_DATE_CR_BEQ ) 
			ELSE
				NFB2.QUARTER_TO_DATE_CR	
		END   (Named QUARTER_TO_DATE_CR_BEQ_CORR)

FROM 
	FDW_TABLES_DB.OA3NF_GL_BALANCES_ 		NFB2
INNER  JOIN
	/*get the SOB Reporting SOB */
		(
		/*this dt serves two purposes*/
		/*1. provide the description of the SOB*/
		/*2. provide the relationship between the primary  book and the MRC book */ 
		SELECT
			SOB1.Set_of_books_id
			, SOB1.Currency_cd as Currency_code
			, SOB1.Set_of_Books_Name
			--, SOB1.REFOA3NF_SET_OF_BOOKS_Id (Named ReportingOA3NF_SET_OF_BOOKS_Id)
		FROM
			FDW_TABLES_DB.OA3NF_SET_OF_BOOKS  SOB1
			where SOB1.Set_of_books_name  in ('CBS Studios USD','CBS Distribution USD')  -- Added By 
		)  dt3
ON NFB2.SET_OF_BOOKS_ID = dt3.Set_of_books_id
INNER JOIN
/*start of dt2*/
( 
/*BR100*/
/*calc the correct DR and CR amount in the currency of the SOB */
/*this will be used to calc the corrent balance for both CR and DR of the SOB currency */
SELECT
		 NFB1.CHART_OF_ACCOUNT_ID
		, NFB1.SET_OF_BOOKS_ID
		, NFB1.GL_PERIOD_ID
/* FIX FOR BUDGETS */
		,NFB1.FINANCIAL_PLAN_ID
/* FIX FOR BUDGETS */
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE NFB1.BEGIN_BALANCE_CR_BEQ END) (Named sum_BEGIN_BALANCE_CR_BEQ) -- Added Case when statement By 
 		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE NFB1.BEGIN_BALANCE_DR_BEQ END ) (Named sum_BEGIN_BALANCE_DR_BEQ)
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE NFB1.PERIOD_NET_CR_BEQ END ) (Named sum_PERIOD_NET_CR_BEQ)
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE NFB1.PERIOD_NET_DR_BEQ END ) (Named sum_PERIOD_NET_DR_BEQ)
		/*new 20080207 */
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE QUARTER_TO_DATE_CR_BEQ END )  (Named sum_QUARTER_TO_DATE_CR_BEQ)
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE QUARTER_TO_DATE_DR_BEQ END )  (Named sum_QUARTER_TO_DATE_DR_BEQ)
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE PROJECT_TO_DATE_CR_BEQ END ) (Named sum_PROJECT_TO_DATE_CR_BEQ )
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE PROJECT_TO_DATE_DR_BEQ END ) (Named sum_PROJECT_TO_DATE_DR_BEQ )
		, sum(case when NFB1.Currency_cd = 'USD' Then '0' ELSE QUARTER_TO_DATE_CR END )  (Named sum_QUARTER_TO_DATE_CR)
FROM 
	FDW_TABLES_DB.OA3NF_GL_BALANCES_ 		NFB1
INNER JOIN
	/*get the SOB Reporting SOB */
		(
		/*this dt serves two purposes*/
		/*1. provide the description of the SOB*/
		/*2. provide the relationship between the primary  book and the MRC book */ 
		SELECT
			SOB1.Set_of_books_id
			, SOB1.Currency_cd as Currency_code
			, SOB1.Set_of_Books_Name
			--, SOB1.REFOA3NF_SET_OF_BOOKS_Id (Named ReportingOA3NF_SET_OF_BOOKS_Id)
		FROM
			FDW_TABLES_DB.OA3NF_SET_OF_BOOKS  SOB1
			where SOB1.Set_of_books_name  in ('CBS Studios USD','CBS Distribution USD')  -- Added By  
		)  dt1

ON NFB1.SET_OF_BOOKS_ID = dt1.Set_of_books_id 
--AND NFB1.SET_OF_BOOKS_ID in (2248,2249) --  Comment
--and NFB1.currency_cd <> dt1.Currency_code --  Comment (Join Not Required)
Group by 1,2,3
/* FIX FOR BUDGETS */
,4
/* FIX FOR BUDGETS */
) as dt2

ON dt2.Chart_Of_Account_Id = NFB2.Chart_Of_Account_Id
AND dt2.Set_Of_Books_Id =  NFB2.Set_Of_Books_Id
AND dt2.GL_Period_Id = NFB2.GL_Period_Id
/* FIX FOR BUDGETS */
AND dt2.financial_plan_id = nfb2.financial_plan_id
/* FIX FOR BUDGETS */
/* Correction requried - ie currency equal sob currency*/
WHERE	Balance_Corr_F = 'Y' /*only insert rows that need to corrected*/
) as dt4
/* CDC Update */
, 
FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC 
WHERE dt4.ACTUAL_FLAG  = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.ACTUAL_FLAG 
AND        dt4.CHART_OF_ACCOUNT_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.CHART_OF_ACCOUNT_ID 
AND        dt4.CURRENCY_CD = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.CURRENCY_CD 
AND        dt4.ENCUMBRANCE_TYPE_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.ENCUMBRANCE_TYPE_ID 
AND        dt4.PERIOD_YEAR = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.PERIOD_YEAR 
AND        dt4.SET_OF_BOOKS_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.SET_OF_BOOKS_ID 
AND        dt4.FINANCIAL_PLAN_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC.FINANCIAL_PLAN_ID;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_C_MRC
AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_C_MRC ALL;

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_C_MRC
( 
   BEGIN_BALANCE_CR_BEQ_CORR
   ,BEGIN_BALANCE_DR_BEQ_CORR
   ,CHART_OF_ACCOUNT_ID
   ,CURRENCY_CD
   ,CURRENCY_CD_MRC_BASE
   ,GL_PERIOD_ID
   ,PERIOD_NET_CR_BEQ_CORR
   ,PERIOD_NET_DR_BEQ_CORR
   ,SET_OF_BOOKS_ID
) 
SELECT
   OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID
   ,OA3NF_GL_BALANCES_CORR.CURRENCY_CD
   ,OA3NF_SET_OF_BOOKS.CURRENCY_CD
   ,OA3NF_GL_BALANCES_CORR.GL_PERIOD_ID
   ,OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.SET_OF_BOOKS_ID
 FROM 
   FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR
   ,FDW_TABLES_DB.OA3NF_SET_OF_BOOKS
WHERE
   OA3NF_GL_BALANCES_CORR.SET_OF_BOOKS_ID = OA3NF_SET_OF_BOOKS.SET_OF_BOOKS_ID
/* Added to filter only CTD and Studio data - 2017-02-02 */
   AND OA3NF_SET_OF_BOOKS.Set_of_books_name  in ('CBS Studios USD','CBS Distribution USD');
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_C_MRC_HS  (period_yr VARCHAR(100))
AS (

/*DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_C_MRC_HIST WHERE SET_OF_BOOKS_ID NOT IN (1002);*/ 

INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_C_MRC_HIST
( 
   BEGIN_BALANCE_CR_BEQ_CORR
   ,BEGIN_BALANCE_DR_BEQ_CORR
   ,CHART_OF_ACCOUNT_ID
   ,CURRENCY_CD
   ,CURRENCY_CD_MRC_BASE
   ,GL_PERIOD_ID
   ,PERIOD_NET_CR_BEQ_CORR
   ,PERIOD_NET_DR_BEQ_CORR
   ,SET_OF_BOOKS_ID
) 
SELECT
   OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_CR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.BEGIN_BALANCE_DR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.CHART_OF_ACCOUNT_ID
   ,OA3NF_GL_BALANCES_CORR.CURRENCY_CD
   ,OA3NF_SET_OF_BOOKS.CURRENCY_CD
   ,OA3NF_GL_BALANCES_CORR.GL_PERIOD_ID
   ,OA3NF_GL_BALANCES_CORR.PERIOD_NET_CR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.PERIOD_NET_DR_BEQ_CORR
   ,OA3NF_GL_BALANCES_CORR.SET_OF_BOOKS_ID
 FROM 
   FDW_TABLES_DB.OA3NF_GL_BALANCES_CORR_HIST
   ,FDW_TABLES_DB.OA3NF_SET_OF_BOOKS
WHERE
   OA3NF_GL_BALANCES_CORR.SET_OF_BOOKS_ID = OA3NF_SET_OF_BOOKS.SET_OF_BOOKS_ID
/* Added to filter only CTD and Studio data - 2017-02-02 */
   AND OA3NF_SET_OF_BOOKS.Set_of_books_name  in ('CBS Studios USD','CBS Distribution USD');
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_HIST  (period_yr VARCHAR(100))
AS (
/*
DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_BALANCES_s
where
   FDW_STAGE_DB.LOAD_GL_BALANCES_s.ACTUAL_FLAG = FDW_TABLES_DB.OA3NF_GL_BALANCES_.ACTUAL_FLAG
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.CHART_OF_ACCOUNT_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.CHART_OF_ACCOUNT_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.CURRENCY_CD = FDW_TABLES_DB.OA3NF_GL_BALANCES_.CURRENCY_CD
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.ENCUMBRANCE_TYPE_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.ENCUMBRANCE_TYPE_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.GL_PERIOD_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.GL_PERIOD_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.SET_OF_BOOKS_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.SET_OF_BOOKS_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.FINANCIAL_PLAN_ID = FDW_TABLES_DB.OA3NF_GL_BALANCES_.FINANCIAL_PLAN_ID
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.TRANSLATED_FLAG_CD = FDW_TABLES_DB.OA3NF_GL_BALANCES_.TRANSLATED_FLAG_CD
   AND FDW_STAGE_DB.LOAD_GL_BALANCES_s.PERIOD_NUM = FDW_TABLES_DB.OA3NF_GL_BALANCES_.PERIOD_NUM
);
*/
INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_HIST ( 
   ACTUAL_FLAG,
   BEGIN_BALANCE_CR,
   BEGIN_BALANCE_DR,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CD,
   ENCUMBRANCE_TYPE_ID,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NET_CR,
   PERIOD_NET_DR,
   PERIOD_TO_DATE_ADB,
   PERIOD_YEAR,
   PROJECT_TO_DATE_CR,
   PROJECT_TO_DATE_DR,
   QUARTER_TO_DATE_ADB,
   QUARTER_TO_DATE_CR,
   QUARTER_TO_DATE_DR,
   SET_OF_BOOKS_ID,
   TRANSLATED_FLAG,
   YEAR_TO_DATE_ADB,
   FINANCIAL_PLAN_ID,
   BEGIN_BALANCE_CR_BEQ,
   BEGIN_BALANCE_DR_BEQ,
   PERIOD_NET_CR_BEQ,
   PERIOD_NET_DR_BEQ,
   PROJECT_TO_DATE_CR_BEQ,
   PROJECT_TO_DATE_DR_BEQ,
   QUARTER_TO_DATE_CR_BEQ,
   QUARTER_TO_DATE_DR_BEQ,
   GL_BUDGET_ID,
   TRANSLATED_FLAG_CD,
   TEMPLATE_ID,
   PERIOD_NUM,
   YEAR_TO_DATE_CR,
   YEAR_TO_DATE_DR,
   YEAR_TO_DATE_NET_ACTIVITY ) 
SELECT 
   ACTUAL_FLAG,
   BEGIN_BALANCE_CR,
   BEGIN_BALANCE_DR,
   CHART_OF_ACCOUNT_ID,
   CURRENCY_CD,
   ENCUMBRANCE_TYPE_ID,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NET_CR,
   PERIOD_NET_DR,
   PERIOD_TO_DATE_ADB,
   PERIOD_YEAR,
   PROJECT_TO_DATE_CR,
   PROJECT_TO_DATE_DR,
   QUARTER_TO_DATE_ADB,
   QUARTER_TO_DATE_CR,
   QUARTER_TO_DATE_DR,
   SET_OF_BOOKS_ID,
   TRANSLATED_FLAG,
   YEAR_TO_DATE_ADB,
   FINANCIAL_PLAN_ID,
   BEGIN_BALANCE_CR_BEQ,
   BEGIN_BALANCE_DR_BEQ,
   PERIOD_NET_CR_BEQ,
   PERIOD_NET_DR_BEQ,
   PROJECT_TO_DATE_CR_BEQ,
   PROJECT_TO_DATE_DR_BEQ,
   QUARTER_TO_DATE_CR_BEQ,
   QUARTER_TO_DATE_DR_BEQ,
   GL_BUDGET_ID,
   TRANSLATED_FLAG_CD,
   TEMPLATE_ID,
   PERIOD_NUM,
   YEAR_TO_DATE_CR,
   YEAR_TO_DATE_DR,
   YEAR_TO_DATE_NET_ACTIVITY
FROM FDW_STAGE_DB.LOAD_GL_BALANCES_s
WHERE GL_PERIOD_ID IN (:period_yr ) ;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_DAYS AS(

DELETE FROM FDW_TABLES_DB.OA3NF_GL_DAYS;

INSERT INTO FDW_TABLES_DB.OA3NF_GL_DAYS
( 
   ADJUSTMENT_PERIOD_FLAG
   ,GL_PERIOD_ID
   ,PERIOD_NAME
   ,PERIOD_SET_NAME
   ,PERIOD_TYPE
   ,GL_DATE
   ,END_DATE
   ,START_DATE
) 
SELECT distinct 
   OA3NF_GL_PERIODS.ADJUSTMENT_PERIOD_FLAG
   ,COALESCE(CAST(OA3NF_GL_PERIODS.GL_PERIOD_ID AS VARCHAR(256)), 'NA')
   ,OA3NF_GL_PERIODS.PERIOD_NAME
   ,OA3NF_GL_PERIODS.PERIOD_SET_NAME
   ,OA3NF_GL_PERIODS.PERIOD_TYPE
   ,CALENDAR.CALENDAR_DATE
   ,OA3NF_GL_PERIODS.END_DATE
   ,OA3NF_GL_PERIODS.START_DATE
 FROM 
   SYS_CALENDAR.CALENDAR
   ,FDW_TABLES_DB.OA3NF_GL_PERIODS
WHERE
   CALENDAR.CALENDAR_DATE
	BETWEEN OA3NF_GL_PERIODS.START_DATE
	AND     OA3NF_GL_PERIODS.END_DATE;
);
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_DETAIL_JRNL AS (
INSERT INTO fdw_tables_Db.OA3NF_GL_DETAIL_JRNL_CTD 
    select 
     distinct          (
    CASE
        WHEN ( "OASEM_GL_DETAIL_F_DETAIL"."LEG_JOURNAL_ID" IS NULL OR "OASEM_GL_DETAIL_F_DETAIL"."LEG_JOURNAL_ID" IS NULL ) THEN (
    CASE
        WHEN SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."HEADER_NAME" , 1 , 8 ) = 'Reverses' THEN SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."HEADER_NAME" , 11 , 9 ) || 'R'
        WHEN "OASEM_GL_DETAIL_F_DETAIL"."BATCH_SOURCE_NAME" = 'Payables' THEN 'APA' || SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."BATCH_NAME" , 16 , 7 )
        WHEN "OASEM_GL_DETAIL_F_DETAIL"."BATCH_SOURCE_NAME" = 'RVL' THEN 'RVL' || SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."BATCH_NAME" , CHARACTER_LENGTH( TRIM(TRAILING ' '
    FROM TRIM ( TRAILING
    FROM "OASEM_GL_DETAIL_F_DETAIL"."BATCH_NAME" ) )) - 7 ) || '-' || SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."HEADER_NAME" , 14 , 3 )
        WHEN "OASEM_GL_DETAIL_F_DETAIL"."BATCH_SOURCE_NAME" = 'MassAllocation' THEN 'MA' || SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."BATCH_NAME" , 5 , 7 ) ELSE SUBSTR ( "OASEM_GL_DETAIL_F_DETAIL"."HEADER_NAME" , 1 , 10 )
    END  ) ELSE "OASEM_GL_DETAIL_F_DETAIL"."LEG_JOURNAL_ID"
    END  )  , SET_OF_BOOKS_KEY
    from fdw_ctd_sem_db.OASEM_GL_DETAIL_F OASEM_GL_DETAIL_F_DETAIL;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_FIN_PLAN AS (
DELETE FROM FDW_TABLES_DB.OA3NF_GL_FIN_PLAN
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_FIN_PLAN_s
where
   LOAD_GL_FIN_PLAN_s.FINANCIAL_PLAN_ID = OA3NF_GL_FIN_PLAN.FINANCIAL_PLAN_ID
   AND
   LOAD_GL_FIN_PLAN_s.SET_OF_BOOKS_ID = OA3NF_GL_FIN_PLAN.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_FIN_PLAN ( 
   FINANCIAL_PLAN_DESC,
   FINANCIAL_PLAN_ID,
   FINANCIAL_PLAN_NAME,
   FINANCIAL_PLAN_REVISION_NUM,
   FINANCIAL_PLAN_STATUS_CD,
   LAST_UPDATE_DTTM,
SET_OF_BOOKS_ID   ) 
SELECT 
   FINANCIAL_PLAN_DESC,
   FINANCIAL_PLAN_ID,
   FINANCIAL_PLAN_NAME,
   FINANCIAL_PLAN_REVISION_NUM,
   FINANCIAL_PLAN_STATUS_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_GL_FIN_PLAN_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_HIST_RATES AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_HIST_RATES;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_HIST_RATES
(
				PERIOD_NAME,
				BUDGET_TYPE,
				PRODUCT_ID,
				RATE_TYPE1,
				RATE_TYPE2,
				RATE_TYPE3,
				RATE_TYPE4,
				RATE_TYPE5,
				RATE_TYPE6,
				RATE_TYPE7,
				RATE_TYPE8,
				RATE_TYPE9,
				RATE_TYPE10,
				RATE_TYPE11,
				RATE_TYPE12,
				RATE_TYPE13,
				RATE_TYPE14,
				RATE_TYPE15,
				FLOW_CODE,
				CREATED_BY,
				CREATION_DTTM,
				LAST_UPDATED_BY,
				LAST_UPDATED_DTTM,
				PRODUCT_ID_VAR,
				SOP_CAL,
				REQUEST_ID
                )
                
SELECT 
                PERIOD_NAME,
				BUDGET_TYPE,
				PRODUCT_ID,
				RATE_TYPE1,
				RATE_TYPE2,
				RATE_TYPE3,
				RATE_TYPE4,
				RATE_TYPE5,
				RATE_TYPE6,
				RATE_TYPE7,
				RATE_TYPE8,
				RATE_TYPE9,
				RATE_TYPE10,
				RATE_TYPE11,
				RATE_TYPE12,
				RATE_TYPE13,
				RATE_TYPE14,
				RATE_TYPE15,
				FLOW_CODE,
				CREATED_BY,
				CREATION_DTTM,
				LAST_UPDATED_BY,
				LAST_UPDATED_DTTM,
				PRODUCT_ID_VAR,
				SOP_CAL,
				REQUEST_ID
FROM FDW_STAGE_DB.LOAD_GL_HIST_RATES_s;
);
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_HIST_RATES_STU AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_HIST_RATES_STU;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_HIST_RATES_STU
(
    PERIOD_NAME,
    BUDGET_TYPE,
    PRODUCT_ID,
GL_BUDGET_KEY,
    RATE_TYPE1,
    RATE_TYPE2,
    RATE_TYPE3,
    RATE_TYPE4,
    RATE_TYPE5,
    RATE_TYPE6,
    RATE_TYPE7,
    RATE_TYPE8,
    RATE_TYPE9,
    DIVISION_OWNER,
    RATE_TYPE11,
    RATE_TYPE12,
    RATE_TYPE13,
    RATE_TYPE14,
    RATE_TYPE15,
    FLOW_CODE,
    CREATED_BY,
    CREATION_DTTM,
    LAST_UPDATED_BY,
    LAST_UPDATED_DTTM,
    PRODUCT_ID_VAR,
    SOP_CAL,
    REQUEST_ID
                )
SELECT                
           PERIOD_NAME,
    BUDGET_TYPE,
    PRODUCT_ID,
'99999' AS GL_BUDGET_KEY,
    RATE_TYPE1,
    RATE_TYPE2,
    RATE_TYPE3,
    RATE_TYPE4,
    RATE_TYPE5,
    RATE_TYPE6,
    RATE_TYPE7,
    RATE_TYPE8,
    RATE_TYPE9,
    DIVISION_OWNER,
    RATE_TYPE11,
    RATE_TYPE12,
    RATE_TYPE13,
    RATE_TYPE14,
    RATE_TYPE15,
    FLOW_CODE,
    CREATED_BY,
    CREATION_DTTM,
    LAST_UPDATED_BY,
    LAST_UPDATED_DTTM,
    PRODUCT_ID_VAR,
    SOP_CAL,
    REQUEST_ID
FROM FDW_STAGE_DB.LOAD_GL_HIST_RATES_STU_s;

update a
from FDW_tables_DB.OA3NF_GL_HIST_RATES_STU as a,
fdw_tables_DB.OA3NF_GL_FIN_PLAN as b
set gl_budget_key =b.FINANCIAL_PLAN_ID
where b.set_of_books_id=2248 and (case when a.BUDGET_TYPE='ACT' then 'Actual' else a.BUDGET_TYPE end)=b.FINANCIAL_PLAN_NAME;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_IMP_REFERN AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_IMP_REFERN
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_IMP_REFERN_s
where
   LOAD_GL_IMP_REFERN_s.JE_HEADER_ID = OA3NF_GL_IMP_REFERN.JE_HEADER_ID
   AND  LOAD_GL_IMP_REFERN_s.JE_LINE_NUM = OA3NF_GL_IMP_REFERN.JE_LINE_NUM
   AND  LOAD_GL_IMP_REFERN_s.LEDGER_ID = OA3NF_GL_IMP_REFERN.LEDGER_ID
);
INSERT INTO FDW_TABLES_DB.OA3NF_GL_IMP_REFERN ( 
JE_BATCH_ID,                 
JE_HEADER_ID,                
JE_LINE_NUM,                 
LAST_UPDATE_DATE,            
LAST_UPDATED_BY,              
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_LOGIN,           
REFERENCE_1,                  
REFERENCE_2,                 
REFERENCE_3,                  
REFERENCE_4,                 
REFERENCE_5,                  
REFERENCE_6,                 
REFERENCE_7,                  
REFERENCE_8,                 
REFERENCE_9,                 
REFERENCE_10,                
SUBLEDGER_DOC_SEQUENCE_ID,    
SUBLEDGER_DOC_SEQUENCE_VALUE, 
GL_SL_LINK_ID,                
GL_SL_LINK_TABLE,
LEDGER_ID) 
SELECT 
JE_BATCH_ID,                 
JE_HEADER_ID,                
JE_LINE_NUM,                 
LAST_UPDATE_DATE,            
LAST_UPDATED_BY,              
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_LOGIN,           
REFERENCE_1,                  
REFERENCE_2,                 
REFERENCE_3,                  
REFERENCE_4,                 
REFERENCE_5,                  
REFERENCE_6,                 
REFERENCE_7,                  
REFERENCE_8,                 
REFERENCE_9,                 
REFERENCE_10,                
SUBLEDGER_DOC_SEQUENCE_ID,    
SUBLEDGER_DOC_SEQUENCE_VALUE, 
GL_SL_LINK_ID,                
GL_SL_LINK_TABLE,
LEDGER_ID               
FROM FDW_STAGE_DB.LOAD_GL_IMP_REFERN_s;
);
--OA3NF_GL_IMP_REF_LINK_INV
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_IMP_REF_LINK_INV AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_IMP_REF_LINK_INV ALL;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_IMP_REF_LINK_INV
(
                 JE_HEADER_ID, 
                 JE_LINE_NUM, 
     GL_SL_LINK_ID, 
     GL_SL_LINK_TABLE,
           REFERENCE_6, 
     CONCATENATED_SEGMENTS, 
     SOURCE_DISTRIBUTION_TYPE,
           ENTITY_CODE, 
     CREATION_DATE, 
     LAST_UPDATE_DATE, 
     LEDGER_ID, 
     PAYMENT_METHOD_CODE,
           CODE_COMBINATION_ID
                )
                
SELECT JE_HEADER_ID, 
                 JE_LINE_NUM, 
     GL_SL_LINK_ID, 
     GL_SL_LINK_TABLE,
           REFERENCE_6, 
     CONCATENATED_SEGMENTS, 
     SOURCE_DISTRIBUTION_TYPE,
           ENTITY_CODE, 
     CREATION_DATE, 
     LAST_UPDATE_DATE, 
     LEDGER_ID, 
     PAYMENT_METHOD_CODE,
           CODE_COMBINATION_ID
FROM FDW_STAGE_DB.LOAD_GL_IMP_REF_LINK_INV_s;
);
--OA3NF_GL_IMP_REF_LINK_PMT
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_IMP_REF_LINK_PMT AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_IMP_REF_LINK_PMT ALL;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_IMP_REF_LINK_PMT
(
                 JE_HEADER_ID, 
                 JE_LINE_NUM, 
     GL_SL_LINK_ID, 
     GL_SL_LINK_TABLE,
           REFERENCE_6, 
     CONCATENATED_SEGMENTS, 
     SOURCE_DISTRIBUTION_TYPE,
           ENTITY_CODE, 
     PAYMENT_HIST_DIST_ID, 
     INVOICE_PAYMENT_ID, 
     CREATION_DATE,
           LAST_UPDATE_DATE, 
     LEDGER_ID, 
     CODE_COMBINATION_ID, 
     CHECK_BASE_AMOUNT,
           CHECK_CLEARED_BASE_AMOUNT, 
     CHK_CURRENCY_CODE, 
     CHECK_DATE, 
     DOC_SEQUENCE_VALUE,
           REMIT_TO_SUPPLIER_NAME, 
     VENDOR_NUMBER, 
     REMIT_TO_SUPPLIER_SITE,
           PAYMENT_BANK_ACCOUNT_NUMBER, 
     PAYMENT_BANK_ACCOUNT_NAME, 
     PAYMENT_METHOD
                )              
SELECT JE_HEADER_ID, 
                 JE_LINE_NUM, 
     GL_SL_LINK_ID, 
     GL_SL_LINK_TABLE,
           REFERENCE_6, 
     CONCATENATED_SEGMENTS, 
     SOURCE_DISTRIBUTION_TYPE,
           ENTITY_CODE, 
     PAYMENT_HIST_DIST_ID, 
     INVOICE_PAYMENT_ID, 
     CREATION_DATE,
           LAST_UPDATE_DATE, 
     LEDGER_ID, 
     CODE_COMBINATION_ID, 
     CHECK_BASE_AMOUNT,
           CHECK_CLEARED_BASE_AMOUNT, 
     CHK_CURRENCY_CODE, 
     CHECK_DATE, 
     DOC_SEQUENCE_VALUE,
           REMIT_TO_SUPPLIER_NAME, 
     VENDOR_NUMBER, 
     REMIT_TO_SUPPLIER_SITE,
           PAYMENT_BANK_ACCOUNT_NUMBER, 
     PAYMENT_BANK_ACCOUNT_NAME, 
     PAYMENT_METHOD
FROM FDW_STAGE_DB.LOAD_GL_IMP_REF_LINK_PMT_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_GL_JE_BATCH

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_BATCH AS ( 
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_BATCH
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_JE_BATCH_s
where
   LOAD_GL_JE_BATCH_s.JE_BATCH_ID = OA3NF_GL_JE_BATCH.JE_BATCH_ID
   AND 
   LOAD_GL_JE_BATCH_s.SET_OF_BOOKS_ID = OA3NF_GL_JE_BATCH.SET_OF_BOOKS_ID);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_BATCH ( 
   JE_BATCH_CREATION_DT,
   JE_BATCH_DESC,
   JE_BATCH_ID,
   JE_BATCH_NAME,
   JE_BATCH_POSTED_DTTM,
   JE_BATCH_POSTING_STATUS_CD,
   JE_BATCH_TYPE_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID,
   JE_BATCH_ACCOUNTING_DTTM,
   POSTED_BY) 
SELECT 
   JE_BATCH_CREATION_DT,
   JE_BATCH_DESC,
   JE_BATCH_ID,
   JE_BATCH_NAME,
   JE_BATCH_POSTED_DTTM,
   JE_BATCH_POSTING_STATUS_CD,
   JE_BATCH_TYPE_CD,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID,
   JE_BATCH_ACCOUNTING_DTTM,
   POSTED_BY
FROM FDW_STAGE_DB.LOAD_GL_JE_BATCH_s;

DELETE from FDW_TABLES_DB.OA3NF_GL_JE_BATCH where OA3NF_GL_JE_BATCH.JE_BATCH_POSTING_STATUS_CD <> 'P'
and not exists 
(select '1' from FDW_TABLES_DB.OA3NF_GL_JE_BATCH_UNP u
where OA3NF_GL_JE_BATCH.JE_BATCH_ID = u.JE_BATCH_ID
AND OA3NF_GL_JE_BATCH.SET_OF_BOOKS_ID = u.SET_OF_BOOKS_ID)
AND OA3NF_GL_JE_BATCH.JE_BATCH_ID <> -99999
 AND OA3NF_GL_JE_BATCH.SET_OF_BOOKS_ID<>1002 
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_BATCH_UNP AS (

DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_BATCH_UNP WHERE SET_OF_BOOKS_ID NOT IN(1002);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_BATCH_UNP
(
		JE_BATCH_ID,               
		JE_BATCH_POSTING_STATUS_CD,
		SET_OF_BOOKS_ID
)
SELECT 
		JE_BATCH_ID,               
		JE_BATCH_POSTING_STATUS_CD,
		SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_GL_JE_BATCH_UNP_s;	   
);
--- Deploy Macro:

--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--- 
--------------------------------------------------------------------------------





--MAC_OA3NF_GL_JE_HEADER

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_HEADER AS (
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_HEADER
WHERE exists
(
select '1'
from 
   fdw_stage_db.LOAD_GL_JE_HEADER_s
where
   LOAD_GL_JE_HEADER_s.JE_HEADER_ID = OA3NF_GL_JE_HEADER.JE_HEADER_ID
   AND
   LOAD_GL_JE_HEADER_s.SET_OF_BOOKS_ID = OA3NF_GL_JE_HEADER.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_HEADER ( 
   CURRENCY_CD,
   JE_BATCH_ID,
   OA_JE_CATEGORY,
   JE_HEADER_CREATE_DT,
   JE_HEADER_DESC,
   JE_HEADER_ID,
   JE_HEADER_NAME,
   JE_HEADER_POSTED_DT,
   OA_JE_SOURCE,
   LAST_UPDATE_DTTM,
   GL_PERIOD_ID,
   SET_OF_BOOKS_ID,
   JE_HEADER_REVERSING_IND,
   JE_HEADER_REVERSE_PERIOD_DTTM,
   JE_HEADER_CONV_DTTM,
   OA_JE_HEADER_TRANS_CURRENCY_CD,
   JE_HEADER_ACCT_PERIOD_DTTM,
   PARENT_JE_HEADER_ID,
   HEADER_POSTING_STATUS_CD,
   CREATION_DATE,
   DATE_CREATED,
   DEFAULT_EFFECTIVE_DATE,
   LAST_UPDATED_BY,
   POSTED_DATE,
   CURRENCY_CONVERSION_RATE,
   ACCRUAL_REV_FLAG,
   ATTRIBUTE1 ,
   ATTRIBUTE2 ,
   ATTRIBUTE3 ,
   ATTRIBUTE4 ,
   ATTRIBUTE5 ,
   ATTRIBUTE6 ,
   ATTRIBUTE7 ,
   ATTRIBUTE8 ,
   ATTRIBUTE9 ,
   ATTRIBUTE10 ) 
SELECT 
   CURRENCY_CD,
   JE_BATCH_ID,
   OA_JE_CATEGORY,
   JE_HEADER_CREATE_DT,
   JE_HEADER_DESC,
   JE_HEADER_ID,
   JE_HEADER_NAME,
   JE_HEADER_POSTED_DT,
   OA_JE_SOURCE,
   LAST_UPDATE_DTTM,
   GL_PERIOD_ID,
   SET_OF_BOOKS_ID,
   JE_HEADER_REVERSING_IND,
   JE_HEADER_REVERSE_PERIOD_DTTM,
   JE_HEADER_CONV_DTTM,
   OA_JE_HEADER_TRANS_CURRENCY_CD,
   JE_HEADER_ACCT_PERIOD_DTTM,
   PARENT_JE_HEADER_ID,
   HEADER_POSTING_STATUS_CD,
   CREATION_DATE,
   DATE_CREATED,
   DEFAULT_EFFECTIVE_DATE,
   LAST_UPDATED_BY,
   POSTED_DATE,
   CURRENCY_CONVERSION_RATE,
   ACCRUAL_REV_FLAG,
   ATTRIBUTE1 ,
   ATTRIBUTE2 ,
   ATTRIBUTE3 ,
   ATTRIBUTE4 ,
   ATTRIBUTE5 ,
   ATTRIBUTE6 ,
   ATTRIBUTE7 ,
   ATTRIBUTE8 ,
   ATTRIBUTE9 ,
   ATTRIBUTE10 
FROM fdw_stage_db.LOAD_GL_JE_HEADER_s;

delete from FDW_TABLES_DB.OA3NF_GL_JE_HEADER where OA3NF_GL_JE_HEADER.HEADER_POSTING_STATUS_CD <> 'P'
and not exists
(select '1' from FDW_TABLES_DB.OA3NF_GL_JE_HEADER_UNP u
where OA3NF_GL_JE_HEADER.JE_HEADER_ID = u.JE_HEADER_ID
AND OA3NF_GL_JE_HEADER.SET_OF_BOOKS_ID = u.SET_OF_BOOKS_ID)
AND  OA3NF_GL_JE_HEADER.SET_OF_BOOKS_ID<>1002
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_HEADER_UNP AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_HEADER_UNP  WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_HEADER_UNP
(
				HEADER_POSTING_STATUS_CD,
				JE_HEADER_ID,
				SET_OF_BOOKS_ID
                )
                
SELECT 
                HEADER_POSTING_STATUS_CD,
				JE_HEADER_ID,
				SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_GL_JE_HEADER_UNP_s;
);
--------------------------------------------------------------------------------

--- Request Text
--MAC_OA3NF_GL_JE_LINE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_LINE AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_LINE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_JE_LINE_s
where
   LOAD_GL_JE_LINE_s.JE_HEADER_ID = OA3NF_GL_JE_LINE.JE_HEADER_ID
   AND LOAD_GL_JE_LINE_s.JE_LINE_NUM = OA3NF_GL_JE_LINE.JE_LINE_NUM
   AND LOAD_GL_JE_LINE_s.SET_OF_BOOKS_ID = OA3NF_GL_JE_LINE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE ( 
   CHART_OF_ACCOUNT_ID,
   OA_CREATED_BY,
   GL_PERIOD_ID,
   JE_HEADER_ID,
   JE_LINE_DESC,
   JE_LINE_CR_LOCAL_AMT,
   JE_LINE_NUM,
   JE_LINE_CR_TRANS_AMT,
   LAST_UPDATE_DTTM,
   OA_REFERENCE_1,
   OA_REFERENCE_5,
   SET_OF_BOOKS_ID,
   JE_LINE_DR_LOCAL_AMT,
   JE_LINE_DR_TRANS_AMT,
   JE_HDR_ID_LINE_NUM,
   OA_GL_SL_LINK_ID,
   OA_REFERENCE_10,
   OA_REFERENCE_2,
   OA_REFERENCE_3,
   OA_REFERENCE_4,
   OA_REFERENCE_6,
   OA_REFERENCE_7,
   OA_REFERENCE_8,
   OA_REFERENCE_9,
   LINE_POSTING_STATUS_CD,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE10,
   LAST_UPDATED_BY,
   EFFECTIVE_DATE,
   ATTRIBUTE11,
   LEGACY_CONTEXT,
   ATTRIBUTE19 ) 
SELECT 
   CHART_OF_ACCOUNT_ID,
   OA_CREATED_BY,
   GL_PERIOD_ID,
   JE_HEADER_ID,
   JE_LINE_DESC,
   JE_LINE_CR_LOCAL_AMT,
   JE_LINE_NUM,
   JE_LINE_CR_TRANS_AMT,
   LAST_UPDATE_DTTM,
   OA_REFERENCE_1,
   OA_REFERENCE_5,
   SET_OF_BOOKS_ID,
   JE_LINE_DR_LOCAL_AMT,
   JE_LINE_DR_TRANS_AMT,
   JE_HDR_ID_LINE_NUM,
   OA_GL_SL_LINK_ID,
   OA_REFERENCE_10,
   OA_REFERENCE_2,
   OA_REFERENCE_3,
   OA_REFERENCE_4,
   OA_REFERENCE_6,
   OA_REFERENCE_7,
   OA_REFERENCE_8,
   OA_REFERENCE_9,
   LINE_POSTING_STATUS_CD,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE10,
   LAST_UPDATED_BY,
   EFFECTIVE_DATE,
   ATTRIBUTE11,
   LEGACY_CONTEXT,
ATTRIBUTE19
 FROM FDW_STAGE_DB.LOAD_GL_JE_LINE_s;

delete from FDW_TABLES_DB.OA3NF_GL_JE_LINE where OA3NF_GL_JE_LINE.LINE_POSTING_STATUS_CD <> 'P'
and not exists
(select '1' from FDW_TABLES_DB.OA3NF_GL_JE_LINE_UNP u
where OA3NF_GL_JE_LINE.JE_HEADER_ID = u.JE_HEADER_ID
and OA3NF_GL_JE_LINE.JE_LINE_NUM=u.JE_LINE_NUM
AND OA3NF_GL_JE_LINE.SET_OF_BOOKS_ID=u.SET_OF_BOOKS_ID)
AND OA3NF_GL_JE_LINE.SET_OF_BOOKS_ID<>1002
;


);
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_LINE_HIST_DW2 (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT ) AS (

-----------------------------------------OA3NF_GL_JE_LINE-------------------------------------------------------------------------


INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE(
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
ATTRIBUTE19
)
SELECT 
CHART_OF_ACCOUNT_ID,
OA_CREATED_BY,
GL_PERIOD_ID,
JE_HEADER_ID,
JE_LINE_DESC,
JE_LINE_CR_LOCAL_AMT,
JE_LINE_NUM,
JE_LINE_CR_TRANS_AMT,
LAST_UPDATE_DTTM,
OA_REFERENCE_1,
OA_REFERENCE_5,
SET_OF_BOOKS_ID,
JE_LINE_DR_LOCAL_AMT,
JE_LINE_DR_TRANS_AMT,
JE_HDR_ID_LINE_NUM,
OA_GL_SL_LINK_ID,
OA_REFERENCE_10,
OA_REFERENCE_2,
OA_REFERENCE_3,
OA_REFERENCE_4,
OA_REFERENCE_6,
OA_REFERENCE_7,
OA_REFERENCE_8,
OA_REFERENCE_9,
LINE_POSTING_STATUS_CD,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
LAST_UPDATED_BY,
EFFECTIVE_DATE,
ATTRIBUTE11,
LEGACY_CONTEXT,
JE_HDR_ID_LINE_NUM
FROM FDM_TABLES_DB.OA3NF_GL_JE_LINE
where 
GL_PERIOD_ID  = :PARAM_PERIOD_KEY
AND SET_OF_BOOKS_ID =  :PARAM_SET_OF_BOOKS_ID ;
);
--------------------------------------------------------------------------------

--- Request Text
--MAC_OA3NF_GL_JE_LINE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_LINE_SGI AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_LINE_SGI
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_JE_LINE_s
where
   LOAD_GL_JE_LINE_s.JE_HEADER_ID = OA3NF_GL_JE_LINE_SGI.JE_HEADER_ID
   AND LOAD_GL_JE_LINE_s.JE_LINE_NUM = OA3NF_GL_JE_LINE_SGI.JE_LINE_NUM
   AND LOAD_GL_JE_LINE_s.SET_OF_BOOKS_ID = OA3NF_GL_JE_LINE_SGI.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE_SGI ( 
   CHART_OF_ACCOUNT_ID,
   OA_CREATED_BY,
   GL_PERIOD_ID,
   JE_HEADER_ID,
   JE_LINE_DESC,
   JE_LINE_CR_LOCAL_AMT,
   JE_LINE_NUM,
   JE_LINE_CR_TRANS_AMT,
   LAST_UPDATE_DTTM,
   OA_REFERENCE_1,
   OA_REFERENCE_5,
   SET_OF_BOOKS_ID,
   JE_LINE_DR_LOCAL_AMT,
   JE_LINE_DR_TRANS_AMT,
   JE_HDR_ID_LINE_NUM,
   OA_GL_SL_LINK_ID,
   OA_REFERENCE_10,
   OA_REFERENCE_2,
   OA_REFERENCE_3,
   OA_REFERENCE_4,
   OA_REFERENCE_6,
   OA_REFERENCE_7,
   OA_REFERENCE_8,
   OA_REFERENCE_9,
   LINE_POSTING_STATUS_CD,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE10,
   LAST_UPDATED_BY,
   EFFECTIVE_DATE,
   ATTRIBUTE11,
   LEGACY_CONTEXT,
   ATTRIBUTE19 ) 
SELECT 
   CHART_OF_ACCOUNT_ID,
   OA_CREATED_BY,
   GL_PERIOD_ID,
   JE_HEADER_ID,
   JE_LINE_DESC,
   JE_LINE_CR_LOCAL_AMT,
   JE_LINE_NUM,
   JE_LINE_CR_TRANS_AMT,
   LAST_UPDATE_DTTM,
   OA_REFERENCE_1,
   OA_REFERENCE_5,
   SET_OF_BOOKS_ID,
   JE_LINE_DR_LOCAL_AMT,
   JE_LINE_DR_TRANS_AMT,
   JE_HDR_ID_LINE_NUM,
   OA_GL_SL_LINK_ID,
   OA_REFERENCE_10,
   OA_REFERENCE_2,
   OA_REFERENCE_3,
   OA_REFERENCE_4,
   OA_REFERENCE_6,
   OA_REFERENCE_7,
   OA_REFERENCE_8,
   OA_REFERENCE_9,
   LINE_POSTING_STATUS_CD,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE10,
   LAST_UPDATED_BY,
   EFFECTIVE_DATE,
   ATTRIBUTE11,
   LEGACY_CONTEXT,
ATTRIBUTE19
 FROM FDW_STAGE_DB.LOAD_GL_JE_LINE_s;

delete from FDW_TABLES_DB.OA3NF_GL_JE_LINE_SGI where OA3NF_GL_JE_LINE_SGI.LINE_POSTING_STATUS_CD <> 'P'
and not exists
(select '1' from FDW_TABLES_DB.OA3NF_GL_JE_LINE_UNP u
where OA3NF_GL_JE_LINE_SGI.JE_HEADER_ID = u.JE_HEADER_ID
and OA3NF_GL_JE_LINE_SGI.JE_LINE_NUM=u.JE_LINE_NUM
AND OA3NF_GL_JE_LINE_SGI.SET_OF_BOOKS_ID=u.SET_OF_BOOKS_ID)
AND OA3NF_GL_JE_LINE_SGI.SET_OF_BOOKS_ID<>1002
;


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_JE_LINE_UNP AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_JE_LINE_UNP  WHERE SET_OF_BOOKS_ID NOT IN (1002);
INSERT INTO FDW_TABLES_DB.OA3NF_GL_JE_LINE_UNP

(
JE_HDR_ID_LINE_NUM,
JE_HEADER_ID,
JE_LINE_NUM,
SET_OF_BOOKS_ID,
LINE_POSTING_STATUS_CD
)
SELECT 
JE_HDR_ID_LINE_NUM,
JE_HEADER_ID,
JE_LINE_NUM,
SET_OF_BOOKS_ID,
LINE_POSTING_STATUS_CD
FROM FDW_STAGE_DB.LOAD_GL_JE_LINE_UNP_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_OA_JE_CATEGORY AS (
DELETE FROM FDW_TABLES_DB.OA3NF_GL_OA_JE_CATEGORY
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_OA_JE_CATEGORY_s
where
   LOAD_GL_OA_JE_CATEGORY_s.JE_CATEGORY_CD = OA3NF_GL_OA_JE_CATEGORY.JE_CATEGORY_CD
   AND
   LOAD_GL_OA_JE_CATEGORY_s.SET_OF_BOOKS_ID = OA3NF_GL_OA_JE_CATEGORY.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_OA_JE_CATEGORY ( 
   DESCRIPTION,
   JE_CATEGORY_CD,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   USER_JE_CATEGORY_NAME,
   SET_OF_BOOKS_ID) 
SELECT 
   DESCRIPTION,
   JE_CATEGORY_CD,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   USER_JE_CATEGORY_NAME,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_GL_OA_JE_CATEGORY_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_OA_JE_SOURCES AS (
DELETE FROM FDW_TABLES_DB.OA3NF_GL_OA_JE_SOURCES
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_OA_JE_SOURCES_s
where
   LOAD_GL_OA_JE_SOURCES_s.JE_SOURCE_NAME = OA3NF_GL_OA_JE_SOURCES.JE_SOURCE_NAME
   AND
   LOAD_GL_OA_JE_SOURCES_s.SET_OF_BOOKS_ID= OA3NF_GL_OA_JE_SOURCES.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_OA_JE_SOURCES ( 
   JE_SOURCE_NAME,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   USER_JE_SOURCE_NAME,
   SET_OF_BOOKS_ID) 
SELECT 
   JE_SOURCE_NAME,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   USER_JE_SOURCE_NAME,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_GL_OA_JE_SOURCES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_PERIODS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_GL_PERIODS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_GL_PERIODS_s
where
   LOAD_GL_PERIODS_s.GL_PERIOD_ID = OA3NF_GL_PERIODS.GL_PERIOD_ID
   AND LOAD_GL_PERIODS_s.PERIOD_SET_NAME = OA3NF_GL_PERIODS.PERIOD_SET_NAME
   AND LOAD_GL_PERIODS_s.PERIOD_TYPE = OA3NF_GL_PERIODS.PERIOD_TYPE
   AND LOAD_GL_PERIODS_s.SET_OF_BOOKS_ID = OA3NF_GL_PERIODS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_GL_PERIODS ( 
   ADJUSTMENT_PERIOD_FLAG,
   END_DATE,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NAME,
   PERIOD_NUM,
   PERIOD_NUM_GEN,
   PERIOD_SET_NAME,
   PERIOD_TYPE,
   PERIOD_YEAR,
   QUARTER_NUM,
   SET_OF_BOOKS_ID,
   START_DATE,
   PERIOD ) 
SELECT 
   ADJUSTMENT_PERIOD_FLAG,
   END_DATE,
   GL_PERIOD_ID,
   LAST_UPDATE_DTTM,
   PERIOD_NAME,
   PERIOD_NUM,
   PERIOD_NUM_GEN,
   PERIOD_SET_NAME,
   PERIOD_TYPE,
   PERIOD_YEAR,
   QUARTER_NUM,
   SET_OF_BOOKS_ID,
   START_DATE,
   PERIOD
FROM FDW_STAGE_DB.LOAD_GL_PERIODS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_PERIOD_STATUSES AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_PERIOD_STATUSES WHERE OA3NF_GL_PERIOD_STATUSES.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_PERIOD_STATUSES
(
APPLICATION_ID,
SET_OF_BOOKS_ID,
PERIOD_NAME,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CLOSING_STATUS,
START_DATE,
END_DATE,
YEAR_START_DATE,
QUARTER_NUM,
QUARTER_START_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
EFFECTIVE_PERIOD_NUM,
PERIOD_NUM,
ADJUSTMENT_PERIOD_FLAG,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
ELIMINATION_CONFIRMED_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
CONTEXT,
CHRONOLOGICAL_SEQ_STATUS_CODE

) 
SELECT
LOAD_GL_PERIOD_STATUSES_s.APPLICATION_ID,
LOAD_GL_PERIOD_STATUSES_s.SET_OF_BOOKS_ID,
LOAD_GL_PERIOD_STATUSES_s.PERIOD_NAME,
LOAD_GL_PERIOD_STATUSES_s.LAST_UPDATE_DATE,
LOAD_GL_PERIOD_STATUSES_s.LAST_UPDATED_BY,
LOAD_GL_PERIOD_STATUSES_s.CLOSING_STATUS,
LOAD_GL_PERIOD_STATUSES_s.START_DATE,
LOAD_GL_PERIOD_STATUSES_s.END_DATE,
LOAD_GL_PERIOD_STATUSES_s.YEAR_START_DATE,
LOAD_GL_PERIOD_STATUSES_s.QUARTER_NUM,
LOAD_GL_PERIOD_STATUSES_s.QUARTER_START_DATE,
LOAD_GL_PERIOD_STATUSES_s.PERIOD_TYPE,
LOAD_GL_PERIOD_STATUSES_s.PERIOD_YEAR,
LOAD_GL_PERIOD_STATUSES_s.EFFECTIVE_PERIOD_NUM,
LOAD_GL_PERIOD_STATUSES_s.PERIOD_NUM,
LOAD_GL_PERIOD_STATUSES_s.ADJUSTMENT_PERIOD_FLAG,
LOAD_GL_PERIOD_STATUSES_s.CREATION_DATE,
LOAD_GL_PERIOD_STATUSES_s.CREATED_BY,
LOAD_GL_PERIOD_STATUSES_s.LAST_UPDATE_LOGIN,
LOAD_GL_PERIOD_STATUSES_s.ELIMINATION_CONFIRMED_FLAG,
LOAD_GL_PERIOD_STATUSES_s.ATTRIBUTE1,
LOAD_GL_PERIOD_STATUSES_s.ATTRIBUTE2,
LOAD_GL_PERIOD_STATUSES_s.ATTRIBUTE3,
LOAD_GL_PERIOD_STATUSES_s.ATTRIBUTE4,
LOAD_GL_PERIOD_STATUSES_s.ATTRIBUTE5,
LOAD_GL_PERIOD_STATUSES_s.CONTEXT,
LOAD_GL_PERIOD_STATUSES_s.CHRONOLOGICAL_SEQ_STATUS_CODE
FROM FDW_STAGE_DB.LOAD_GL_PERIOD_STATUSES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_SUMM_TEMPLATES AS(
DELETE FROM FDW_TABLES_DB.OA3NF_GL_SUMM_TEMPLATES WHERE SET_OF_BOOKS_ID NOT IN(1002) ;;
INSERT INTO FDW_TABLES_DB.OA3NF_GL_SUMM_TEMPLATES
(
				TEMPLATE_ID,
				SET_OF_BOOKS_ID,
				STATUS,
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,
				TEMPLATE_NAME,
				CONCATENATED_DESCRIPTION,
				ACCOUNT_CATEGORY_CODE,
				FUNDS_CHECK_LEVEL_CODE,
				MAX_CODE_COMBINATION_ID,
				START_ACTUALS_PERIOD_NAME,
				AMOUNT_TYPE,
				BOUNDARY_CODE,
				CREATED_BY,
				CREATION_DATE,
				FCS_FLASH_SUMMARY_GRP,
				FCS_FLASH_DTL_GRP,
				DR_CR_CODE,
				LAST_UPDATE_LOGIN,
				FUNDING_BUDGET_VERSION_ID,
				SEGMENT1_TYPE,
				SEGMENT2_TYPE,
				SEGMENT3_TYPE,
				SEGMENT4_TYPE,
				SEGMENT5_TYPE,
				SEGMENT6_TYPE,
				SEGMENT7_TYPE,
				SEGMENT8_TYPE,
				SEGMENT9_TYPE,
				SEGMENT10_TYPE,
				SEGMENT11_TYPE,
				SEGMENT12_TYPE,
				SEGMENT13_TYPE,
				SEGMENT14_TYPE,
				SEGMENT15_TYPE,
				SEGMENT16_TYPE,
				SEGMENT17_TYPE,
				SEGMENT18_TYPE,
				SEGMENT19_TYPE,
				SEGMENT20_TYPE,
				SEGMENT21_TYPE,
				SEGMENT22_TYPE,
				SEGMENT23_TYPE,
				SEGMENT24_TYPE,
				SEGMENT25_TYPE,
				SEGMENT26_TYPE,
				SEGMENT27_TYPE,
				SEGMENT28_TYPE,
				SEGMENT29_TYPE,
				SEGMENT30_TYPE,
				DESCRIPTION,
				ATTRIBUTE1,
				ATTRIBUTE2,
				ATTRIBUTE3,
				ATTRIBUTE4,
				ATTRIBUTE5,
				ATTRIBUTE6,
				ATTRIBUTE7,
				ATTRIBUTE8,
				CONTEXT
                )
                
SELECT 
                TEMPLATE_ID,
				SET_OF_BOOKS_ID,
				STATUS,
				LAST_UPDATE_DATE,
				LAST_UPDATED_BY,
				TEMPLATE_NAME,
				CONCATENATED_DESCRIPTION,
				ACCOUNT_CATEGORY_CODE,
				FUNDS_CHECK_LEVEL_CODE,
				MAX_CODE_COMBINATION_ID,
				START_ACTUALS_PERIOD_NAME,
				AMOUNT_TYPE,
				BOUNDARY_CODE,
				CREATED_BY,
				CREATION_DATE,
				FCS_FLASH_SUMMARY_GRP,
				FCS_FLASH_DTL_GRP,
				DR_CR_CODE,
				LAST_UPDATE_LOGIN,
				FUNDING_BUDGET_VERSION_ID,
				SEGMENT1_TYPE,
				SEGMENT2_TYPE,
				SEGMENT3_TYPE,
				SEGMENT4_TYPE,
				SEGMENT5_TYPE,
				SEGMENT6_TYPE,
				SEGMENT7_TYPE,
				SEGMENT8_TYPE,
				SEGMENT9_TYPE,
				SEGMENT10_TYPE,
				SEGMENT11_TYPE,
				SEGMENT12_TYPE,
				SEGMENT13_TYPE,
				SEGMENT14_TYPE,
				SEGMENT15_TYPE,
				SEGMENT16_TYPE,
				SEGMENT17_TYPE,
				SEGMENT18_TYPE,
				SEGMENT19_TYPE,
				SEGMENT20_TYPE,
				SEGMENT21_TYPE,
				SEGMENT22_TYPE,
				SEGMENT23_TYPE,
				SEGMENT24_TYPE,
				SEGMENT25_TYPE,
				SEGMENT26_TYPE,
				SEGMENT27_TYPE,
				SEGMENT28_TYPE,
				SEGMENT29_TYPE,
				SEGMENT30_TYPE,
				DESCRIPTION,
				ATTRIBUTE1,
				ATTRIBUTE2,
				ATTRIBUTE3,
				ATTRIBUTE4,
				ATTRIBUTE5,
				ATTRIBUTE6,
				ATTRIBUTE7,
				ATTRIBUTE8,
				CONTEXT
FROM FDW_STAGE_DB.LOAD_GL_SUMM_TEMPLATES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HIERARCHY_S AS (

DELETE FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S;

INSERT INTO FDW_TABLES_DB.OA3NF_HIERARCHY_S
(
	CHILD_VALUE
   ,DESCRIPTION
   ,FLEX_VALUE_SET_ID
   ,LEVEL_NO
   ,PARENT_VALUE
   ,TOP_VALUE

)
SELECT distinct 
   DP_RV_Hier_S1_V.CHILD_VALUE
   ,DP_RV_Hier_S1_V.CHILD_VALUE_DESC
   ,DP_RV_Hier_S1_V.FLEX_VALUE_SET_ID
   ,DP_RV_Hier_S1_V.DEPTH
   ,DP_RV_Hier_S1_V.PARENT_VALUE
   ,DP_RV_Hier_S1_V.TOP_VALUE
 FROM FDW_SEM_DB.DP_RV_HIER_S1_V;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HIERARCHY_S1 AS(

DELETE FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S1;

INSERT INTO FDW_TABLES_DB.OA3NF_HIERARCHY_S1
(
	CHILD_VALUE,
	DESCRIPTION,
	FLEX_VALUE_SET_ID,
	LEVEL_NO,
	PARENT_VALUE,
	TOP_VALUE			
)
SELECT 
 DISTINCT 
(CAST(FLEX_VALUE AS VARCHAR(256) )) CHILD_VALUE, 
(CAST(DESCRIPTION AS VARCHAR(256) )) DESCRIPTION, 
(CAST(FLEX_VALUE_SET_ID AS VARCHAR(20) )) FLEX_VALUE_SET_ID, 
(CAST(999 AS VARCHAR(20) )) LEVEL_NO, 
(CAST(PARENT_FLEX_VALUE AS VARCHAR(256) )) PARENT_VALUE, 
(CAST(NULL AS VARCHAR(256) )) TOP_VALUE
 FROM 
FDW_TABLES_DB.OA3NF_FLEX_HIER;

INSERT INTO FDW_TABLES_DB.OA3NF_HIERARCHY_S1
(
	FLEX_VALUE_SET_ID,
	CHILD_VALUE,
	PARENT_VALUE,
	TOP_VALUE,
	DESCRIPTION,
	LEVEL_NO	
				
)
SELECT DISTINCT 
DPK.FLEX_VALUE_SET_ID, 
DPK.PARENT_FLEX_VALUE, 
NULL, 
NULL,
DPK.DESCRIPTION,
0
FROM FDW_TABLES_DB.OA3NF_OA_KEYFLEX_HIER DPK,
FDW_TABLES_DB.OA3NF_HIERARCHY_S1 HS1
WHERE DPK.FLEX_VALUE_SET_ID = HS1.FLEX_VALUE_SET_ID
AND DPK.PARENT_FLEX_VALUE = HS1.PARENT_VALUE;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HR_ASSIGNMENTS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_HR_ASSIGNMENTS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_HR_ASSIGNMENTS_s
where
   LOAD_HR_ASSIGNMENTS_s.ASSIGNMENT_ID = OA3NF_HR_ASSIGNMENTS.ASSIGNMENT_ID
   AND 
   LOAD_HR_ASSIGNMENTS_s.EFFECTIVE_START_DATE = OA3NF_HR_ASSIGNMENTS.EFFECTIVE_START_DATE);

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ASSIGNMENTS ( 
   ASSIGNMENT_ID,
   EMPLOYEE_ID,
   JOB_ID,
   EFFECTIVE_START_DATE,
   EFFECTIVE_END_DATE,
   LAST_UPDATE_DATE,
   ASSIGN_STATUS_TYPE_ID,
   ASSIGNMENT_NUMBER,
   ASSIGNMENT_TYPE,
   EMPLOYEE_CATEGORY,
   FREQUENCY,
   GRADE_ID,
   ORGANIZATION_ID,
   LOCATION_ID,
   MANAGER_FLAG,
   NORMAL_HOURS,
   PAYROLL_ID,
   PERF_REVIEW_PERIOD,
   PERF_REVIEW_PER_FREQ,
   POSITION_ID,
   PRIMARY_FLAG,
   SAL_REVIEW_PERIOD,
   SAL_REVIEW_PER_FREQ,
   SUPERVISOR_ID,
   TIME_NORMAL_FINISH,
   TIME_NORMAL_START,
   PERIOD_OF_SERVICE_ID,
   CHANGE_REASON,
   PAY_BASIS_ID,
   BUSINESS_GROUP_ID,
   EMPLOYMENT_CATEGORY,
   PEOPLE_GROUP_ID,
   CAGR_GRADE_DEF_ID ) 
SELECT 
   ASSIGNMENT_ID,
   EMPLOYEE_ID,
   JOB_ID,
   EFFECTIVE_START_DATE,
   EFFECTIVE_END_DATE,
   LAST_UPDATE_DATE,
   ASSIGN_STATUS_TYPE_ID,
   ASSIGNMENT_NUMBER,
   ASSIGNMENT_TYPE,
   EMPLOYEE_CATEGORY,
   FREQUENCY,
   GRADE_ID,
   ORGANIZATION_ID,
   LOCATION_ID,
   MANAGER_FLAG,
   NORMAL_HOURS,
   PAYROLL_ID,
   PERF_REVIEW_PERIOD,
   PERF_REVIEW_PER_FREQ,
   POSITION_ID,
   PRIMARY_FLAG,
   SAL_REVIEW_PERIOD,
   SAL_REVIEW_PER_FREQ,
   SUPERVISOR_ID,
   TIME_NORMAL_FINISH,
   TIME_NORMAL_START,
   PERIOD_OF_SERVICE_ID,
   CHANGE_REASON,
   PAY_BASIS_ID,
   BUSINESS_GROUP_ID,
   EMPLOYMENT_CATEGORY,
   PEOPLE_GROUP_ID,
   CAGR_GRADE_DEF_ID
FROM FDW_STAGE_DB.LOAD_HR_ASSIGNMENTS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HR_JOBS AS (

MERGE INTO FDW_TABLES_DB.OA3NF_HR_JOBS
USING
(SELECT 
JOB_ID AS JOB_ID,
BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID ,
JOB_DEFINITION_ID AS JOB_DEFINITION_ID,
EFF_START_DATE AS EFF_START_DATE,
EFF_END_DATE AS EFF_END_DATE,
TRIM(JOB_NAME) AS JOB_NAME,
LAST_UPDATE_DATE AS LAST_UPDATE_DATE
FROM FDW_STAGE_DB.LOAD_HR_JOBS_s)  AS LOAD_HR_JOBS_s
ON ( FDW_TABLES_DB.OA3NF_HR_JOBS.JOB_ID=LOAD_HR_JOBS_s.JOB_ID)

WHEN MATCHED THEN UPDATE
SET BUSINESS_GROUP_ID = LOAD_HR_JOBS_s.BUSINESS_GROUP_ID,
 JOB_DEFINITION_ID=LOAD_HR_JOBS_s.JOB_DEFINITION_ID,
 EFF_START_DATE=LOAD_HR_JOBS_s.EFF_START_DATE,
 EFF_END_DATE=LOAD_HR_JOBS_s.EFF_END_DATE,
 JOB_NAME=LOAD_HR_JOBS_s.JOB_NAME,
 LAST_UPDATE_DATE=LOAD_HR_JOBS_s.LAST_UPDATE_DATE

WHEN NOT MATCHED THEN INSERT
(
JOB_ID,
BUSINESS_GROUP_ID,
JOB_DEFINITION_ID,
EFF_START_DATE,
EFF_END_DATE,
JOB_NAME,
LAST_UPDATE_DATE

) VALUES
(
LOAD_HR_JOBS_s.JOB_ID,
LOAD_HR_JOBS_s.BUSINESS_GROUP_ID,
LOAD_HR_JOBS_s.JOB_DEFINITION_ID,
LOAD_HR_JOBS_s.EFF_START_DATE,
LOAD_HR_JOBS_s.EFF_END_DATE,
LOAD_HR_JOBS_s.JOB_NAME,
LOAD_HR_JOBS_s.LAST_UPDATE_DATE
);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------

/*
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_GL_BALANCES_CDC_HIST (period_yr VARCHAR(100))
AS (
--DELETE FROM FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC WHERE SET_OF_BOOKS_ID NOT IN (1002);
INSERT INTO FDW_TABLES_DB.OA3NF_GL_BALANCES_CDC_HIST
( 
   ACTUAL_FLAG
   ,CHART_OF_ACCOUNT_ID
   ,CURRENCY_CD
   ,ENCUMBRANCE_TYPE_ID
   ,SET_OF_BOOKS_ID
   ,FINANCIAL_PLAN_ID
   ,PERIOD_YEAR
) 
SELECT distinct 
   LOAD_GL_BALANCES_s.ACTUAL_FLAG
   ,LOAD_GL_BALANCES_s.CHART_OF_ACCOUNT_ID
   ,LOAD_GL_BALANCES_s.CURRENCY_CD
   ,LOAD_GL_BALANCES_s.ENCUMBRANCE_TYPE_ID
   ,LOAD_GL_BALANCES_s.SET_OF_BOOKS_ID
   ,LOAD_GL_BALANCES_s.FINANCIAL_PLAN_ID
   ,LOAD_GL_BALANCES_s.PERIOD_YEAR
 FROM 
   FDW_STAGE_DB.LOAD_GL_BALANCES_s
   WHERE GL_PERIOD_ID IN (:period_yr ) ;
); */
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HR_LOCATION_ALL_TL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_HR_LOCATION_ALL_TL WHERE SET_OF_BOOKS_ID NOT IN (1002);
INSERT INTO FDW_TABLES_DB.OA3NF_HR_LOCATION_ALL_TL
(
LOCATION_ID,
LANGUAGE_,
SOURCE_LANG,
LOCATION_CODE,
DESCRIPTION,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
CREATED_BY,
CREATION_DATE,
SET_OF_BOOKS_ID
)
SELECT 
LOCATION_ID,
LANGUAGE_,
SOURCE_LANG,
LOCATION_CODE,
DESCRIPTION,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
CREATED_BY,
CREATION_DATE,
:CBS_Studio AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_HR_LOCATION_ALL_TL_s
UNION ALL
SELECT 
LOCATION_ID,
LANGUAGE_,
SOURCE_LANG,
LOCATION_CODE,
DESCRIPTION,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
CREATED_BY,
CREATION_DATE,
:CBS_Distribution AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_HR_LOCATION_ALL_TL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HR_ORG_INFO AS (
DELETE FROM FDW_TABLES_DB.OA3NF_HR_ORG_INFO
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_HR_ORG_INFO_s
where
   LOAD_HR_ORG_INFO_s.ORG_INFORMATION_ID = OA3NF_HR_ORG_INFO.ORG_INFORMATION_ID
   AND LOAD_HR_ORG_INFO_s.SET_OF_BOOKS_ID = OA3NF_HR_ORG_INFO.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ORG_INFO ( 
   ORG_INFORMATION_ID,
   ORG_INFORMATION_CONTEXT,
   ORGANIZATION_ID,
   ORG_INFORMATION1,
   ORG_INFORMATION2,
   ORG_INFORMATION3,
   ORG_INFORMATION4,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID   
) 
SELECT 
   ORG_INFORMATION_ID,
   ORG_INFORMATION_CONTEXT,
   ORGANIZATION_ID,
   ORG_INFORMATION1,
   ORG_INFORMATION2,
   ORG_INFORMATION3,
   ORG_INFORMATION4,
   LAST_UPDATE_DTTM,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_HR_ORG_INFO_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_HR_ORG_UNITS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_HR_ORG_UNITS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_HR_ORG_UNITS_s
where
   LOAD_HR_ORG_UNITS_s.ORGANIZATION_ID = OA3NF_HR_ORG_UNITS.ORGANIZATION_ID
   AND LOAD_HR_ORG_UNITS_s.SET_OF_BOOKS_ID = OA3NF_HR_ORG_UNITS.SET_OF_BOOKS_ID);

INSERT INTO FDW_TABLES_DB.OA3NF_HR_ORG_UNITS ( 
   ORGANIZATION_ID,
   BUSINESS_GROUP_ID,
   NAME,
   TRANSLATED_NAME,
   LANGUAGE_TL,
   SOURCE_LANGUAGE,
   LAST_UPDATE_DTTM,
   PROJECT_ORGANIZATION_NUMBER,
   ORG_TYPE,
SET_OF_BOOKS_ID   ) 
SELECT 
   ORGANIZATION_ID,
   BUSINESS_GROUP_ID,
   NAME,
   TRANSLATED_NAME,
   LANGUAGE_TL,
   SOURCE_LANGUAGE,
   LAST_UPDATE_DTTM,
   PROJECT_ORGANIZATION_NUMBER,
   ORG_TYPE,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_HR_ORG_UNITS_s;
);
--OA3NF_IBY_PAYMENT_METHODS_TL
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_IBY_PAY_METHODS_TL AS(
DELETE FROM FDW_TABLES_DB.OA3NF_IBY_PAYMENT_METHODS_TL ALL;
INSERT INTO FDW_TABLES_DB.OA3NF_IBY_PAYMENT_METHODS_TL
(
                 PAYMENT_METHOD_CODE, 
                  LANG, 
      SOURCE_LANG, 
      PAYMENT_METHOD_NAME,
            CREATED_BY, 
      CREATION_DATE, 
      LAST_UPDATED_BY, 
      LAST_UPDATE_DATE,
            LAST_UPDATE_LOGIN, 
      OBJECT_VERSION_NUMBER, 
      DESCRIPTION
                )
                
SELECT PAYMENT_METHOD_CODE, 
                  LANG, 
      SOURCE_LANG, 
      PAYMENT_METHOD_NAME,
            CREATED_BY, 
      CREATION_DATE, 
      LAST_UPDATED_BY, 
      LAST_UPDATE_DATE,
            LAST_UPDATE_LOGIN, 
      OBJECT_VERSION_NUMBER, 
      DESCRIPTION
FROM FDW_STAGE_DB.LOAD_IBY_PAYMENT_METHODS_TL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_LOOKUP_TYPES

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_LOOKUP_TYPES AS (
DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_TYPES
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_LOOKUP_TYPES_s
where
   LOAD_LOOKUP_TYPES_s.LOOKUP_TYPE = OA3NF_LOOKUP_TYPES.LOOKUP_TYPE
   AND LOAD_LOOKUP_TYPES_s.SECURITY_GROUP_ID = OA3NF_LOOKUP_TYPES.SECURITY_GROUP_ID
   AND LOAD_LOOKUP_TYPES_s.VIEW_APPLICATION_ID = OA3NF_LOOKUP_TYPES.VIEW_APPLICATION_ID
   AND LOAD_LOOKUP_TYPES_s.SET_OF_BOOKS_ID = OA3NF_LOOKUP_TYPES.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_TYPES ( 
   LOOKUP_TYPE,
   SET_OF_BOOKS_ID,
   SECURITY_GROUP_ID,
   VIEW_APPLICATION_ID,
   APPLICATION_ID,
   LAST_UPDATE_DTTM ) 
SELECT 
   LOOKUP_TYPE,
   SET_OF_BOOKS_ID,
   SECURITY_GROUP_ID,
   VIEW_APPLICATION_ID,
   APPLICATION_ID,
   LAST_UPDATE_DTTM
FROM FDW_STAGE_DB.LOAD_LOOKUP_TYPES_s;

DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_TYPES WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_LOOKUP_TYPES_DEL S
WHERE OA3NF_LOOKUP_TYPES.LOOKUP_TYPE = S.LOOKUP_TYPE
AND OA3NF_LOOKUP_TYPES.VIEW_APPLICATION_ID = s.VIEW_APPLICATION_ID
AND OA3NF_LOOKUP_TYPES.SECURITY_GROUP_ID = s.SECURITY_GROUP_ID
and OA3NF_LOOKUP_TYPES.SET_OF_BOOKS_ID=S.SET_OF_BOOKS_ID)
AND OA3NF_LOOKUP_TYPES.LOOKUP_TYPE <> 'NA'
AND OA3NF_LOOKUP_TYPES.SET_OF_BOOKS_ID<>1002
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


 REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_LOOKUP_TYPES_DEL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_TYPES_DEL WHERE OA3NF_LOOKUP_TYPES_DEL.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_TYPES_DEL
(  
SET_OF_BOOKS_ID,   
LOOKUP_TYPE,    
SECURITY_GROUP_ID, 
VIEW_APPLICATION_ID
)
SELECT
:CBS_Studio AS SET_OF_BOOKS_ID,   
LOAD_LOOKUP_TYPES_DEL_s.LOOKUP_TYPE,   
LOAD_LOOKUP_TYPES_DEL_s.SECURITY_GROUP_ID, 
LOAD_LOOKUP_TYPES_DEL_s.VIEW_APPLICATION_ID
FROM FDW_STAGE_DB.LOAD_LOOKUP_TYPES_DEL_s
UNION ALL
SELECT
:CBS_Distribution AS SET_OF_BOOKS_ID,   
LOAD_LOOKUP_TYPES_DEL_s.LOOKUP_TYPE,   
LOAD_LOOKUP_TYPES_DEL_s.SECURITY_GROUP_ID, 
LOAD_LOOKUP_TYPES_DEL_s.VIEW_APPLICATION_ID
FROM FDW_STAGE_DB.LOAD_LOOKUP_TYPES_DEL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_LOOKUP_VALUES

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_LOOKUP_VALUES AS(
DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_VALUES
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_LOOKUP_VALUES_s
where
   LOAD_LOOKUP_VALUES_s.LANGUAGE_CD = OA3NF_LOOKUP_VALUES.LANGUAGE_CD
   AND LOAD_LOOKUP_VALUES_s.LOOKUP_CODE = OA3NF_LOOKUP_VALUES.LOOKUP_CODE
   AND LOAD_LOOKUP_VALUES_s.LOOKUP_TYPE = OA3NF_LOOKUP_VALUES.LOOKUP_TYPE
   AND LOAD_LOOKUP_VALUES_s.SECURITY_GROUP_ID = OA3NF_LOOKUP_VALUES.SECURITY_GROUP_ID
   AND LOAD_LOOKUP_VALUES_s.VIEW_APPLICATION_ID = OA3NF_LOOKUP_VALUES.VIEW_APPLICATION_ID
   AND LOAD_LOOKUP_VALUES_s.SET_OF_BOOKS_ID = OA3NF_LOOKUP_VALUES.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_VALUES ( 
   DESCRIPTION,
   ENABLED_FLAG,
   END_DATE_ACTIVE,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   LOOKUP_CODE,
   LOOKUP_TYPE,
   MEANING,
   SECURITY_GROUP_ID,
   START_DATE_ACTIVE,
   VIEW_APPLICATION_ID,
   SET_OF_BOOKS_ID
) 
SELECT 
   DESCRIPTION,
   ENABLED_FLAG,
   END_DATE_ACTIVE,
   LANGUAGE_CD,
   LAST_UPDATE_DTTM,
   LOOKUP_CODE,
   LOOKUP_TYPE,
   MEANING,
   SECURITY_GROUP_ID,
   START_DATE_ACTIVE,
   VIEW_APPLICATION_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_LOOKUP_VALUES_s;

DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_VALUES WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_LOOKUP_VALUES_DEL S
WHERE OA3NF_LOOKUP_VALUES.LOOKUP_TYPE = S.LOOKUP_TYPE
AND   OA3NF_LOOKUP_VALUES.LOOKUP_CODE = s.LOOKUP_CODE
AND   OA3NF_LOOKUP_VALUES.VIEW_APPLICATION_ID = s.VIEW_APPLICATION_ID
AND   OA3NF_LOOKUP_VALUES.SECURITY_GROUP_ID = s.SECURITY_GROUP_ID
AND   OA3NF_LOOKUP_VALUES.LANGUAGE_CD = s.LANGUAGE_CD
and OA3NF_LOOKUP_VALUES.SET_OF_BOOKS_ID=S.SET_OF_BOOKS_ID)
AND   OA3NF_LOOKUP_VALUES.LOOKUP_CODE <> 'NA'
AND   OA3NF_LOOKUP_VALUES.LOOKUP_TYPE <> 'NA'
AND OA3NF_LOOKUP_VALUES.SET_OF_BOOKS_ID<>1002

;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_LOOKUP_VALUES_DEL (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_LOOKUP_VALUES_DEL WHERE SET_OF_BOOKS_ID NOT IN(1002) ;
INSERT INTO FDW_TABLES_DB.OA3NF_LOOKUP_VALUES_DEL
(
				LANGUAGE_CD,    
				SET_OF_BOOKS_ID,   
				LOOKUP_TYPE,   
				LOOKUP_CODE,  
				SECURITY_GROUP_ID, 
				VIEW_APPLICATION_ID
                )
                
SELECT 
                LANGUAGE_CD,    
				:CBS_Studio AS SET_OF_BOOKS_ID,   
				LOOKUP_TYPE,   
				LOOKUP_CODE,  
				SECURITY_GROUP_ID, 
				VIEW_APPLICATION_ID
FROM FDW_STAGE_DB.LOAD_LOOKUP_VALUES_DEL_s
UNION ALL
SELECT 
                LANGUAGE_CD,    
				:CBS_Distribution AS SET_OF_BOOKS_ID,   
				LOOKUP_TYPE,   
				LOOKUP_CODE,  
				SECURITY_GROUP_ID, 
				VIEW_APPLICATION_ID
FROM FDW_STAGE_DB.LOAD_LOOKUP_VALUES_DEL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


  REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_OA_FLEX_ROLLUP (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_OA_FLEX_ROLLUP WHERE OA3NF_OA_FLEX_ROLLUP.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_OA_FLEX_ROLLUP
(
SET_OF_BOOKS_ID,
FLEX_VALUE_SET_ID,
PARENT_FLEX_VALUE,
CHILD_FLEX_VALUE_HIGH,
CHILD_FLEX_VALUE_LOW
) 
SELECT
:CBS_Studio AS SET_OF_BOOKS_ID,
LOAD_OA_FLEX_ROLLUP_s.FLEX_VALUE_SET_ID,
LOAD_OA_FLEX_ROLLUP_s.PARENT_FLEX_VALUE,
LOAD_OA_FLEX_ROLLUP_s.CHILD_FLEX_VALUE_HIGH,
LOAD_OA_FLEX_ROLLUP_s.CHILD_FLEX_VALUE_LOW
FROM FDW_STAGE_DB.LOAD_OA_FLEX_ROLLUP_s
UNION ALL
SELECT
:CBS_Distribution AS SET_OF_BOOKS_ID,
LOAD_OA_FLEX_ROLLUP_s.FLEX_VALUE_SET_ID,
LOAD_OA_FLEX_ROLLUP_s.PARENT_FLEX_VALUE,
LOAD_OA_FLEX_ROLLUP_s.CHILD_FLEX_VALUE_HIGH,
LOAD_OA_FLEX_ROLLUP_s.CHILD_FLEX_VALUE_LOW
FROM FDW_STAGE_DB.LOAD_OA_FLEX_ROLLUP_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_OA_KEYFLEX_HIER AS(

DELETE FROM FDW_TABLES_DB.OA3NF_OA_KEYFLEX_HIER;

INSERT INTO FDW_TABLES_DB.OA3NF_OA_KEYFLEX_HIER
(
				FLEX_VALUE_SET_ID,
				DESCRIPTION,
				PARENT_FLEX_VALUE,
				FLEX_VALUE_SET_NAME
                )
                
SELECT 
				FLEX_VALUE_SET_ID,
				DESCRIPTION,
				PARENT_FLEX_VALUE,
				FLEX_VALUE_SET_NAME

FROM FDW_STAGE_DB.LOAD_OA_KEYFLEX_HIER_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_OA_OPERATING_UNITS AS(
DELETE FROM FDW_TABLES_DB.OA3NF_OA_OPERATING_UNITS  WHERE SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_OA_OPERATING_UNITS

(
BUSINESS_GROUP_ID,
LEGAL_ENTITY_ID,
OPERATING_UNIT,
OPERATING_UNIT_ID,
SET_OF_BOOKS_ID

)
SELECT 
BUSINESS_GROUP_ID,
LEGAL_ENTITY_ID,
OPERATING_UNIT,
OPERATING_UNIT_ID,
SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_OA_OPERATING_UNITS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PER_ALL_PEOPLE_F AS(
DELETE FROM FDW_TABLES_DB.OA3NF_PER_ALL_PEOPLE_F;
INSERT INTO FDW_TABLES_DB.OA3NF_PER_ALL_PEOPLE_F
(
				APPLICANT_NUMBER,
				ATTRIBUTE1,
				ATTRIBUTE10,
				ATTRIBUTE11,
				ATTRIBUTE12,
				ATTRIBUTE13,
				ATTRIBUTE14,
				ATTRIBUTE15,
				ATTRIBUTE16,
				ATTRIBUTE17,
				ATTRIBUTE18,
				ATTRIBUTE19,
				ATTRIBUTE2,
				ATTRIBUTE20,
				ATTRIBUTE21,
				ATTRIBUTE22,
				ATTRIBUTE23,
				ATTRIBUTE24,
				ATTRIBUTE25,
				ATTRIBUTE26,
				ATTRIBUTE27,
				ATTRIBUTE28,
				ATTRIBUTE29,
				ATTRIBUTE3,
				ATTRIBUTE30,
				ATTRIBUTE4,
				ATTRIBUTE5,
				ATTRIBUTE6,
				ATTRIBUTE7,
				ATTRIBUTE8,
				ATTRIBUTE9,
				ATTRIBUTE_CATEGORY,
				BACKGROUND_CHECK_STATUS,
				BACKGROUND_DATE_CHECK,
				BENEFIT_GROUP_ID,
				BLOOD_TYPE,
				BUSINESS_GROUP_ID,
				COMMENT_ID,
				COORD_BEN_MED_CVG_END_DT,
				COORD_BEN_MED_CVG_STRT_DT,
				COORD_BEN_MED_EXT_ER,
				COORD_BEN_MED_INSR_CRR_IDENT,
				COORD_BEN_MED_INSR_CRR_NAME,
				COORD_BEN_MED_PLN_NO,
				COORD_BEN_MED_PL_NAME,
				COORD_BEN_NO_CVG_FLAG,
				CORRESPONDENCE_LANGUAGE,
				COUNTRY_OF_BIRTH,
				CREATED_BY,
				CREATION_DATE,
				CURRENT_APPLICANT_FLAG,
				CURRENT_EMPLOYEE_FLAG,
				CURRENT_EMP_OR_APL_FLAG,
				CURRENT_NPW_FLAG,
				DATE_EMPLOYEE_DATA_VERIFIED,
				DATE_OF_BIRTH,
				DATE_OF_DEATH,
				DPDNT_ADOPTION_DATE,
				DPDNT_VLNTRY_SVCE_FLAG,
				EFFECTIVE_END_DATE,
				EFFECTIVE_START_DATE,
				EMAIL_ADDRESS,
				EMPLOYEE_NUMBER,
				EXPENSE_CHECK_SEND_TO_ADDRESS,
				FAST_PATH_EMPLOYEE,
				FIRST_NAME,
				FTE_CAPACITY,
				FULL_NAME,
				GLOBAL_PERSON_ID,
				HOLD_APPLICANT_DATE_UNTIL,
				HONORS,
				INTERNAL_LOCATION,
				KNOWN_AS,
				LAST_MEDICAL_TEST_BY,
				LAST_MEDICAL_TEST_DATE,
				LAST_NAME,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				LAST_UPDATE_LOGIN,
				MAILSTOP,
				MARITAL_STATUS,
				MIDDLE_NAMES,
				NATIONALITY,
				NATIONAL_IDENTIFIER,
				NPW_NUMBER,
				OBJECT_VERSION_NUMBER,
				OFFICE_NUMBER,
				ON_MILITARY_SERVICE,
				ORDER_NAME,
				ORIGINAL_DATE_OF_HIRE,
				PARTY_ID,
				PERSON_ID,
				PERSON_TYPE_ID,
				PER_INFORMATION1,
				PER_INFORMATION10,
				PER_INFORMATION11,
				PER_INFORMATION12,
				PER_INFORMATION13,
				PER_INFORMATION14,
				PER_INFORMATION15,
				PER_INFORMATION16,
				PER_INFORMATION17,
				PER_INFORMATION18,
				PER_INFORMATION19,
				PER_INFORMATION2,
				PER_INFORMATION20,
				PER_INFORMATION21,
				PER_INFORMATION22,
				PER_INFORMATION23,
				PER_INFORMATION24,
				PER_INFORMATION25,
				PER_INFORMATION26,
				PER_INFORMATION27,
				PER_INFORMATION28,
				PER_INFORMATION29,
				PER_INFORMATION3,
				PER_INFORMATION30,
				PER_INFORMATION4,
				PER_INFORMATION5,
				PER_INFORMATION6,
				PER_INFORMATION7,
				PER_INFORMATION8,
				PER_INFORMATION9,
				PER_INFORMATION_CATEGORY,
				PREVIOUS_LAST_NAME,
				PRE_NAME_ADJUNCT,
				PROGRAM_APPLICATION_ID,
				PROGRAM_ID,
				PROGRAM_UPDATE_DATE,
				PROJECTED_START_DATE,
				RECEIPT_OF_DEATH_CERT_DATE,
				REGION_OF_BIRTH,
				REGISTERED_DISABLED_FLAG,
				REHIRE_AUTHORIZOR,
				REHIRE_REASON,
				REHIRE_RECOMMENDATION,
				REQUEST_ID,
				RESUME_EXISTS,
				RESUME_LAST_UPDATED,
				SECOND_PASSPORT_EXISTS,
				SEX,
				START_DATE,
				STUDENT_STATUS,
				SUFFIX,
				TITLE_,
				TOWN_OF_BIRTH,
				USES_TOBACCO_FLAG,
				VENDOR_ID,
				WORK_SCHEDULE,
				WORK_TELEPHONE
                )
                
SELECT 
                APPLICANT_NUMBER,
				ATTRIBUTE1,
				ATTRIBUTE10,
				ATTRIBUTE11,
				ATTRIBUTE12,
				ATTRIBUTE13,
				ATTRIBUTE14,
				ATTRIBUTE15,
				ATTRIBUTE16,
				ATTRIBUTE17,
				ATTRIBUTE18,
				ATTRIBUTE19,
				ATTRIBUTE2,
				ATTRIBUTE20,
				ATTRIBUTE21,
				ATTRIBUTE22,
				ATTRIBUTE23,
				ATTRIBUTE24,
				ATTRIBUTE25,
				ATTRIBUTE26,
				ATTRIBUTE27,
				ATTRIBUTE28,
				ATTRIBUTE29,
				ATTRIBUTE3,
				ATTRIBUTE30,
				ATTRIBUTE4,
				ATTRIBUTE5,
				ATTRIBUTE6,
				ATTRIBUTE7,
				ATTRIBUTE8,
				ATTRIBUTE9,
				ATTRIBUTE_CATEGORY,
				BACKGROUND_CHECK_STATUS,
				BACKGROUND_DATE_CHECK,
				BENEFIT_GROUP_ID,
				BLOOD_TYPE,
				BUSINESS_GROUP_ID,
				COMMENT_ID,
				COORD_BEN_MED_CVG_END_DT,
				COORD_BEN_MED_CVG_STRT_DT,
				COORD_BEN_MED_EXT_ER,
				COORD_BEN_MED_INSR_CRR_IDENT,
				COORD_BEN_MED_INSR_CRR_NAME,
				COORD_BEN_MED_PLN_NO,
				COORD_BEN_MED_PL_NAME,
				COORD_BEN_NO_CVG_FLAG,
				CORRESPONDENCE_LANGUAGE,
				COUNTRY_OF_BIRTH,
				CREATED_BY,
				CREATION_DATE,
				CURRENT_APPLICANT_FLAG,
				CURRENT_EMPLOYEE_FLAG,
				CURRENT_EMP_OR_APL_FLAG,
				CURRENT_NPW_FLAG,
				DATE_EMPLOYEE_DATA_VERIFIED,
				DATE_OF_BIRTH,
				DATE_OF_DEATH,
				DPDNT_ADOPTION_DATE,
				DPDNT_VLNTRY_SVCE_FLAG,
				EFFECTIVE_END_DATE,
				EFFECTIVE_START_DATE,
				EMAIL_ADDRESS,
				EMPLOYEE_NUMBER,
				EXPENSE_CHECK_SEND_TO_ADDRESS,
				FAST_PATH_EMPLOYEE,
				FIRST_NAME,
				FTE_CAPACITY,
				FULL_NAME,
				GLOBAL_PERSON_ID,
				HOLD_APPLICANT_DATE_UNTIL,
				HONORS,
				INTERNAL_LOCATION,
				KNOWN_AS,
				LAST_MEDICAL_TEST_BY,
				LAST_MEDICAL_TEST_DATE,
				LAST_NAME,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				LAST_UPDATE_LOGIN,
				MAILSTOP,
				MARITAL_STATUS,
				MIDDLE_NAMES,
				NATIONALITY,
				NATIONAL_IDENTIFIER,
				NPW_NUMBER,
				OBJECT_VERSION_NUMBER,
				OFFICE_NUMBER,
				ON_MILITARY_SERVICE,
				ORDER_NAME,
				ORIGINAL_DATE_OF_HIRE,
				PARTY_ID,
				PERSON_ID,
				PERSON_TYPE_ID,
				PER_INFORMATION1,
				PER_INFORMATION10,
				PER_INFORMATION11,
				PER_INFORMATION12,
				PER_INFORMATION13,
				PER_INFORMATION14,
				PER_INFORMATION15,
				PER_INFORMATION16,
				PER_INFORMATION17,
				PER_INFORMATION18,
				PER_INFORMATION19,
				PER_INFORMATION2,
				PER_INFORMATION20,
				PER_INFORMATION21,
				PER_INFORMATION22,
				PER_INFORMATION23,
				PER_INFORMATION24,
				PER_INFORMATION25,
				PER_INFORMATION26,
				PER_INFORMATION27,
				PER_INFORMATION28,
				PER_INFORMATION29,
				PER_INFORMATION3,
				PER_INFORMATION30,
				PER_INFORMATION4,
				PER_INFORMATION5,
				PER_INFORMATION6,
				PER_INFORMATION7,
				PER_INFORMATION8,
				PER_INFORMATION9,
				PER_INFORMATION_CATEGORY,
				PREVIOUS_LAST_NAME,
				PRE_NAME_ADJUNCT,
				PROGRAM_APPLICATION_ID,
				PROGRAM_ID,
				PROGRAM_UPDATE_DATE,
				PROJECTED_START_DATE,
				RECEIPT_OF_DEATH_CERT_DATE,
				REGION_OF_BIRTH,
				REGISTERED_DISABLED_FLAG,
				REHIRE_AUTHORIZOR,
				REHIRE_REASON,
				REHIRE_RECOMMENDATION,
				REQUEST_ID,
				RESUME_EXISTS,
				RESUME_LAST_UPDATED,
				SECOND_PASSPORT_EXISTS,
				SEX,
				START_DATE,
				STUDENT_STATUS,
				SUFFIX,
				TITLES,
				TOWN_OF_BIRTH,
				USES_TOBACCO_FLAG,
				VENDOR_ID,
				WORK_SCHEDULE,
				WORK_TELEPHONE
FROM FDW_STAGE_DB.LOAD_PER_ALL_PEOPLE_F_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------
--MAC_OA3NF_PO_DISTRIBUTIONS

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_DISTRIBUTIONS AS(
DELETE FROM FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_PO_DISTRIBUTIONS_s
where
   LOAD_PO_DISTRIBUTIONS_s.PO_DISTRIBUTION_ID = OA3NF_PO_DISTRIBUTIONS.PO_DISTRIBUTION_ID
   AND LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_ID = OA3NF_PO_DISTRIBUTIONS.VENDOR_PO_ID
   AND LOAD_PO_DISTRIBUTIONS_s.SET_OF_BOOKS_ID = OA3NF_PO_DISTRIBUTIONS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS ( 
   VENDOR_PO_LN_ACCRUED_CD,
   ACCRUE_ON_RECEIPT_CD,
   AMOUNT_BILLED,
   AWARD_ID,
   CHART_OF_ACCOUNT_ID,
   CREATION_DATE,
   DELIVER_TO_PERSON_ID,
   DESTINATION_TYPE_CODE,
   DISTRIBUTION_NUM,
   ENCUMBERED_FLAG,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   GL_CANCELLED_DATE,
   GL_CLOSED_DATE,
   LAST_UPDATE_DTTM,
   PO_LINE_LOCATION_ID,
   NONRECOVERABLE_TAX,
   ORG_ID,
   PO_DISTRIBUTION_ID,
   VENDOR_PO_ID,
   VENDOR_PO_LINE_ID,
   PROJECT_ID,
   QUANTITY_BILLED,
   QUANTITY_CANCELLED,
   QUANTITY_DELIVERED,
   QUANTITY_ORDERED,
   RATE,
   SOURCE_SYSTEM_ID,
   TASK_ID,
   AUTHORIZATION_STATUS,
   SET_OF_BOOKS_ID,
   P_SET_OF_BOOKS_ID,
   P_AMOUNT_BILLED,
   P_NONRECOVERABLE_TAX ) 
SELECT 
   VENDOR_PO_LN_ACCRUED_CD,
   ACCRUE_ON_RECEIPT_CD,
   AMOUNT_BILLED,
   AWARD_ID,
   CHART_OF_ACCOUNT_ID,
   CREATION_DATE,
   DELIVER_TO_PERSON_ID,
   DESTINATION_TYPE_CODE,
   DISTRIBUTION_NUM,
   ENCUMBERED_FLAG,
   EXPENDITURE_ITEM_DATE,
   EXPENDITURE_ORGANIZATION_ID,
   EXPENDITURE_TYPE,
   GL_CANCELLED_DATE,
   GL_CLOSED_DATE,
   LAST_UPDATE_DTTM,
   PO_LINE_LOCATION_ID,
   NONRECOVERABLE_TAX,
   ORG_ID,
   PO_DISTRIBUTION_ID,
   VENDOR_PO_ID,
   VENDOR_PO_LINE_ID,
   PROJECT_ID,
   QUANTITY_BILLED,
   QUANTITY_CANCELLED,
   QUANTITY_DELIVERED,
   QUANTITY_ORDERED,
   RATE,
   SOURCE_SYSTEM_ID,
   TASK_ID,
   AUTHORIZATION_STATUS,
   SET_OF_BOOKS_ID,
   P_SET_OF_BOOKS_ID,
   P_AMOUNT_BILLED,
   P_NONRECOVERABLE_TAX
FROM FDW_STAGE_DB.LOAD_PO_DISTRIBUTIONS_s;

DELETE FROM FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_PO_DISTRIB_DEL S
WHERE OA3NF_PO_DISTRIBUTIONS.VENDOR_PO_ID = S.VENDOR_PO_ID
AND   OA3NF_PO_DISTRIBUTIONS.PO_DISTRIBUTION_ID = S.PO_DISTRIBUTION_ID
AND   OA3NF_PO_DISTRIBUTIONS.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
AND OA3NF_PO_DISTRIBUTIONS.SET_OF_BOOKS_ID<>1002
;


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_DISTRIB_DEL AS (

DELETE FROM FDW_TABLES_DB.OA3NF_PO_DISTRIB_DEL where SET_OF_BOOKS_ID NOT IN(1002);


INSERT INTO FDW_TABLES_DB.OA3NF_PO_DISTRIB_DEL ( 
   PO_DISTRIBUTION_ID,
   VENDOR_PO_ID,
   SET_OF_BOOKS_ID) 
   
SELECT 
   PO_DISTRIBUTION_ID,
   VENDOR_PO_ID,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_DISTRIB_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------



REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_VENDOR_CONTACT (CBS_Studio INT, CBS_Distribution INT) AS(
DELETE FROM FDW_TABLES_DB.OA3NF_PO_VENDOR_CONTACT  WHERE SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_CONTACT


(
VENDOR_ID,
VENDOR_CONTACT_ID,
VENDOR_SITE_ID,
CONTACT_CREATION_DATE,
INACTIVE_DATE,
INACTIVE_FLAG,
FIRST_NAME,
MIDDLE_NAME,
LAST_NAME,
PREFIX,
TITLE_CODE,
MAIL_STOP,
AREA_CODE,
PHONE,
ALTERNATE_CONTACT_NAME,
DEPARTMENT,
EMAIL_ADDRESS,
URL_ADDRESS,
ALTERNATE_PHONE_AREA_CODE,
ALTERNATE_PHONE_NUMNER,
FAX_AREA_CODE,
FAX_NUMBER,
SET_OF_BOOKS_ID

)
SELECT
VENDOR_ID,
VENDOR_CONTACT_ID, 
VENDOR_SITE_ID,
CONTACT_CREATION_DATE,
INACTIVE_DATE,
INACTIVE_FLAG,
FIRST_NAME,
MIDDLE_NAME,
LAST_NAME,
PREFIX,
TITLE_CODE,
MAIL_STOP,
AREA_CODE,
PHONE,
ALTERNATE_CONTACT_NAME,
DEPARTMENT,
EMAIL_ADDRESS,
URL_ADDRESS,
ALTERNATE_PHONE_AREA_CODE,
ALTERNATE_PHONE_NUMNER,
FAX_AREA_CODE,
FAX_NUMBER,
:CBS_Studio AS  SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VENDOR_CONTACT_s
UNION ALL
SELECT
VENDOR_ID,
VENDOR_CONTACT_ID, 
VENDOR_SITE_ID,
CONTACT_CREATION_DATE,
INACTIVE_DATE,
INACTIVE_FLAG,
FIRST_NAME,
MIDDLE_NAME,
LAST_NAME,
PREFIX,
TITLE_CODE,
MAIL_STOP,
AREA_CODE,
PHONE,
ALTERNATE_CONTACT_NAME,
DEPARTMENT,
EMAIL_ADDRESS,
URL_ADDRESS,
ALTERNATE_PHONE_AREA_CODE,
ALTERNATE_PHONE_NUMNER,
FAX_AREA_CODE,
FAX_NUMBER,
:CBS_Distribution AS  SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VENDOR_CONTACT_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------





--MAC_OA3NF_PO_VENDOR_PO

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_VENDOR_PO AS (
DELETE FROM FDW_TABLES_DB.OA3NF_PO_VENDOR_PO
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_PO_VENDOR_PO_s
where
   LOAD_PO_VENDOR_PO_s.VENDOR_PO_ID = OA3NF_PO_VENDOR_PO.VENDOR_PO_ID
   AND
   LOAD_PO_VENDOR_PO_s.SET_OF_BOOKS_ID = OA3NF_PO_VENDOR_PO.SET_OF_BOOKS_ID);

INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_PO ( 
   AUTHORIZATION_STATUS,
   CLOSED_DATE,
   CURRENCY_CODE,
   CURR_CONV_DATE,
   CURR_CONV_RATE,
   CURR_CONV_RATE_TYPE,
   LAST_UPDATE_DTTM,
   NOTE_TO_RECEIVER,
   OA_BLANKET_TOTAL_AMOUNT,
   OA_ORG_ID,
   OA_PO_CLOSURE_STATUS,
   OA_REVISED_DATE,
   OA_VENDOR_CONTACT_ID,
   OA_VENDOR_SITE_ID,
   PO_APPROVED_DATE,
   PURCH_ORDER_DESC,
   PURCH_ORDER_NUMBER,
   VENDOR_ID,
   VENDOR_PO_BILL_TO_ADDRESS_ID,
   VENDOR_PO_CREATED_BY_PARTY_ID,
   VENDOR_PO_CREATE_DATE,
   VENDOR_PO_CREATE_DTTM,
   VENDOR_PO_ID,
   VENDOR_PO_REVISION_NUM,
   VENDOR_PO_SENT_TO_ADDRESS_ID,
   VENDOR_PO_TERM_ID,
   VENDOR_PO_TRANS_MODE_TYPE_CD,
   VENDOR_PO_TYPE_CD,
   VENDOR_SITE_ORG_ID,
   P_BLANKET_TOTAL_AMOUNT,
   SET_OF_BOOKS_ID) 
SELECT 
   AUTHORIZATION_STATUS,
   CLOSED_DATE,
   CURRENCY_CODE,
   CURR_CONV_DATE,
   CURR_CONV_RATE,
   CURR_CONV_RATE_TYPE,
   LAST_UPDATE_DTTM,
   NOTE_TO_RECEIVER,
   OA_BLANKET_TOTAL_AMOUNT,
   OA_ORG_ID,
   OA_PO_CLOSURE_STATUS,
   OA_REVISED_DATE,
   OA_VENDOR_CONTACT_ID,
   OA_VENDOR_SITE_ID,
   PO_APPROVED_DATE,
   PURCH_ORDER_DESC,
   PURCH_ORDER_NUMBER,
   VENDOR_ID,
   VENDOR_PO_BILL_TO_ADDRESS_ID,
   VENDOR_PO_CREATED_BY_PARTY_ID,
   VENDOR_PO_CREATE_DATE,
   VENDOR_PO_CREATE_DTTM,
   VENDOR_PO_ID,
   VENDOR_PO_REVISION_NUM,
   VENDOR_PO_SENT_TO_ADDRESS_ID,
   VENDOR_PO_TERM_ID,
   VENDOR_PO_TRANS_MODE_TYPE_CD,
   VENDOR_PO_TYPE_CD,
   VENDOR_SITE_ORG_ID,
   P_BLANKET_TOTAL_AMOUNT,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VENDOR_PO_s;


DELETE FROM FDW_TABLES_DB.OA3NF_PO_VENDOR_PO WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_PO_VNDR_PO_DEL S
WHERE OA3NF_PO_VENDOR_PO.VENDOR_PO_ID = S.VENDOR_PO_ID
and OA3NF_PO_VENDOR_PO.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
and OA3NF_PO_VENDOR_PO.SET_OF_BOOKS_ID<>1002 
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------




--MAC_OA3NF_PO_VENDOR_PO_LINE

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_VENDOR_PO_LINE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_PO_VENDOR_PO_LINE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_PO_VENDOR_PO_LINE_s
where
   LOAD_PO_VENDOR_PO_LINE_s.VENDOR_PO_ID = OA3NF_PO_VENDOR_PO_LINE.VENDOR_PO_ID
   AND LOAD_PO_VENDOR_PO_LINE_s.VENDOR_PO_LINE_ID = OA3NF_PO_VENDOR_PO_LINE.VENDOR_PO_LINE_ID
   AND LOAD_PO_VENDOR_PO_LINE_s.SET_OF_BOOKS_ID = OA3NF_PO_VENDOR_PO_LINE.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_PO_VENDOR_PO_LINE ( 
   AUTHORIZATION_STATUS,
   FUNC_CURR_UNIT_PRICE,
   LAST_UPDATE_DTTM,
   OA_ORG_ID,
   OA_PO_LINE_CLOSURE_STATUS,
   OA_PO_LINE_TRANS_REASON_CODE,
   OA_VENDOR_PO_LINE_TYPE_ID,
   OA_VENDOR_PRODUCT_NUM,
   PO_LINE_CANCEL_DATE,
   PO_LINE_CANCEL_FLAG,
   PO_LINE_CANCEL_REASON,
   PO_LINE_CLOSED_DATE,
   PO_LINE_CLOSED_FLAG,
   PO_LINE_CREATED_BY,
   VENDOR_PO_ID,
   VENDOR_PO_LINE_BUYER_PARTY_ID,
   VENDOR_PO_LINE_CONTRACT_ID,
   VENDOR_PO_LINE_CREATE_DTTM,
   VENDOR_PO_LINE_DESC,
   VENDOR_PO_LINE_ID,
   VENDOR_PO_LINE_ITEM_ID,
   VENDOR_PO_LINE_NUM,
   VENDOR_PO_LINE_TAXABLE_IND,
   VENDOR_PO_LINE_UNIT_PRICE,
   VENDOR_PO_LN_PRICE_CURRENCY_CD,
   VENDOR_PO_LN_PURCHASE_AMT,
   VENDOR_PO_LN_PURCHASE_UNIT_QTY,
   VENDOR_PO_LN_PURCHASE_UOM_CD,
   P_CURR_UNIT_PRICE,
   P_VENDOR_PO_LINE_UNIT_PRICE,
   P_VENDOR_PO_LN_PURCHASE_AMT,
   OA_PO_LINE_AMOUNT,
   SET_OF_BOOKS_ID   ) 
SELECT 
   AUTHORIZATION_STATUS,
   FUNC_CURR_UNIT_PRICE,
   LAST_UPDATE_DTTM,
   OA_ORG_ID,
   OA_PO_LINE_CLOSURE_STATUS,
   OA_PO_LINE_TRANS_REASON_CODE,
   OA_VENDOR_PO_LINE_TYPE_ID,
   OA_VENDOR_PRODUCT_NUM,
   PO_LINE_CANCEL_DATE,
   PO_LINE_CANCEL_FLAG,
   PO_LINE_CANCEL_REASON,
   PO_LINE_CLOSED_DATE,
   PO_LINE_CLOSED_FLAG,
   PO_LINE_CREATED_BY,
   VENDOR_PO_ID,
   VENDOR_PO_LINE_BUYER_PARTY_ID,
   VENDOR_PO_LINE_CONTRACT_ID,
   VENDOR_PO_LINE_CREATE_DTTM,
   VENDOR_PO_LINE_DESC,
   VENDOR_PO_LINE_ID,
   VENDOR_PO_LINE_ITEM_ID,
   VENDOR_PO_LINE_NUM,
   VENDOR_PO_LINE_TAXABLE_IND,
   VENDOR_PO_LINE_UNIT_PRICE,
   VENDOR_PO_LN_PRICE_CURRENCY_CD,
   VENDOR_PO_LN_PURCHASE_AMT,
   VENDOR_PO_LN_PURCHASE_UNIT_QTY,
   VENDOR_PO_LN_PURCHASE_UOM_CD,
   P_CURR_UNIT_PRICE,
   P_VENDOR_PO_LINE_UNIT_PRICE,
   P_VENDOR_PO_LN_PURCHASE_AMT,
   OA_PO_LINE_AMOUNT,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VENDOR_PO_LINE_s;

DELETE FROM FDW_TABLES_DB.OA3NF_PO_VENDOR_PO_LINE WHERE NOT EXISTS
(SELECT '1' FROM FDW_TABLES_DB.OA3NF_PO_VNDR_PO_LN_DEL S
WHERE OA3NF_PO_VENDOR_PO_LINE.VENDOR_PO_ID = S.VENDOR_PO_ID
AND   OA3NF_PO_VENDOR_PO_LINE.VENDOR_PO_LINE_ID = S.VENDOR_PO_LINE_ID
AND   OA3NF_PO_VENDOR_PO_LINE.SET_OF_BOOKS_ID = S.SET_OF_BOOKS_ID)
and OA3NF_PO_VENDOR_PO_LINE.SET_OF_BOOKS_ID<>1002 
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_VNDR_PO_DEL
AS (
DELETE FROM FDW_TABLES_DB.OA3NF_PO_VNDR_PO_DEL WHERE OA3NF_PO_VNDR_PO_DEL.SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_PO_VNDR_PO_DEL
(
VENDOR_PO_ID,
SET_OF_BOOKS_ID
)
SELECT 
LOAD_PO_VNDR_PO_DEL_s.VENDOR_PO_ID,
LOAD_PO_VNDR_PO_DEL_s.SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VNDR_PO_DEL_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_PO_VNDR_PO_LN_DEL AS(
DELETE FROM FDW_TABLES_DB.OA3NF_PO_VNDR_PO_LN_DEL  WHERE SET_OF_BOOKS_ID NOT IN 1002;
INSERT INTO FDW_TABLES_DB.OA3NF_PO_VNDR_PO_LN_DEL



(
VENDOR_PO_ID,
VENDOR_PO_LINE_ID,
SET_OF_BOOKS_ID

)
SELECT 
VENDOR_PO_ID,
VENDOR_PO_LINE_ID,
SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_PO_VNDR_PO_LN_DEL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_SET_OF_BOOKS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_SET_OF_BOOKS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_SET_OF_BOOKS_s
where
   LOAD_SET_OF_BOOKS_s.SET_OF_BOOKS_ID = OA3NF_SET_OF_BOOKS.SET_OF_BOOKS_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_SET_OF_BOOKS ( 
   OA_ACCOUNTED_PERIOD_TYPE,
   COA_STRUCTURE_ID,
   CURRENCY_CD,
   LAST_UPDATE_DTTM,
   OA_PERIOD_SET_NAME,
   SET_OF_BOOKS_DESC,
   SET_OF_BOOKS_ID,
   SET_OF_BOOKS_NAME,
   OA_MRC_TYPE_CD,
   OA_SHORT_NAME ) 
SELECT 
   OA_ACCOUNTED_PERIOD_TYPE,
   COA_STRUCTURE_ID,
   CURRENCY_CODE,
   LAST_UPDATE_DTTM,
   OA_PERIOD_SET_NAME,
   SET_OF_BOOKS_DESC,
   SET_OF_BOOKS_ID,
   SET_OF_BOOKS_NAME,
   OA_MRC_TYPE_CD,
   OA_SHORT_NAME
FROM FDW_STAGE_DB.LOAD_SET_OF_BOOKS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_USER_LIST AS (
DELETE FROM FDW_TABLES_DB.OA3NF_USER_LIST
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_USER_LIST_s
where
   LOAD_USER_LIST_s.USER_ID = OA3NF_USER_LIST.USER_ID
   AND
   LOAD_USER_LIST_s.SET_OF_BOOKS_ID = OA3NF_USER_LIST.SET_OF_BOOKS_ID);

INSERT INTO FDW_TABLES_DB.OA3NF_USER_LIST ( 
   DESCRIPTION,
   EMPLOYEE_ID,
   LAST_UPDATE_DTTM,
   USER_ID,
   USER_NAME,
   SET_OF_BOOKS_ID) 
SELECT 
   DESCRIPTION,
   EMPLOYEE_ID,
   LAST_UPDATE_DTTM,
   USER_ID,
   USER_NAME,
   SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_USER_LIST_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_VENDOR AS(
DELETE FROM FDW_TABLES_DB.OA3NF_VENDOR;
INSERT INTO FDW_TABLES_DB.OA3NF_VENDOR
(
VENDOR_ID,
VENDOR_TYPE_CD,
VENDOR_PAYMENT_PRIORITY_CD,
EARNING_STATEMENT_TYPE_CD,
VENDOR_FREIGHT_TERMS,
OA_VENDOR_NAME,
OA_ACTIVE_END_DATE,
OA_ACTIVE_START_DATE,
OA_HOLD_REASON,
OA_INVOICE_AMOUNT_LIMIT,
OA_MINORITY_BUSINESS,
OA_SMALL_BUSINESS_FLAG,
OA_TAX_FEDERAL_REPORT_FLAG,
OA_TAX_REPORTING_NAME,
OA_VENDOR_1099_NUM,
OA_VENDOR_1099_TYPE,
OA_VENDOR_INDUSTRY_CLASS,
OA_VENDOR_NUMBER,
OA_VENDOR_ORG_TYPE,
OA_CUSTOMER_NUM,
OA_VENDOR_PAY_GROUP,
OA_WOMEN_OWNED_FLAG,
OA_TAX_STATE_REPORT_FLAG,
OA_ACTIVE_FLAG,
LAST_UPDATE_DTTM,
ALLOW_SUBSTITUTE_RECEIPTS_FLAG,
ALLOW_UNORDERED_RECEIPTS_FLAG,
AUTO_CALCULATE_INTEREST_FLAG,
CREATION_DATE,
DAYS_EARLY_RECEIPT_ALLOWED,
DAYS_LATE_RECEIPT_ALLOWED,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
END_DATE_ACTIVE,
ENFORCE_SHIP_TO_LOCATION_CODE,
FEDERAL_REPORTABLE_FLAG,
HOLD_DATE,
HOLD_FLAG,
INCOME_TAX_TYPE,
INSPECTION_REQUIRED_FLAG,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
MINORITY_GROUP_LOOKUP_CODE,
NAME_CONTROL,
ONE_TIME_FLAG,
ORGANIZATION_TYPE_LOOKUP_CODE,
PARENT_VENDOR,
PAY_ALONE_FLAG,
PAYMENT_CURRENCY_CODE,
PURCHASING_HOLD_DATE,
PURCHASING_HOLD_FLAG,
PURCHASING_HOLD_REASON,
QTY_RCV_EXCEPTION_CODE,
QTY_RCV_TOLERANCE,
RECEIPT_DAYS_EXCEPTION_CODE,
RECEIPT_REQUIRED_FLAG,
ROUTING_NAME,
SET_OF_BOOKS_NAME,
SMALL_BUSINESS_FLAG,
STANDARD_INDUSTRY_CLASS,
START_DATE_ACTIVE,
STATE_REPORTABLE_FLAG,
TAX_CALCULATION_LEVEL,
TAX_ID_NUMBER,
TAX_REPORTING_NAME,
TAX_VERIFICATION_DATE,
VAT_REGISTRATION_NUMBER,
FINANCIAL_VENDOR_TYPE,
MGIS_SUPPLIER_ID,
RELATED_PARTY_FLAG,
EDD_FIRST_NAME,
EDD_LAST_NAME,
EDD_MIDDLE_INITIAL,
EDD_REPORT_INDICATOR,
VENDOR_GROUPING_02_STU,
VENDOR_WORLD_AREA,
VENDOR_GROUPING_01_DIS,
VENDOR_GROUPING_02_DIS,
VENDOR_GROUPING_03_DIS,
VENDOR_GROUPING_03_STU,
RELATED_PARTY_GROUPING,
VENDOR_GROUPING_01_STU,
VENDOR_CREATION_DATE,
VENDOR_NAME,
VENDOR_NUMBER,
VENDOR_TYPE_CODE,
WITHHOLDING_START_DATE,
WITHHOLDING_STATUS_LOOKUP_CODE,
WOMEN_OWNED_FLAG,
TAX_ROUNDING_RULE,
INACTIVE_FLAG,
CREATION_DATE_VEND,
DISTR_AMTS_INCL_TAX_FLG_VEND,
INVOICE_CURRENCY_CODE_VEND,
LAST_UPDATE_DATE_VEND,
PAY_ALONE_FLAG_VEND,
PAYMENT_CURRENCY_CODE_VEND,
TAX_CALCULATION_LEVEL_VEND,
TAX_ROUNDING_RULE_VEND,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
OLD_VENDOR_NUMBER,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12

)
SELECT
LOAD_VENDOR_s.VENDOR_ID,
LOAD_VENDOR_s.VENDOR_TYPE_CD,
LOAD_VENDOR_s.VENDOR_PAYMENT_PRIORITY_CD,
LOAD_VENDOR_s.EARNING_STATEMENT_TYPE_CD,
LOAD_VENDOR_s.VENDOR_FREIGHT_TERMS,
LOAD_VENDOR_s.OA_VENDOR_NAME,
LOAD_VENDOR_s.OA_ACTIVE_END_DATE,
LOAD_VENDOR_s.OA_ACTIVE_START_DATE,
LOAD_VENDOR_s.OA_HOLD_REASON,
LOAD_VENDOR_s.OA_INVOICE_AMOUNT_LIMIT,
LOAD_VENDOR_s.OA_MINORITY_BUSINESS,
LOAD_VENDOR_s.OA_SMALL_BUSINESS_FLAG,
LOAD_VENDOR_s.OA_TAX_FEDERAL_REPORT_FLAG,
LOAD_VENDOR_s.OA_TAX_REPORTING_NAME,
LOAD_VENDOR_s.OA_VENDOR_1099_NUM,
LOAD_VENDOR_s.OA_VENDOR_1099_TYPE,
LOAD_VENDOR_s.OA_VENDOR_INDUSTRY_CLASS,
LOAD_VENDOR_s.OA_VENDOR_NUMBER,
LOAD_VENDOR_s.OA_VENDOR_ORG_TYPE,
LOAD_VENDOR_s.OA_CUSTOMER_NUM,
LOAD_VENDOR_s.OA_VENDOR_PAY_GROUP,
LOAD_VENDOR_s.OA_WOMEN_OWNED_FLAG,
LOAD_VENDOR_s.OA_TAX_STATE_REPORT_FLAG,
LOAD_VENDOR_s.OA_ACTIVE_FLAG,
LOAD_VENDOR_s.LAST_UPDATE_DTTM,
LOAD_VENDOR_s.ALLOW_SUBSTITUTE_RECEIPTS_FLAG,
LOAD_VENDOR_s.ALLOW_UNORDERED_RECEIPTS_FLAG,
LOAD_VENDOR_s.AUTO_CALCULATE_INTEREST_FLAG,
LOAD_VENDOR_s.CREATION_DATE,
LOAD_VENDOR_s.DAYS_EARLY_RECEIPT_ALLOWED,
LOAD_VENDOR_s.DAYS_LATE_RECEIPT_ALLOWED,
LOAD_VENDOR_s.DISTRIB_AMTS_INCLUDE_TAX_FLAG,
LOAD_VENDOR_s.END_DATE_ACTIVE,
LOAD_VENDOR_s.ENFORCE_SHIP_TO_LOCATION_CODE,
LOAD_VENDOR_s.FEDERAL_REPORTABLE_FLAG,
LOAD_VENDOR_s.HOLD_DATE,
LOAD_VENDOR_s.HOLD_FLAG,
LOAD_VENDOR_s.INCOME_TAX_TYPE,
LOAD_VENDOR_s.INSPECTION_REQUIRED_FLAG,
LOAD_VENDOR_s.INVOICE_CURRENCY_CODE,
LOAD_VENDOR_s.LAST_UPDATE_DATE,
LOAD_VENDOR_s.MINORITY_GROUP_LOOKUP_CODE,
LOAD_VENDOR_s.NAME_CONTROL,
LOAD_VENDOR_s.ONE_TIME_FLAG,
LOAD_VENDOR_s.ORGANIZATION_TYPE_LOOKUP_CODE,
LOAD_VENDOR_s.PARENT_VENDOR,
LOAD_VENDOR_s.PAY_ALONE_FLAG,
LOAD_VENDOR_s.PAYMENT_CURRENCY_CODE,
LOAD_VENDOR_s.PURCHASING_HOLD_DATE,
LOAD_VENDOR_s.PURCHASING_HOLD_FLAG,
LOAD_VENDOR_s.PURCHASING_HOLD_REASON,
LOAD_VENDOR_s.QTY_RCV_EXCEPTION_CODE,
LOAD_VENDOR_s.QTY_RCV_TOLERANCE,
LOAD_VENDOR_s.RECEIPT_DAYS_EXCEPTION_CODE,
LOAD_VENDOR_s.RECEIPT_REQUIRED_FLAG,
LOAD_VENDOR_s.ROUTING_NAME,
LOAD_VENDOR_s.SET_OF_BOOKS_NAME,
LOAD_VENDOR_s.SMALL_BUSINESS_FLAG,
LOAD_VENDOR_s.STANDARD_INDUSTRY_CLASS,
LOAD_VENDOR_s.START_DATE_ACTIVE,
LOAD_VENDOR_s.STATE_REPORTABLE_FLAG,
LOAD_VENDOR_s.TAX_CALCULATION_LEVEL,
LOAD_VENDOR_s.TAX_ID_NUMBER,
LOAD_VENDOR_s.TAX_REPORTING_NAME,
LOAD_VENDOR_s.TAX_VERIFICATION_DATE,
LOAD_VENDOR_s.VAT_REGISTRATION_NUMBER,
LOAD_VENDOR_s.FINANCIAL_VENDOR_TYPE,
LOAD_VENDOR_s.MGIS_SUPPLIER_ID,
LOAD_VENDOR_s.RELATED_PARTY_FLAG,
LOAD_VENDOR_s.EDD_FIRST_NAME,
LOAD_VENDOR_s.EDD_LAST_NAME,
LOAD_VENDOR_s.EDD_MIDDLE_INITIAL,
LOAD_VENDOR_s.EDD_REPORT_INDICATOR,
LOAD_VENDOR_s.VENDOR_GROUPING_02_STU,
LOAD_VENDOR_s.VENDOR_WORLD_AREA,
LOAD_VENDOR_s.VENDOR_GROUPING_01_DIS,
LOAD_VENDOR_s.VENDOR_GROUPING_02_DIS,
LOAD_VENDOR_s.VENDOR_GROUPING_03_DIS,
LOAD_VENDOR_s.VENDOR_GROUPING_03_STU,
LOAD_VENDOR_s.RELATED_PARTY_GROUPING,
LOAD_VENDOR_s.VENDOR_GROUPING_01_STU,
LOAD_VENDOR_s.VENDOR_CREATION_DATE,
LOAD_VENDOR_s.VENDOR_NAME,
LOAD_VENDOR_s.VENDOR_NUMBER,
LOAD_VENDOR_s.VENDOR_TYPE_CODE,
LOAD_VENDOR_s.WITHHOLDING_START_DATE,
LOAD_VENDOR_s.WITHHOLDING_STATUS_LOOKUP_CODE,
LOAD_VENDOR_s.WOMEN_OWNED_FLAG,
LOAD_VENDOR_s.TAX_ROUNDING_RULE,
LOAD_VENDOR_s.INACTIVE_FLAG,
LOAD_VENDOR_s.CREATION_DATE_VEND,
LOAD_VENDOR_s.DISTR_AMTS_INCL_TAX_FLG_VEND,
LOAD_VENDOR_s.INVOICE_CURRENCY_CODE_VEND,
LOAD_VENDOR_s.LAST_UPDATE_DATE_VEND,
LOAD_VENDOR_s.PAY_ALONE_FLAG_VEND,
LOAD_VENDOR_s.PAYMENT_CURRENCY_CODE_VEND,
LOAD_VENDOR_s.TAX_CALCULATION_LEVEL_VEND,
LOAD_VENDOR_s.TAX_ROUNDING_RULE_VEND,
LOAD_VENDOR_s.ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
coalesce(SRC.OLD_VENDOR_NBR,'NA') as OLD_VENDOR_NUMBER,
LOAD_VENDOR_s.ATTRIBUTE1,
LOAD_VENDOR_s.ATTRIBUTE2,
LOAD_VENDOR_s.ATTRIBUTE5,
LOAD_VENDOR_s.ATTRIBUTE6,
LOAD_VENDOR_s.ATTRIBUTE7,
LOAD_VENDOR_s.ATTRIBUTE8,
LOAD_VENDOR_s.ATTRIBUTE9,
LOAD_VENDOR_s.ATTRIBUTE10,
LOAD_VENDOR_s.ATTRIBUTE11,
LOAD_VENDOR_s.ATTRIBUTE12

FROM FDW_STAGE_DB.LOAD_VENDOR_s
LEFT JOIN (SELECT NEW_VENDOR_NBR,OLD_VENDOR_NBR from fdw_stage_db.LOAD_VENDOR_MAP 
qualify row_number() over (partition by NEW_VENDOR_NBR order by OLD_VENDOR_NBR) = 1) SRC
ON(SRC.NEW_VENDOR_NBR=CAST (LOAD_VENDOR_s.VENDOR_NUMBER AS VARCHAR(50)))
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--OA3NF_VENDOR_HIST

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_VENDOR_HIST AS(

INSERT INTO FDW_TABLES_DB.OA3NF_VENDOR_HIST
(
VENDOR_ID,
VENDOR_TYPE_CD,
VENDOR_PAYMENT_PRIORITY_CD,
EARNING_STATEMENT_TYPE_CD,
VENDOR_FREIGHT_TERMS,
OA_VENDOR_NAME,
OA_ACTIVE_END_DATE,
OA_ACTIVE_START_DATE,
OA_HOLD_REASON,
OA_INVOICE_AMOUNT_LIMIT,
OA_MINORITY_BUSINESS,
OA_SMALL_BUSINESS_FLAG,
OA_TAX_FEDERAL_REPORT_FLAG,
OA_TAX_REPORTING_NAME,
OA_VENDOR_1099_NUM,
OA_VENDOR_1099_TYPE,
OA_VENDOR_INDUSTRY_CLASS,
OA_VENDOR_NUMBER,
OA_VENDOR_ORG_TYPE,
OA_CUSTOMER_NUM,
OA_VENDOR_PAY_GROUP,
OA_WOMEN_OWNED_FLAG,
OA_TAX_STATE_REPORT_FLAG,
OA_ACTIVE_FLAG,
LAST_UPDATE_DTTM,
ALLOW_SUBSTITUTE_RECEIPTS_FLAG,
ALLOW_UNORDERED_RECEIPTS_FLAG,
AUTO_CALCULATE_INTEREST_FLAG,
CREATION_DATE,
DAYS_EARLY_RECEIPT_ALLOWED,
DAYS_LATE_RECEIPT_ALLOWED,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
END_DATE_ACTIVE,
ENFORCE_SHIP_TO_LOCATION_CODE,
FEDERAL_REPORTABLE_FLAG,
HOLD_DATE,
HOLD_FLAG,
INCOME_TAX_TYPE,
INSPECTION_REQUIRED_FLAG,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
MINORITY_GROUP_LOOKUP_CODE,
NAME_CONTROL,
ONE_TIME_FLAG,
ORGANIZATION_TYPE_LOOKUP_CODE,
PARENT_VENDOR,
PAY_ALONE_FLAG,
PAYMENT_CURRENCY_CODE,
PURCHASING_HOLD_DATE,
PURCHASING_HOLD_FLAG,
PURCHASING_HOLD_REASON,
QTY_RCV_EXCEPTION_CODE,
QTY_RCV_TOLERANCE,
RECEIPT_DAYS_EXCEPTION_CODE,
RECEIPT_REQUIRED_FLAG,
ROUTING_NAME,
SET_OF_BOOKS_NAME,
SMALL_BUSINESS_FLAG,
STANDARD_INDUSTRY_CLASS,
START_DATE_ACTIVE,
STATE_REPORTABLE_FLAG,
TAX_CALCULATION_LEVEL,
TAX_ID_NUMBER,
TAX_REPORTING_NAME,
TAX_VERIFICATION_DATE,
VAT_REGISTRATION_NUMBER,
SECOND_APPROVER,
ALPHA_SHORT_NAME,
DIVISION_DEPARTMENT,
EDD_FIRST_NAME,
EDD_LAST_NAME,
EDD_MIDDLE_INITIAL,
EDD_REPORT_INDICATOR,
LOAN_OUT_SSN_NO,
PAL_VENDOR,
PRINT_ON_REPORT,
QST_NUMBER,
REQUISTOR_1ST_APPROVER,
SUB_CORP,
VENDOR_CREATION_DATE,
VENDOR_NAME,
VENDOR_NUMBER,
VENDOR_TYPE_CODE,
WITHHOLDING_START_DATE,
WITHHOLDING_STATUS_LOOKUP_CODE,
WOMEN_OWNED_FLAG,
TAX_ROUNDING_RULE,
INACTIVE_FLAG,
CREATION_DATE_VEND,
DISTR_AMTS_INCL_TAX_FLG_VEND,
INVOICE_CURRENCY_CODE_VEND,
LAST_UPDATE_DATE_VEND,
PAY_ALONE_FLAG_VEND,
PAYMENT_CURRENCY_CODE_VEND,
TAX_CALCULATION_LEVEL_VEND,
TAX_ROUNDING_RULE_VEND,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
VENDOR_CONVERSION_FLAG
)
SELECT
VENDOR_ID,
VENDOR_TYPE_CD,
VENDOR_PAYMENT_PRIORITY_CD,
EARNING_STATEMENT_TYPE_CD,
VENDOR_FREIGHT_TERMS,
OA_VENDOR_NAME,
OA_ACTIVE_END_DATE,
OA_ACTIVE_START_DATE,
OA_HOLD_REASON,
OA_INVOICE_AMOUNT_LIMIT,
OA_MINORITY_BUSINESS,
OA_SMALL_BUSINESS_FLAG,
OA_TAX_FEDERAL_REPORT_FLAG,
OA_TAX_REPORTING_NAME,
OA_VENDOR_1099_NUM,
OA_VENDOR_1099_TYPE,
OA_VENDOR_INDUSTRY_CLASS,
OA_VENDOR_NUMBER,
OA_VENDOR_ORG_TYPE,
OA_CUSTOMER_NUM,
OA_VENDOR_PAY_GROUP,
OA_WOMEN_OWNED_FLAG,
OA_TAX_STATE_REPORT_FLAG,
OA_ACTIVE_FLAG,
LAST_UPDATE_DTTM,
ALLOW_SUBSTITUTE_RECEIPTS_FLAG,
ALLOW_UNORDERED_RECEIPTS_FLAG,
AUTO_CALCULATE_INTEREST_FLAG,
CREATION_DATE,
DAYS_EARLY_RECEIPT_ALLOWED,
DAYS_LATE_RECEIPT_ALLOWED,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
END_DATE_ACTIVE,
ENFORCE_SHIP_TO_LOCATION_CODE,
FEDERAL_REPORTABLE_FLAG,
HOLD_DATE,
HOLD_FLAG,
INCOME_TAX_TYPE,
INSPECTION_REQUIRED_FLAG,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
MINORITY_GROUP_LOOKUP_CODE,
NAME_CONTROL,
ONE_TIME_FLAG,
ORGANIZATION_TYPE_LOOKUP_CODE,
PARENT_VENDOR,
PAY_ALONE_FLAG,
PAYMENT_CURRENCY_CODE,
PURCHASING_HOLD_DATE,
PURCHASING_HOLD_FLAG,
PURCHASING_HOLD_REASON,
QTY_RCV_EXCEPTION_CODE,
QTY_RCV_TOLERANCE,
RECEIPT_DAYS_EXCEPTION_CODE,
RECEIPT_REQUIRED_FLAG,
ROUTING_NAME,
SET_OF_BOOKS_NAME,
SMALL_BUSINESS_FLAG,
STANDARD_INDUSTRY_CLASS,
START_DATE_ACTIVE,
STATE_REPORTABLE_FLAG,
TAX_CALCULATION_LEVEL,
TAX_ID_NUMBER,
TAX_REPORTING_NAME,
TAX_VERIFICATION_DATE,
VAT_REGISTRATION_NUMBER,
SECOND_APPROVER,
ALPHA_SHORT_NAME,
DIVISION_DEPARTMENT,
EDD_FIRST_NAME,
EDD_LAST_NAME,
EDD_MIDDLE_INITIAL,
EDD_REPORT_INDICATOR,
LOAN_OUT_SSN_NO,
PAL_VENDOR,
PRINT_ON_REPORT,
QST_NUMBER,
REQUISTOR_1ST_APPROVER,
SUB_CORP,
VENDOR_CREATION_DATE,
VENDOR_NAME,
VENDOR_NUMBER,
VENDOR_TYPE_CODE,
WITHHOLDING_START_DATE,
WITHHOLDING_STATUS_LOOKUP_CODE,
WOMEN_OWNED_FLAG,
TAX_ROUNDING_RULE,
INACTIVE_FLAG,
CREATION_DATE_VEND,
DISTR_AMTS_INCL_TAX_FLG_VEND,
INVOICE_CURRENCY_CODE_VEND,
LAST_UPDATE_DATE_VEND,
PAY_ALONE_FLAG_VEND,
PAYMENT_CURRENCY_CODE_VEND,
TAX_CALCULATION_LEVEL_VEND,
TAX_ROUNDING_RULE_VEND,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
'NA' VENDOR_CONVERSION_FLAG
FROM FDM_TABLES_DB.OA3NF_VENDOR;



--STEP 2  Query to update CONVERSION_FLAG = 'Y'
UPDATE FDW_TABLES_DB.OA3NF_VENDOR_HIST SET VENDOR_CONVERSION_FLAG ='Y' WHERE FDW_TABLES_DB.OA3NF_VENDOR_HIST.VENDOR_NUMBER=FDW_STAGE_DB.LOAD_VENDOR_MAP.OLD_VENDOR_NBR; 


--STEP 3 Query to update CONVERSION_FLAG = 'N'
UPDATE FDW_TABLES_DB.OA3NF_VENDOR_HIST SET VENDOR_CONVERSION_FLAG ='N' WHERE FDW_TABLES_DB.OA3NF_VENDOR_HIST.VENDOR_NUMBER IN

(

(select distinct vendor_number as vendor_nbr from FDM_TABLES_DB.oa3nf_vendor v where exists (select vendor_id  from FDM_TABLES_DB.OA3NF_AP_INVOICE i where i .vendor_id =  v.vendor_id)--from ap_invset_of_books_name = 'CSI_CTD BOOKS'
Union
select distinct vendor_number as vendor_nbr  from FDM_TABLES_DB.oa3nf_vendor v where exists (select oa_vendor_id  from FDM_TABLES_DB.OA3NF_AP_PAYMENT p  where  p.oa_vendor_id =  v.vendor_id) 
)
MINUS
select  distinct old_vendor_nbr as vendor_nbr  from FDW_STAGE_DB.LOAD_VENDOR_MAP M );  


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_VENDOR_SITE AS (
DELETE FROM FDW_TABLES_DB.OA3NF_VENDOR_SITE
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_VENDOR_SITE_s
where
   LOAD_VENDOR_SITE_s.VENDOR_ID = OA3NF_VENDOR_SITE.VENDOR_ID
   AND LOAD_VENDOR_SITE_s.VENDOR_SITE_ID = OA3NF_VENDOR_SITE.VENDOR_SITE_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_VENDOR_SITE ( 
VENDOR_ID,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
COUNTRY,
PHONE,
PROVINCE,
STATE_CD,
VENDOR_ALWAYS_TAKE_DISC_FLAG,
FREIGHT_TERMS_LOOKUP_CODE,
SHIP_VIA_LOOKUP_CODE,
VENDOR_SITE_CODE,
VENDOR_SITE_ID,
ZIP,
ORG_ID,
LAST_UPDATE_DTTM,
VENDOR_SITE_ORG_ID,
ADDRESS_LINE4,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
ALTERNATE_SUPPLIER_SITE_CODE,
ALWAYS_TAKE_DISC_FLAG,
ATTENTION_AR_FLAG,
AUTO_TAX_CALC_FLAG,
COUNTY,
CREATION_DATE,
CUSTOMER_NUMBER_VENDOR_SITE,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
EMAIL_ADDRESS,
EXCLUDE_FREIGHT_FROM_DISCOUNT,
FAX,
FAX_AREA_CODE,
HOLD_ALL_PAYMENTS_FLAG,
HOLD_FUTURE_PAYMENTS_FLAG,
HOLD_REASON,
HOLD_UNMATCHED_INVOICES_FLAG,
INACTIVE_DATE,
INACTIVE_FLAG,
INVOICE_AMOUNT_LIMIT,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
NOTIFICATION_METHOD_CODE,
OFFSET_TAX_FLAG,
OFFSET_TAX_NAME,
PAY_ALONE_FLAG,
PAY_DATE_BASIS_LOOKUP_CODE,
PAY_GROUP_LOOKUP_CODE,
PAY_ON_CODE,
PAY_SITE_FLAG,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAYMENT_PRIORITY,
POSTAL_CODE,
PRIMARY_PAY_SITE_FLAG,
PROCUREMENT_CARD_SITE_FLAG,
PURCHASING_SITE_FLAG,
REMITTANCE_EMAIL,
RFQ_ONLY_SITE_FLAG,
SITE_CREATION_DATE,
STATE,
TAX_CALCULATION_LEVEL,
TAX_REPORTING_SITE_FLAG,
TAX_ROUNDING_RULE,
TELEX,
TERMS_DATE_BASIS,
VAT_CODE,
VAT_REGISTRATION_NUMBER,
CBS_VENDOR_RELATIONSHIP,
COMMENTS,
PREVIOUS_ADDRESS,
BANK_ACCOUNT_NAME,
BANK_ACCOUNT_NUMBER,
BANK_ACCOUNT_TYPE,
BANK_NUMBER,
HOLD_REASON_VENDOR_SITE,
INVOICE_AMT_LIMIT_VENDOR_SITE,
COUNTRY_OF_ORIGIN_CODE,
VENDOR_LEGACY_NUMBER,
CBS_VENDOR_USAGE,
ENFORCE_P_CARD,
VENDOR_REQUESTOR_NAME,
VENDOR_WORLD_AREA,
VENDOR_CATEGORY,
RELATED_PARTY_FLAG,
RELATED_PARTY_GROUPING,
FINANCIAL_VENDOR_TYPE,
VENDOR_GROUPING_01,
VENDOR_GROUPING_02,
VENDOR_GROUPING_03
   ) 
SELECT 
   VENDOR_ID,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
COUNTRY,
PHONE,
PROVINCE,
STATE_CD,
VENDOR_ALWAYS_TAKE_DISC_FLAG,
FREIGHT_TERMS_LOOKUP_CODE,
SHIP_VIA_LOOKUP_CODE,
VENDOR_SITE_CODE,
VENDOR_SITE_ID,
ZIP,
ORG_ID,
LAST_UPDATE_DTTM,
VENDOR_SITE_ORG_ID,
ADDRESS_LINE4,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
ALTERNATE_SUPPLIER_SITE_CODE,
ALWAYS_TAKE_DISC_FLAG,
ATTENTION_AR_FLAG,
AUTO_TAX_CALC_FLAG,
COUNTY,
CREATION_DATE,
CUSTOMER_NUMBER_VENDOR_SITE,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
EMAIL_ADDRESS,
EXCLUDE_FREIGHT_FROM_DISCOUNT,
FAX,
FAX_AREA_CODE,
HOLD_ALL_PAYMENTS_FLAG,
HOLD_FUTURE_PAYMENTS_FLAG,
HOLD_REASON,
HOLD_UNMATCHED_INVOICES_FLAG,
INACTIVE_DATE,
INACTIVE_FLAG,
INVOICE_AMOUNT_LIMIT,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
NOTIFICATION_METHOD_CODE,
OFFSET_TAX_FLAG,
OFFSET_TAX_NAME,
PAY_ALONE_FLAG,
PAY_DATE_BASIS_LOOKUP_CODE,
PAY_GROUP_LOOKUP_CODE,
PAY_ON_CODE,
PAY_SITE_FLAG,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAYMENT_PRIORITY,
POSTAL_CODE,
PRIMARY_PAY_SITE_FLAG,
PROCUREMENT_CARD_SITE_FLAG,
PURCHASING_SITE_FLAG,
REMITTANCE_EMAIL,
RFQ_ONLY_SITE_FLAG,
SITE_CREATION_DATE,
STATE,
TAX_CALCULATION_LEVEL,
TAX_REPORTING_SITE_FLAG,
TAX_ROUNDING_RULE,
TELEX,
TERMS_DATE_BASIS,
VAT_CODE,
VAT_REGISTRATION_NUMBER,
CBS_VENDOR_RELATIONSHIP,
COMMENTS,
PREVIOUS_ADDRESS,
BANK_ACCOUNT_NAME,
BANK_ACCOUNT_NUMBER,
BANK_ACCOUNT_TYPE,
BANK_NUMBER,
HOLD_REASON_VENDOR_SITE,
INVOICE_AMT_LIMIT_VENDOR_SITE,
COUNTRY_OF_ORIGIN_CODE,
VENDOR_LEGACY_NUMBER,
CBS_VENDOR_USAGE,
ENFORCE_P_CARD,
VENDOR_REQUESTOR_NAME,
VENDOR_WORLD_AREA,
VENDOR_CATEGORY,
RELATED_PARTY_FLAG,
RELATED_PARTY_GROUPING,
FINANCIAL_VENDOR_TYPE,
VENDOR_GROUPING_01,
VENDOR_GROUPING_02,
VENDOR_GROUPING_03
FROM FDW_STAGE_DB.LOAD_VENDOR_SITE_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


--OA3NF_VENDOR_SITE_HIST

REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_VENDOR_SITE_HIST AS(

INSERT INTO FDW_TABLES_DB.OA3NF_VENDOR_SITE_HIST
(
VENDOR_ID,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
COUNTRY,
PHONE,
PROVINCE,
STATE_CD,
VENDOR_ALWAYS_TAKE_DISC_FLAG,
FREIGHT_TERMS_LOOKUP_CODE,
SHIP_VIA_LOOKUP_CODE,
VENDOR_SITE_CODE,
VENDOR_SITE_ID,
ZIP,
ORG_ID,
LAST_UPDATE_DTTM,
VENDOR_SITE_ORG_ID,
ADDRESS_LINE4,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
ALTERNATE_SUPPLIER_SITE_CODE,
ALWAYS_TAKE_DISC_FLAG,
ATTENTION_AR_FLAG,
AUTO_TAX_CALC_FLAG,
COUNTY,
CREATION_DATE,
CUSTOMER_NUMBER_VENDOR_SITE,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
EMAIL_ADDRESS,
EXCLUDE_FREIGHT_FROM_DISCOUNT,
FAX,
FAX_AREA_CODE,
HOLD_ALL_PAYMENTS_FLAG,
HOLD_FUTURE_PAYMENTS_FLAG,
HOLD_REASON,
HOLD_UNMATCHED_INVOICES_FLAG,
INACTIVE_DATE,
INACTIVE_FLAG,
INVOICE_AMOUNT_LIMIT,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
NOTIFICATION_METHOD_CODE,
OFFSET_TAX_FLAG,
OFFSET_TAX_NAME,
PAY_ALONE_FLAG,
PAY_DATE_BASIS_LOOKUP_CODE,
PAY_GROUP_LOOKUP_CODE,
PAY_ON_CODE,
PAY_SITE_FLAG,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAYMENT_PRIORITY,
POSTAL_CODE,
PRIMARY_PAY_SITE_FLAG,
PROCUREMENT_CARD_SITE_FLAG,
PURCHASING_SITE_FLAG,
REMITTANCE_EMAIL,
RFQ_ONLY_SITE_FLAG,
SITE_CREATION_DATE,
STATE,
TAX_CALCULATION_LEVEL,
TAX_REPORTING_SITE_FLAG,
TAX_ROUNDING_RULE,
TELEX,
TERMS_DATE_BASIS,
VAT_CODE,
VAT_REGISTRATION_NUMBER,
ALTERNALE_VENDOR_SITE,
COMMENTS,
PREVIOUS_ADDRESS,
BANK_ACCOUNT_NAME,
BANK_ACCOUNT_NUMBER,
BANK_ACCOUNT_TYPE,
BANK_NUMBER,
HOLD_REASON_VENDOR_SITE,
INVOICE_AMT_LIMIT_VENDOR_SITE,
COUNTRY_OF_ORIGIN_CODE,
VENDOR_CONVERSION_FLAG
)
SELECT
VENDOR_ID,
ADDRESS_LINE1,
ADDRESS_LINE2,
ADDRESS_LINE3,
AREA_CODE,
CITY,
COUNTRY,
PHONE,
PROVINCE,
STATE_CD,
VENDOR_ALWAYS_TAKE_DISC_FLAG,
FREIGHT_TERMS_LOOKUP_CODE,
SHIP_VIA_LOOKUP_CODE,
VENDOR_SITE_CODE,
VENDOR_SITE_ID,
ZIP,
ORG_ID,
LAST_UPDATE_DTTM,
VENDOR_SITE_ORG_ID,
ADDRESS_LINE4,
ALLOW_CALC_LEVEL_OVERRIDE_FLAG,
ALTERNATE_SUPPLIER_SITE_CODE,
ALWAYS_TAKE_DISC_FLAG,
ATTENTION_AR_FLAG,
AUTO_TAX_CALC_FLAG,
COUNTY,
CREATION_DATE,
CUSTOMER_NUMBER_VENDOR_SITE,
DISTRIB_AMTS_INCLUDE_TAX_FLAG,
EMAIL_ADDRESS,
EXCLUDE_FREIGHT_FROM_DISCOUNT,
FAX,
FAX_AREA_CODE,
HOLD_ALL_PAYMENTS_FLAG,
HOLD_FUTURE_PAYMENTS_FLAG,
HOLD_REASON,
HOLD_UNMATCHED_INVOICES_FLAG,
INACTIVE_DATE,
INACTIVE_FLAG,
INVOICE_AMOUNT_LIMIT,
INVOICE_CURRENCY_CODE,
LAST_UPDATE_DATE,
NOTIFICATION_METHOD_CODE,
OFFSET_TAX_FLAG,
OFFSET_TAX_NAME,
PAY_ALONE_FLAG,
PAY_DATE_BASIS_LOOKUP_CODE,
PAY_GROUP_LOOKUP_CODE,
PAY_ON_CODE,
PAY_SITE_FLAG,
PAYMENT_CURRENCY_CODE,
PAYMENT_METHOD_LOOKUP_CODE,
PAYMENT_PRIORITY,
POSTAL_CODE,
PRIMARY_PAY_SITE_FLAG,
PROCUREMENT_CARD_SITE_FLAG,
PURCHASING_SITE_FLAG,
REMITTANCE_EMAIL,
RFQ_ONLY_SITE_FLAG,
SITE_CREATION_DATE,
STATE,
TAX_CALCULATION_LEVEL,
TAX_REPORTING_SITE_FLAG,
TAX_ROUNDING_RULE,
TELEX,
TERMS_DATE_BASIS,
VAT_CODE,
VAT_REGISTRATION_NUMBER,
ALTERNALE_VENDOR_SITE,
COMMENTS,
PREVIOUS_ADDRESS,
BANK_ACCOUNT_NAME,
BANK_ACCOUNT_NUMBER,
BANK_ACCOUNT_TYPE,
BANK_NUMBER,
HOLD_REASON_VENDOR_SITE,
INVOICE_AMT_LIMIT_VENDOR_SITE,
COUNTRY_OF_ORIGIN_CODE,
'NA' VENDOR_CONVERSION_FLAG
FROM FDM_TABLES_DB.OA3NF_VENDOR_SITE;



---- Query to update CONVERSION_FLAG = 'N'
UPDATE FDW_TABLES_DB.OA3NF_VENDOR_SITE_HIST
FROM FDW_TABLES_DB.OA3NF_VENDOR_HIST V
SET VENDOR_CONVERSION_FLAG = 'N'
WHERE OA3NF_VENDOR_SITE_HIST.vendor_id = v.vendor_id
AND v.VENDOR_CONVERSION_FLAG = 'N';

---- Query to update CONVERSION_FLAG = 'Y'
UPDATE FDW_TABLES_DB.OA3NF_VENDOR_SITE_HIST
FROM FDW_TABLES_DB.OA3NF_VENDOR_HIST V
SET VENDOR_CONVERSION_FLAG = 'Y'
WHERE OA3NF_VENDOR_SITE_HIST.vendor_id = v.vendor_id
AND v.VENDOR_CONVERSION_FLAG = 'Y';

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_AE_HEADERS AS (

DELETE FROM FDW_TABLES_DB.OA3NF_XLA_AE_HEADERS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_AE_HEADERS_s
where
   LOAD_XLA_AE_HEADERS_s.AE_HEADER_ID = OA3NF_XLA_AE_HEADERS.AE_HEADER_ID
   AND  LOAD_XLA_AE_HEADERS_s.APPLICATION_ID = OA3NF_XLA_AE_HEADERS.APPLICATION_ID
   AND  LOAD_XLA_AE_HEADERS_s.LEDGER_ID = OA3NF_XLA_AE_HEADERS.LEDGER_ID
   AND  LOAD_XLA_AE_HEADERS_s.ENTITY_ID = OA3NF_XLA_AE_HEADERS.ENTITY_ID
   AND  LOAD_XLA_AE_HEADERS_s.EVENT_ID = OA3NF_XLA_AE_HEADERS.EVENT_ID
);

INSERT INTO FDW_TABLES_DB.OA3NF_XLA_AE_HEADERS ( 
  AE_HEADER_ID,
APPLICATION_ID ,             
LEDGER_ID ,                  
ENTITY_ID,                   
EVENT_ID ,                   
EVENT_TYPE_CODE,             
ACCOUNTING_DATE,             
GL_TRANSFER_STATUS_CODE,     
GL_TRANSFER_DATE,            
JE_CATEGORY_NAME ,           
ACCOUNTING_ENTRY_STATUS_CODE, 
ACCOUNTING_ENTRY_TYPE_CODE   ,
AMB_CONTEXT_CODE ,           
PRODUCT_RULE_TYPE_CODE,      
PRODUCT_RULE_CODE ,          
PRODUCT_RULE_VERSION,        
DESCRIPTION,                 
DOC_SEQUENCE_ID,             
DOC_SEQUENCE_VALUE,          
ACCOUNTING_BATCH_ID,              
COMPLETION_ACCT_SEQ_VERSION_ID ,   
CLOSE_ACCT_SEQ_VERSION_ID,      
COMPLETION_ACCT_SEQ_VALUE,      
CLOSE_ACCT_SEQ_VALUE,           
BUDGET_VERSION_ID,              
FUNDS_STATUS_CODE ,             
ENCUMBRANCE_TYPE_ID,            
BALANCE_TYPE_CODE ,             
REFERENCE_DATE ,                
COMPLETED_DATE ,                
PERIOD_NAME,                    
PACKET_ID ,                     
COMPLETION_ACCT_SEQ_ASSIGN_ID,   
CLOSE_ACCT_SEQ_ASSIGN_ID,     
DOC_CATEGORY_CODE,           
ATTRIBUTE_CATEGORY,          
ATTRIBUTE1 ,
ATTRIBUTE2 ,
ATTRIBUTE3 ,
ATTRIBUTE4 ,
ATTRIBUTE5 ,
ATTRIBUTE6 ,
ATTRIBUTE7 ,
ATTRIBUTE8 ,
ATTRIBUTE9 ,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
GROUP_ID,                     
DOC_SEQUENCE_VERSION_ID,      
DOC_SEQUENCE_ASSIGN_ID,       
CREATION_DATE,                
CREATED_BY,                   
LAST_UPDATE_DATE,             
LAST_UPDATED_BY,              
LAST_UPDATE_LOGIN,            
PROGRAM_UPDATE_DATE,          
PROGRAM_APPLICATION_ID,       
PROGRAM_ID ,                  
REQUEST_ID ,                  
UPG_BATCH_ID,                 
UPG_SOURCE_APPLICATION_ID ,   
UPG_VALID_FLAG  ,             
ZERO_AMOUNT_FLAG ,            
PARENT_AE_HEADER_ID,          
PARENT_AE_LINE_NUM ,          
ACCRUAL_REVERSAL_FLAG,        
MERGE_EVENT_ID ,             
NEED_BAL_FLAG ) 

SELECT 

  AE_HEADER_ID,
APPLICATION_ID  ,
LEDGER_ID       ,
ENTITY_ID       ,
EVENT_ID        ,
EVENT_TYPE_CODE ,
ACCOUNTING_DATE ,
GL_TRANSFER_STATUS_CODE,
GL_TRANSFER_DATE ,
JE_CATEGORY_NAME  ,
ACCOUNTING_ENTRY_STATUS_CODE ,
ACCOUNTING_ENTRY_TYPE_CODE ,
AMB_CONTEXT_CODE      ,
PRODUCT_RULE_TYPE_CODE ,
PRODUCT_RULE_CODE    ,
PRODUCT_RULE_VERSION   ,
DESCRIPTION     ,
DOC_SEQUENCE_ID   ,
DOC_SEQUENCE_VALUE  ,
ACCOUNTING_BATCH_ID ,  
COMPLETION_ACCT_SEQ_VERSION_ID,  
CLOSE_ACCT_SEQ_VERSION_ID,       
COMPLETION_ACCT_SEQ_VALUE ,      
CLOSE_ACCT_SEQ_VALUE ,       
BUDGET_VERSION_ID ,              
FUNDS_STATUS_CODE ,             
ENCUMBRANCE_TYPE_ID,             
BALANCE_TYPE_CODE  ,            
REFERENCE_DATE ,                 
COMPLETED_DATE,                  
PERIOD_NAME ,                   
PACKET_ID ,                      
COMPLETION_ACCT_SEQ_ASSIGN_ID   ,
CLOSE_ACCT_SEQ_ASSIGN_ID  ,      
DOC_CATEGORY_CODE ,             
ATTRIBUTE_CATEGORY ,            
ATTRIBUTE1 ,  
ATTRIBUTE2 ,  
ATTRIBUTE3 ,  
ATTRIBUTE4 ,  
ATTRIBUTE5 ,  
ATTRIBUTE6 ,  
ATTRIBUTE7 ,  
ATTRIBUTE8 ,  
ATTRIBUTE9 ,  
ATTRIBUTE10,  
ATTRIBUTE11,  
ATTRIBUTE12,  
ATTRIBUTE13,  
ATTRIBUTE14,  
ATTRIBUTE15,  
GROUP_ID ,              
DOC_SEQUENCE_VERSION_ID,
DOC_SEQUENCE_ASSIGN_ID ,
CREATION_DATE          ,
CREATED_BY             ,
LAST_UPDATE_DATE       ,
LAST_UPDATED_BY        ,
LAST_UPDATE_LOGIN      ,
PROGRAM_UPDATE_DATE    ,
PROGRAM_APPLICATION_ID ,
PROGRAM_ID  ,                   
REQUEST_ID   ,               
UPG_BATCH_ID  ,              
UPG_SOURCE_APPLICATION_ID,   
UPG_VALID_FLAG  ,            
ZERO_AMOUNT_FLAG  ,          
PARENT_AE_HEADER_ID ,        
PARENT_AE_LINE_NUM   ,       
ACCRUAL_REVERSAL_FLAG  ,     
MERGE_EVENT_ID    ,          
NEED_BAL_FLAG               
FROM FDW_STAGE_DB.LOAD_XLA_AE_HEADERS_s;
);
--------------------------------------------------------------------------------


--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_AE_LINES AS (

DELETE FROM FDW_TABLES_DB.OA3NF_XLA_AE_LINES
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_AE_LINES_s
where
   LOAD_XLA_AE_LINES_s.AE_HEADER_ID = OA3NF_XLA_AE_LINES.AE_HEADER_ID
   AND  LOAD_XLA_AE_LINES_s.APPLICATION_ID = OA3NF_XLA_AE_LINES.APPLICATION_ID
   AND  LOAD_XLA_AE_LINES_s.LEDGER_ID = OA3NF_XLA_AE_LINES.LEDGER_ID
   AND  LOAD_XLA_AE_LINES_s.AE_LINE_NUM = OA3NF_XLA_AE_LINES.AE_LINE_NUM
   AND  LOAD_XLA_AE_LINES_s.CODE_COMBINATION_ID = OA3NF_XLA_AE_LINES.CODE_COMBINATION_ID
   AND  LOAD_XLA_AE_LINES_s.CREATED_BY = OA3NF_XLA_AE_LINES.CREATED_BY
   AND  LOAD_XLA_AE_LINES_s.LAST_UPDATED_BY = OA3NF_XLA_AE_LINES.LAST_UPDATED_BY
);
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_AE_LINES ( 
  AE_HEADER_ID                
,AE_LINE_NUM                 
,APPLICATION_ID              
,CODE_COMBINATION_ID         
,GL_TRANSFER_MODE_CODE      
,GL_SL_LINK_ID               
,ACCOUNTING_CLASS_CODE      
,PARTY_ID                    
,PARTY_SITE_ID               
,PARTY_TYPE_CODE            
,ENTERED_DR                  
,ENTERED_CR                  
,ACCOUNTED_DR                
,ACCOUNTED_CR                
,DESCRIPTION               
,STATISTICAL_AMOUNT          
,CURRENCY_CODE              
,CURRENCY_CONVERSION_DATE    
,CURRENCY_CONVERSION_RATE    
,CURRENCY_CONVERSION_TYPE   
,USSGL_TRANSACTION_CODE     
,JGZZ_RECON_REF             
,CONTROL_BALANCE_FLAG       
,ANALYTICAL_BALANCE_FLAG    
,ATTRIBUTE_CATEGORY         
,ATTRIBUTE1                 
,ATTRIBUTE2                 
,ATTRIBUTE3                 
,ATTRIBUTE4                 
,ATTRIBUTE5                 
,ATTRIBUTE6                 
,ATTRIBUTE7                 
,ATTRIBUTE8                 
,ATTRIBUTE9                 
,ATTRIBUTE10                
,ATTRIBUTE11                
,ATTRIBUTE12                
,ATTRIBUTE13                
,ATTRIBUTE14                
,ATTRIBUTE15                
,GL_SL_LINK_TABLE           
,DISPLAYED_LINE_NUMBER       
,CREATION_DATE               
,CREATED_BY                  
,LAST_UPDATE_DATE            
,LAST_UPDATED_BY             
,LAST_UPDATE_LOGIN           
,PROGRAM_UPDATE_DATE         
,PROGRAM_APPLICATION_ID      
,PROGRAM_ID                  
,REQUEST_ID                  
,UPG_BATCH_ID                
,UPG_TAX_REFERENCE_ID1       
,UPG_TAX_REFERENCE_ID2       
,UPG_TAX_REFERENCE_ID3       
,UNROUNDED_ACCOUNTED_DR      
,UNROUNDED_ACCOUNTED_CR      
,GAIN_OR_LOSS_FLAG          
,UNROUNDED_ENTERED_DR        
,UNROUNDED_ENTERED_CR        
,SUBSTITUTED_CCID            
,BUSINESS_CLASS_CODE        
,MPA_ACCRUAL_ENTRY_FLAG     
,ENCUMBRANCE_TYPE_ID         
,FUNDS_STATUS_CODE          
,MERGE_CODE_COMBINATION_ID   
,MERGE_PARTY_ID              
,MERGE_PARTY_SITE_ID         
,ACCOUNTING_DATE             
,LEDGER_ID                   
,SOURCE_TABLE               
,SOURCE_ID                   
,ACCOUNT_OVERLAY_SOURCE_ID ) 

SELECT 

  AE_HEADER_ID                
,AE_LINE_NUM                 
,APPLICATION_ID              
,CODE_COMBINATION_ID         
,GL_TRANSFER_MODE_CODE      
,GL_SL_LINK_ID               
,ACCOUNTING_CLASS_CODE      
,PARTY_ID                    
,PARTY_SITE_ID               
,PARTY_TYPE_CODE            
,ENTERED_DR                  
,ENTERED_CR                  
,ACCOUNTED_DR                
,ACCOUNTED_CR                
,DESCRIPTION               
,STATISTICAL_AMOUNT          
,CURRENCY_CODE              
,CURRENCY_CONVERSION_DATE    
,CURRENCY_CONVERSION_RATE    
,CURRENCY_CONVERSION_TYPE   
,USSGL_TRANSACTION_CODE     
,JGZZ_RECON_REF             
,CONTROL_BALANCE_FLAG       
,ANALYTICAL_BALANCE_FLAG    
,ATTRIBUTE_CATEGORY         
,ATTRIBUTE1                 
,ATTRIBUTE2                 
,ATTRIBUTE3                 
,ATTRIBUTE4                 
,ATTRIBUTE5                 
,ATTRIBUTE6                 
,ATTRIBUTE7                 
,ATTRIBUTE8                 
,ATTRIBUTE9                 
,ATTRIBUTE10                
,ATTRIBUTE11                
,ATTRIBUTE12                
,ATTRIBUTE13                
,ATTRIBUTE14                
,ATTRIBUTE15                
,GL_SL_LINK_TABLE           
,DISPLAYED_LINE_NUMBER       
,CREATION_DATE               
,CREATED_BY                  
,LAST_UPDATE_DATE            
,LAST_UPDATED_BY             
,LAST_UPDATE_LOGIN           
,PROGRAM_UPDATE_DATE         
,PROGRAM_APPLICATION_ID      
,PROGRAM_ID                  
,REQUEST_ID                  
,UPG_BATCH_ID                
,UPG_TAX_REFERENCE_ID1       
,UPG_TAX_REFERENCE_ID2       
,UPG_TAX_REFERENCE_ID3       
,UNROUNDED_ACCOUNTED_DR      
,UNROUNDED_ACCOUNTED_CR      
,GAIN_OR_LOSS_FLAG          
,UNROUNDED_ENTERED_DR        
,UNROUNDED_ENTERED_CR        
,SUBSTITUTED_CCID            
,BUSINESS_CLASS_CODE        
,MPA_ACCRUAL_ENTRY_FLAG     
,ENCUMBRANCE_TYPE_ID         
,FUNDS_STATUS_CODE          
,MERGE_CODE_COMBINATION_ID   
,MERGE_PARTY_ID              
,MERGE_PARTY_SITE_ID         
,ACCOUNTING_DATE             
,LEDGER_ID                   
,SOURCE_TABLE               
,SOURCE_ID                   
,ACCOUNT_OVERLAY_SOURCE_ID              
FROM FDW_STAGE_DB.LOAD_XLA_AE_LINES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_DISTRIB_LINKS AS (

DELETE FROM FDW_TABLES_DB.OA3NF_XLA_DISTRIB_LINKS
/*WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_DISTRIB_LINKS_s
where
   LOAD_XLA_DISTRIB_LINKS_s.AE_HEADER_ID = OA3NF_XLA_DISTRIB_LINKS.AE_HEADER_ID
   AND  LOAD_XLA_DISTRIB_LINKS_s.APPLICATION_ID = OA3NF_XLA_DISTRIB_LINKS.APPLICATION_ID
   AND  LOAD_XLA_DISTRIB_LINKS_s.AE_LINE_NUM = OA3NF_XLA_DISTRIB_LINKS.AE_LINE_NUM
      AND  LOAD_XLA_DISTRIB_LINKS_s.EVENT_ID = OA3NF_XLA_DISTRIB_LINKS.EVENT_ID
	  AND  LOAD_XLA_DISTRIB_LINKS_s.LEDGER_ID = OA3NF_XLA_DISTRIB_LINKS.LEDGER_ID
)*/
;
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_DISTRIB_LINKS ( 
  APPLICATION_ID, 
EVENT_ID,       
AE_HEADER_ID,   
AE_LINE_NUM,    
SOURCE_DISTRIBUTION_TYPE,  
SOURCE_DISTRIBUTION_ID_CHAR_1, 
SOURCE_DISTRIBUTION_ID_CHAR_2 ,
SOURCE_DISTRIBUTION_ID_CHAR_3 ,
SOURCE_DISTRIBUTION_ID_CHAR_4 ,
SOURCE_DISTRIBUTION_ID_CHAR_5 ,
SOURCE_DISTRIBUTION_ID_NUM_1,  
SOURCE_DISTRIBUTION_ID_NUM_2 , 
SOURCE_DISTRIBUTION_ID_NUM_3 , 
SOURCE_DISTRIBUTION_ID_NUM_4 , 
SOURCE_DISTRIBUTION_ID_NUM_5 , 
TAX_LINE_REF_ID,               
TAX_SUMMARY_LINE_REF_ID,       
TAX_REC_NREC_DIST_REF_ID,      
STATISTICAL_AMOUNT,            
REF_AE_HEADER_ID,              
REF_TEMP_LINE_NUM,             
ACCOUNTING_LINE_CODE,          
ACCOUNTING_LINE_TYPE_CODE,     
MERGE_DUPLICATE_CODE,          
TEMP_LINE_NUM,                 
REF_EVENT_ID ,                 
LINE_DEFINITION_OWNER_CODE,    
LINE_DEFINITION_CODE,          
EVENT_CLASS_CODE,              
EVENT_TYPE_CODE,               
UPG_BATCH_ID,                  
CALCULATE_ACCTD_AMTS_FLAG,     
CALCULATE_G_L_AMTS_FLAG,       
ROUNDING_CLASS_CODE,           
DOCUMENT_ROUNDING_LEVEL ,      
UNROUNDED_ENTERED_DR,          
UNROUNDED_ENTERED_CR ,         
DOC_ROUNDING_ENTERED_AMT,      
DOC_ROUNDING_ACCTD_AMT,        
UNROUNDED_ACCOUNTED_CR ,       
UNROUNDED_ACCOUNTED_DR ,       
APPLIED_TO_APPLICATION_ID ,    
APPLIED_TO_ENTITY_CODE,        
APPLIED_TO_ENTITY_ID ,         
APPLIED_TO_SOURCE_ID_NUM_1  ,  
APPLIED_TO_SOURCE_ID_NUM_2  ,  
APPLIED_TO_SOURCE_ID_NUM_3  ,  
APPLIED_TO_SOURCE_ID_NUM_4  ,  
APPLIED_TO_SOURCE_ID_CHAR_1 ,  
APPLIED_TO_SOURCE_ID_CHAR_2 ,  
APPLIED_TO_SOURCE_ID_CHAR_3 ,  
APPLIED_TO_SOURCE_ID_CHAR_4 ,  
APPLIED_TO_DISTRIBUTION_TYPE , 
APPLIED_TO_DIST_ID_NUM_1 ,     
APPLIED_TO_DIST_ID_NUM_2 ,     
APPLIED_TO_DIST_ID_NUM_3 ,     
APPLIED_TO_DIST_ID_NUM_4 ,     
APPLIED_TO_DIST_ID_NUM_5 ,     
APPLIED_TO_DIST_ID_CHAR_1,     
APPLIED_TO_DIST_ID_CHAR_2,     
APPLIED_TO_DIST_ID_CHAR_3,   
APPLIED_TO_DIST_ID_CHAR_4,   
APPLIED_TO_DIST_ID_CHAR_5,   
ALLOC_TO_APPLICATION_ID ,    
ALLOC_TO_ENTITY_CODE  ,      
ALLOC_TO_SOURCE_ID_NUM_1 ,   
ALLOC_TO_SOURCE_ID_NUM_2 ,   
ALLOC_TO_SOURCE_ID_NUM_3 ,   
ALLOC_TO_SOURCE_ID_NUM_4 ,   
ALLOC_TO_SOURCE_ID_CHAR_1,   
ALLOC_TO_SOURCE_ID_CHAR_2,   
ALLOC_TO_SOURCE_ID_CHAR_3,   
ALLOC_TO_SOURCE_ID_CHAR_4,   
ALLOC_TO_DISTRIBUTION_TYPE,  
ALLOC_TO_DIST_ID_NUM_1 ,     
ALLOC_TO_DIST_ID_NUM_2 ,     
ALLOC_TO_DIST_ID_NUM_3 ,     
ALLOC_TO_DIST_ID_NUM_4 ,     
ALLOC_TO_DIST_ID_NUM_5 ,     
ALLOC_TO_DIST_ID_CHAR_1,     
ALLOC_TO_DIST_ID_CHAR_2,     
ALLOC_TO_DIST_ID_CHAR_3,     
ALLOC_TO_DIST_ID_CHAR_4,     
ALLOC_TO_DIST_ID_CHAR_5,     
GAIN_OR_LOSS_REF,
LEDGER_ID           
) 

SELECT 

 APPLICATION_ID, 
EVENT_ID,       
AE_HEADER_ID,   
AE_LINE_NUM,    
SOURCE_DISTRIBUTION_TYPE,  
SOURCE_DISTRIBUTION_ID_CHAR_1, 
SOURCE_DISTRIBUTION_ID_CHAR_2 ,
SOURCE_DISTRIBUTION_ID_CHAR_3 ,
SOURCE_DISTRIBUTION_ID_CHAR_4 ,
SOURCE_DISTRIBUTION_ID_CHAR_5 ,
SOURCE_DISTRIBUTION_ID_NUM_1,  
SOURCE_DISTRIBUTION_ID_NUM_2 , 
SOURCE_DISTRIBUTION_ID_NUM_3 , 
SOURCE_DISTRIBUTION_ID_NUM_4 , 
SOURCE_DISTRIBUTION_ID_NUM_5 , 
TAX_LINE_REF_ID,               
TAX_SUMMARY_LINE_REF_ID,       
TAX_REC_NREC_DIST_REF_ID,      
STATISTICAL_AMOUNT,            
REF_AE_HEADER_ID,              
REF_TEMP_LINE_NUM,             
ACCOUNTING_LINE_CODE,          
ACCOUNTING_LINE_TYPE_CODE,     
MERGE_DUPLICATE_CODE,          
TEMP_LINE_NUM,                 
REF_EVENT_ID ,                 
LINE_DEFINITION_OWNER_CODE,    
LINE_DEFINITION_CODE,          
EVENT_CLASS_CODE,              
EVENT_TYPE_CODE,               
UPG_BATCH_ID,                  
CALCULATE_ACCTD_AMTS_FLAG,     
CALCULATE_G_L_AMTS_FLAG,       
ROUNDING_CLASS_CODE,           
DOCUMENT_ROUNDING_LEVEL ,      
UNROUNDED_ENTERED_DR,          
UNROUNDED_ENTERED_CR ,         
DOC_ROUNDING_ENTERED_AMT,      
DOC_ROUNDING_ACCTD_AMT,        
UNROUNDED_ACCOUNTED_CR ,       
UNROUNDED_ACCOUNTED_DR ,       
APPLIED_TO_APPLICATION_ID ,    
APPLIED_TO_ENTITY_CODE,        
APPLIED_TO_ENTITY_ID ,         
APPLIED_TO_SOURCE_ID_NUM_1  ,  
APPLIED_TO_SOURCE_ID_NUM_2  ,  
APPLIED_TO_SOURCE_ID_NUM_3  ,  
APPLIED_TO_SOURCE_ID_NUM_4  ,  
APPLIED_TO_SOURCE_ID_CHAR_1 ,  
APPLIED_TO_SOURCE_ID_CHAR_2 ,  
APPLIED_TO_SOURCE_ID_CHAR_3 ,  
APPLIED_TO_SOURCE_ID_CHAR_4 ,  
APPLIED_TO_DISTRIBUTION_TYPE , 
APPLIED_TO_DIST_ID_NUM_1 ,     
APPLIED_TO_DIST_ID_NUM_2 ,     
APPLIED_TO_DIST_ID_NUM_3 ,     
APPLIED_TO_DIST_ID_NUM_4 ,     
APPLIED_TO_DIST_ID_NUM_5 ,     
APPLIED_TO_DIST_ID_CHAR_1,     
APPLIED_TO_DIST_ID_CHAR_2,     
APPLIED_TO_DIST_ID_CHAR_3,   
APPLIED_TO_DIST_ID_CHAR_4,   
APPLIED_TO_DIST_ID_CHAR_5,   
ALLOC_TO_APPLICATION_ID ,    
ALLOC_TO_ENTITY_CODE  ,      
ALLOC_TO_SOURCE_ID_NUM_1 ,   
ALLOC_TO_SOURCE_ID_NUM_2 ,   
ALLOC_TO_SOURCE_ID_NUM_3 ,   
ALLOC_TO_SOURCE_ID_NUM_4 ,   
ALLOC_TO_SOURCE_ID_CHAR_1,   
ALLOC_TO_SOURCE_ID_CHAR_2,   
ALLOC_TO_SOURCE_ID_CHAR_3,   
ALLOC_TO_SOURCE_ID_CHAR_4,   
ALLOC_TO_DISTRIBUTION_TYPE,  
ALLOC_TO_DIST_ID_NUM_1 ,     
ALLOC_TO_DIST_ID_NUM_2 ,     
ALLOC_TO_DIST_ID_NUM_3 ,     
ALLOC_TO_DIST_ID_NUM_4 ,     
ALLOC_TO_DIST_ID_NUM_5 ,     
ALLOC_TO_DIST_ID_CHAR_1,     
ALLOC_TO_DIST_ID_CHAR_2,     
ALLOC_TO_DIST_ID_CHAR_3,     
ALLOC_TO_DIST_ID_CHAR_4,     
ALLOC_TO_DIST_ID_CHAR_5,     
GAIN_OR_LOSS_REF,
LEDGER_ID                    
FROM FDW_STAGE_DB.LOAD_XLA_DISTRIB_LINKS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_DISTRIB_LINKS_BK AS (

DELETE FROM FDW_TABLES_DB.OA3NF_XLA_DISTRIB_LINKS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_DISTRIB_LINKS_s
where
   LOAD_XLA_DISTRIB_LINKS_s.AE_HEADER_ID = OA3NF_XLA_DISTRIB_LINKS.AE_HEADER_ID
   AND  LOAD_XLA_DISTRIB_LINKS_s.APPLICATION_ID = OA3NF_XLA_DISTRIB_LINKS.APPLICATION_ID
   AND  LOAD_XLA_DISTRIB_LINKS_s.AE_LINE_NUM = OA3NF_XLA_DISTRIB_LINKS.AE_LINE_NUM
      AND  LOAD_XLA_DISTRIB_LINKS_s.EVENT_ID = OA3NF_XLA_DISTRIB_LINKS.EVENT_ID
	  AND  LOAD_XLA_DISTRIB_LINKS_s.LEDGER_ID = OA3NF_XLA_DISTRIB_LINKS.LEDGER_ID
);
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_DISTRIB_LINKS ( 
  APPLICATION_ID, 
EVENT_ID,       
AE_HEADER_ID,   
AE_LINE_NUM,    
SOURCE_DISTRIBUTION_TYPE,  
SOURCE_DISTRIBUTION_ID_CHAR_1, 
SOURCE_DISTRIBUTION_ID_CHAR_2 ,
SOURCE_DISTRIBUTION_ID_CHAR_3 ,
SOURCE_DISTRIBUTION_ID_CHAR_4 ,
SOURCE_DISTRIBUTION_ID_CHAR_5 ,
SOURCE_DISTRIBUTION_ID_NUM_1,  
SOURCE_DISTRIBUTION_ID_NUM_2 , 
SOURCE_DISTRIBUTION_ID_NUM_3 , 
SOURCE_DISTRIBUTION_ID_NUM_4 , 
SOURCE_DISTRIBUTION_ID_NUM_5 , 
TAX_LINE_REF_ID,               
TAX_SUMMARY_LINE_REF_ID,       
TAX_REC_NREC_DIST_REF_ID,      
STATISTICAL_AMOUNT,            
REF_AE_HEADER_ID,              
REF_TEMP_LINE_NUM,             
ACCOUNTING_LINE_CODE,          
ACCOUNTING_LINE_TYPE_CODE,     
MERGE_DUPLICATE_CODE,          
TEMP_LINE_NUM,                 
REF_EVENT_ID ,                 
LINE_DEFINITION_OWNER_CODE,    
LINE_DEFINITION_CODE,          
EVENT_CLASS_CODE,              
EVENT_TYPE_CODE,               
UPG_BATCH_ID,                  
CALCULATE_ACCTD_AMTS_FLAG,     
CALCULATE_G_L_AMTS_FLAG,       
ROUNDING_CLASS_CODE,           
DOCUMENT_ROUNDING_LEVEL ,      
UNROUNDED_ENTERED_DR,          
UNROUNDED_ENTERED_CR ,         
DOC_ROUNDING_ENTERED_AMT,      
DOC_ROUNDING_ACCTD_AMT,        
UNROUNDED_ACCOUNTED_CR ,       
UNROUNDED_ACCOUNTED_DR ,       
APPLIED_TO_APPLICATION_ID ,    
APPLIED_TO_ENTITY_CODE,        
APPLIED_TO_ENTITY_ID ,         
APPLIED_TO_SOURCE_ID_NUM_1  ,  
APPLIED_TO_SOURCE_ID_NUM_2  ,  
APPLIED_TO_SOURCE_ID_NUM_3  ,  
APPLIED_TO_SOURCE_ID_NUM_4  ,  
APPLIED_TO_SOURCE_ID_CHAR_1 ,  
APPLIED_TO_SOURCE_ID_CHAR_2 ,  
APPLIED_TO_SOURCE_ID_CHAR_3 ,  
APPLIED_TO_SOURCE_ID_CHAR_4 ,  
APPLIED_TO_DISTRIBUTION_TYPE , 
APPLIED_TO_DIST_ID_NUM_1 ,     
APPLIED_TO_DIST_ID_NUM_2 ,     
APPLIED_TO_DIST_ID_NUM_3 ,     
APPLIED_TO_DIST_ID_NUM_4 ,     
APPLIED_TO_DIST_ID_NUM_5 ,     
APPLIED_TO_DIST_ID_CHAR_1,     
APPLIED_TO_DIST_ID_CHAR_2,     
APPLIED_TO_DIST_ID_CHAR_3,   
APPLIED_TO_DIST_ID_CHAR_4,   
APPLIED_TO_DIST_ID_CHAR_5,   
ALLOC_TO_APPLICATION_ID ,    
ALLOC_TO_ENTITY_CODE  ,      
ALLOC_TO_SOURCE_ID_NUM_1 ,   
ALLOC_TO_SOURCE_ID_NUM_2 ,   
ALLOC_TO_SOURCE_ID_NUM_3 ,   
ALLOC_TO_SOURCE_ID_NUM_4 ,   
ALLOC_TO_SOURCE_ID_CHAR_1,   
ALLOC_TO_SOURCE_ID_CHAR_2,   
ALLOC_TO_SOURCE_ID_CHAR_3,   
ALLOC_TO_SOURCE_ID_CHAR_4,   
ALLOC_TO_DISTRIBUTION_TYPE,  
ALLOC_TO_DIST_ID_NUM_1 ,     
ALLOC_TO_DIST_ID_NUM_2 ,     
ALLOC_TO_DIST_ID_NUM_3 ,     
ALLOC_TO_DIST_ID_NUM_4 ,     
ALLOC_TO_DIST_ID_NUM_5 ,     
ALLOC_TO_DIST_ID_CHAR_1,     
ALLOC_TO_DIST_ID_CHAR_2,     
ALLOC_TO_DIST_ID_CHAR_3,     
ALLOC_TO_DIST_ID_CHAR_4,     
ALLOC_TO_DIST_ID_CHAR_5,     
GAIN_OR_LOSS_REF,
LEDGER_ID           
) 

SELECT 

 APPLICATION_ID, 
EVENT_ID,       
AE_HEADER_ID,   
AE_LINE_NUM,    
SOURCE_DISTRIBUTION_TYPE,  
SOURCE_DISTRIBUTION_ID_CHAR_1, 
SOURCE_DISTRIBUTION_ID_CHAR_2 ,
SOURCE_DISTRIBUTION_ID_CHAR_3 ,
SOURCE_DISTRIBUTION_ID_CHAR_4 ,
SOURCE_DISTRIBUTION_ID_CHAR_5 ,
SOURCE_DISTRIBUTION_ID_NUM_1,  
SOURCE_DISTRIBUTION_ID_NUM_2 , 
SOURCE_DISTRIBUTION_ID_NUM_3 , 
SOURCE_DISTRIBUTION_ID_NUM_4 , 
SOURCE_DISTRIBUTION_ID_NUM_5 , 
TAX_LINE_REF_ID,               
TAX_SUMMARY_LINE_REF_ID,       
TAX_REC_NREC_DIST_REF_ID,      
STATISTICAL_AMOUNT,            
REF_AE_HEADER_ID,              
REF_TEMP_LINE_NUM,             
ACCOUNTING_LINE_CODE,          
ACCOUNTING_LINE_TYPE_CODE,     
MERGE_DUPLICATE_CODE,          
TEMP_LINE_NUM,                 
REF_EVENT_ID ,                 
LINE_DEFINITION_OWNER_CODE,    
LINE_DEFINITION_CODE,          
EVENT_CLASS_CODE,              
EVENT_TYPE_CODE,               
UPG_BATCH_ID,                  
CALCULATE_ACCTD_AMTS_FLAG,     
CALCULATE_G_L_AMTS_FLAG,       
ROUNDING_CLASS_CODE,           
DOCUMENT_ROUNDING_LEVEL ,      
UNROUNDED_ENTERED_DR,          
UNROUNDED_ENTERED_CR ,         
DOC_ROUNDING_ENTERED_AMT,      
DOC_ROUNDING_ACCTD_AMT,        
UNROUNDED_ACCOUNTED_CR ,       
UNROUNDED_ACCOUNTED_DR ,       
APPLIED_TO_APPLICATION_ID ,    
APPLIED_TO_ENTITY_CODE,        
APPLIED_TO_ENTITY_ID ,         
APPLIED_TO_SOURCE_ID_NUM_1  ,  
APPLIED_TO_SOURCE_ID_NUM_2  ,  
APPLIED_TO_SOURCE_ID_NUM_3  ,  
APPLIED_TO_SOURCE_ID_NUM_4  ,  
APPLIED_TO_SOURCE_ID_CHAR_1 ,  
APPLIED_TO_SOURCE_ID_CHAR_2 ,  
APPLIED_TO_SOURCE_ID_CHAR_3 ,  
APPLIED_TO_SOURCE_ID_CHAR_4 ,  
APPLIED_TO_DISTRIBUTION_TYPE , 
APPLIED_TO_DIST_ID_NUM_1 ,     
APPLIED_TO_DIST_ID_NUM_2 ,     
APPLIED_TO_DIST_ID_NUM_3 ,     
APPLIED_TO_DIST_ID_NUM_4 ,     
APPLIED_TO_DIST_ID_NUM_5 ,     
APPLIED_TO_DIST_ID_CHAR_1,     
APPLIED_TO_DIST_ID_CHAR_2,     
APPLIED_TO_DIST_ID_CHAR_3,   
APPLIED_TO_DIST_ID_CHAR_4,   
APPLIED_TO_DIST_ID_CHAR_5,   
ALLOC_TO_APPLICATION_ID ,    
ALLOC_TO_ENTITY_CODE  ,      
ALLOC_TO_SOURCE_ID_NUM_1 ,   
ALLOC_TO_SOURCE_ID_NUM_2 ,   
ALLOC_TO_SOURCE_ID_NUM_3 ,   
ALLOC_TO_SOURCE_ID_NUM_4 ,   
ALLOC_TO_SOURCE_ID_CHAR_1,   
ALLOC_TO_SOURCE_ID_CHAR_2,   
ALLOC_TO_SOURCE_ID_CHAR_3,   
ALLOC_TO_SOURCE_ID_CHAR_4,   
ALLOC_TO_DISTRIBUTION_TYPE,  
ALLOC_TO_DIST_ID_NUM_1 ,     
ALLOC_TO_DIST_ID_NUM_2 ,     
ALLOC_TO_DIST_ID_NUM_3 ,     
ALLOC_TO_DIST_ID_NUM_4 ,     
ALLOC_TO_DIST_ID_NUM_5 ,     
ALLOC_TO_DIST_ID_CHAR_1,     
ALLOC_TO_DIST_ID_CHAR_2,     
ALLOC_TO_DIST_ID_CHAR_3,     
ALLOC_TO_DIST_ID_CHAR_4,     
ALLOC_TO_DIST_ID_CHAR_5,     
GAIN_OR_LOSS_REF,
LEDGER_ID                    
FROM FDW_STAGE_DB.LOAD_XLA_DISTRIB_LINKS_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_EVENTS AS (
DELETE FROM FDW_TABLES_DB.OA3NF_XLA_EVENTS
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_EVENTS_s
where
   LOAD_XLA_EVENTS_s.EVENT_ID = OA3NF_XLA_EVENTS.EVENT_ID
   AND
      LOAD_XLA_EVENTS_s.APPLICATION_ID = OA3NF_XLA_EVENTS.APPLICATION_ID
	AND
	   LOAD_XLA_EVENTS_s.ENTITY_ID = OA3NF_XLA_EVENTS.ENTITY_ID
	AND
	   LOAD_XLA_EVENTS_s.EVENT_NUMBER = OA3NF_XLA_EVENTS.EVENT_NUMBER

);

INSERT INTO FDW_TABLES_DB.OA3NF_XLA_EVENTS ( 
  EVENT_ID,                  
  APPLICATION_ID,            
  EVENT_TYPE_CODE,           
  EVENT_DATE,                
  ENTITY_ID,                 
  EVENT_STATUS_CODE,         
  PROCESS_STATUS_CODE,       
  REFERENCE_NUM_1,           
  REFERENCE_NUM_2,           
  REFERENCE_NUM_3,           
  REFERENCE_NUM_4,           
  REFERENCE_CHAR_1,          
  REFERENCE_CHAR_2,          
  REFERENCE_CHAR_3,          
  REFERENCE_CHAR_4,          
  REFERENCE_DATE_1,          
  REFERENCE_DATE_2,          
  REFERENCE_DATE_3,          
  REFERENCE_DATE_4,          
  EVENT_NUMBER,              
  ON_HOLD_FLAG,              
  CREATION_DATE,             
  CREATED_BY,                
  LAST_UPDATE_DATE,          
  LAST_UPDATED_BY,           
  LAST_UPDATE_LOGIN,         
  PROGRAM_UPDATE_DATE,       
  PROGRAM_APPLICATION_ID,    
  PROGRAM_ID,                
  REQUEST_ID,                
  UPG_BATCH_ID,             
  UPG_SOURCE_APPLICATION_ID, 
  UPG_VALID_FLAG,            
  TRANSACTION_DATE,          
  BUDGETARY_CONTROL_FLAG,    
  MERGE_EVENT_SET_ID,
  LEDGER_ID  ) 
SELECT 
   EVENT_ID,                  
   APPLICATION_ID,            
   EVENT_TYPE_CODE,           
   EVENT_DATE,                
   ENTITY_ID,                 
   EVENT_STATUS_CODE,         
   PROCESS_STATUS_CODE,       
   REFERENCE_NUM_1,           
   REFERENCE_NUM_2,           
   REFERENCE_NUM_3,           
   REFERENCE_NUM_4,           
   REFERENCE_CHAR_1,          
   REFERENCE_CHAR_2,          
   REFERENCE_CHAR_3,          
   REFERENCE_CHAR_4,          
   REFERENCE_DATE_1,          
   REFERENCE_DATE_2,          
   REFERENCE_DATE_3,          
   REFERENCE_DATE_4,          
   EVENT_NUMBER,              
   ON_HOLD_FLAG,              
   CREATION_DATE,             
   CREATED_BY,                
   LAST_UPDATE_DATE,          
   LAST_UPDATED_BY,           
   LAST_UPDATE_LOGIN,         
   PROGRAM_UPDATE_DATE,      
   PROGRAM_APPLICATION_ID,    
   PROGRAM_ID,                
   REQUEST_ID,               
   UPG_BATCH_ID,              
   UPG_SOURCE_APPLICATION_ID, 
   UPG_VALID_FLAG,            
   TRANSACTION_DATE,          
   BUDGETARY_CONTROL_FLAG,    
   MERGE_EVENT_SET_ID,
   LEDGER_ID   
FROM FDW_STAGE_DB.LOAD_XLA_EVENTS_s;
);
--OA3NF_XLA_EVENT_CLASSES_TL
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_EVENT_CLASSES_TL AS(
DELETE FROM FDW_TABLES_DB.OA3NF_XLA_EVENT_CLASSES_TL ALL;
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_EVENT_CLASSES_TL
(
                  APPLICATION_ID, 
                 ENTITY_CODE,
     EVENT_CLASS_CODE, 
     LANG, 
     NAME,
           DESCRIPTION, 
     SOURCE_LANG, 
     CREATION_DATE, 
     CREATED_BY, 
     LAST_UPDATE_DATE,
           LAST_UPDATED_BY, 
     LAST_UPDATE_LOGIN
                )
                
SELECT APPLICATION_ID, 
                 ENTITY_CODE,
     EVENT_CLASS_CODE, 
     LANG, 
     NAME,
           DESCRIPTION, 
     SOURCE_LANG, 
     CREATION_DATE, 
     CREATED_BY, 
     LAST_UPDATE_DATE,
           LAST_UPDATED_BY, 
     LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_XLA_EVENT_CLASSES_TL_s;
);
--OA3NF_XLA_EVENT_TYPES_TL
REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_EVENT_TYPES_TL AS(
DELETE FROM FDW_TABLES_DB.OA3NF_XLA_EVENT_TYPES_TL ALL;
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_EVENT_TYPES_TL
(
                  APPLICATION_ID,
      ENTITY_CODE, 
      EVENT_CLASS_CODE, 
      EVENT_TYPE_CODE,
            LANG, 
      NAME, 
      DESCRIPTION, 
      SOURCE_LANG, 
      CREATION_DATE, 
      CREATED_BY,
            LAST_UPDATE_DATE, 
      LAST_UPDATED_BY, 
      LAST_UPDATE_LOGIN
                )
                
SELECT APPLICATION_ID, 
                  ENTITY_CODE, 
      EVENT_CLASS_CODE, 
      EVENT_TYPE_CODE,
            LANG, 
      NAME, 
      DESCRIPTION, 
      SOURCE_LANG, 
      CREATION_DATE, 
      CREATED_BY,
            LAST_UPDATE_DATE, 
      LAST_UPDATED_BY, 
      LAST_UPDATE_LOGIN
FROM FDW_STAGE_DB.LOAD_XLA_EVENT_TYPES_TL_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OA3NF_XLA_TRANSX_ENTITIES AS (

DELETE FROM FDW_TABLES_DB.OA3NF_XLA_TRANSX_ENTITIES
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_XLA_TRANSX_ENTITIES_s
where
        LOAD_XLA_TRANSX_ENTITIES_s.APPLICATION_ID = OA3NF_XLA_TRANSX_ENTITIES.APPLICATION_ID
   AND  LOAD_XLA_TRANSX_ENTITIES_s.LEDGER_ID = OA3NF_XLA_TRANSX_ENTITIES.LEDGER_ID
   AND  LOAD_XLA_TRANSX_ENTITIES_s.ENTITY_ID = OA3NF_XLA_TRANSX_ENTITIES.ENTITY_ID
   );
INSERT INTO FDW_TABLES_DB.OA3NF_XLA_TRANSX_ENTITIES ( 
  ENTITY_ID,                 
APPLICATION_ID,
LEGAL_ENTITY_ID,           
ENTITY_CODE,               
CREATION_DATE,             
CREATED_BY,                
LAST_UPDATE_DATE,          
LAST_UPDATED_BY,           
LAST_UPDATE_LOGIN,         
SOURCE_ID_INT_1,           
SOURCE_ID_CHAR_1,          
SECURITY_ID_INT_1,         
SECURITY_ID_INT_2,         
SECURITY_ID_INT_3 ,        
SECURITY_ID_CHAR_1,        
SECURITY_ID_CHAR_2,        
SECURITY_ID_CHAR_3,        
SOURCE_ID_INT_2,           
SOURCE_ID_CHAR_2,          
SOURCE_ID_INT_3,           
SOURCE_ID_CHAR_3,          
SOURCE_ID_INT_4,           
SOURCE_ID_CHAR_4,          
TRANSACTION_NUMBER,        
LEDGER_ID,                 
VALUATION_METHOD,          
SOURCE_APPLICATION_ID,     
UPG_BATCH_ID,              
UPG_SOURCE_APPLICATION_ID, 
UPG_VALID_FLAG          
 ) 

SELECT 

  ENTITY_ID,                 
APPLICATION_ID,
LEGAL_ENTITY_ID,           
ENTITY_CODE,               
CREATION_DATE,             
CREATED_BY,                
LAST_UPDATE_DATE,          
LAST_UPDATED_BY,           
LAST_UPDATE_LOGIN,         
SOURCE_ID_INT_1,           
SOURCE_ID_CHAR_1,          
SECURITY_ID_INT_1,         
SECURITY_ID_INT_2,         
SECURITY_ID_INT_3 ,        
SECURITY_ID_CHAR_1,        
SECURITY_ID_CHAR_2,        
SECURITY_ID_CHAR_3,        
SOURCE_ID_INT_2,           
SOURCE_ID_CHAR_2,          
SOURCE_ID_INT_3,           
SOURCE_ID_CHAR_3,          
SOURCE_ID_INT_4,           
SOURCE_ID_CHAR_4,          
TRANSACTION_NUMBER,        
LEDGER_ID,                 
VALUATION_METHOD,          
SOURCE_APPLICATION_ID,     
UPG_BATCH_ID,              
UPG_SOURCE_APPLICATION_ID, 
UPG_VALID_FLAG                         
FROM FDW_STAGE_DB.LOAD_XLA_TRANSX_ENTITIES_s;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_AP_ACCT_DATE_D AS (

DELETE FROM FDW_TABLES_DB.OASEM_AP_ACCT_DATE_D;

INSERT INTO FDW_TABLES_DB.OASEM_AP_ACCT_DATE_D
( 
   AP_ACCT_DATE
   ,AP_ACCT_DATE_KEY
   ,AP_ACCT_DATE_MONTH
   ,AP_ACCT_DATE_QUARTER
   ,AP_ACCT_DATE_WEEK_ENDING
   ,AP_ACCT_DATE_YEAR
) 
SELECT
   OA3NF_DB_CALENDAR.CALENDAR_DATE
   ,OA3NF_DB_CALENDAR.CALENDAR_DATE
   ,OA3NF_DB_CALENDAR.CALENDAR_MONTH
   ,OA3NF_DB_CALENDAR.CALENDAR_QUARTER
   ,OA3NF_DB_CALENDAR.CALENDAR_WEEK_ENDING
   ,OA3NF_DB_CALENDAR.CALENDAR_YEAR
 FROM 
   FDW_TABLES_DB.OA3NF_DB_CALENDAR;
   
   
  );
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_CALENDAR_TY_LY
AS (

DELETE FROM FDW_TABLES_DB.OASEM_BI_CALENDAR_TY_LY;

INSERT INTO FDW_TABLES_DB.OASEM_BI_CALENDAR_TY_LY
Select unique
b.PERIOD,
b.PERIOD_ID,
Case 
     when (
          substr(cast(b.PERIOD as varchar(10)),5,2) in ('02','03','04','05','06','07','08','09','10','11','12')
     ) 
     then (b.PERIOD - 1)
     when (
          substr(cast(b.PERIOD as varchar(10)),5,2) in ('01')
     ) 
     then (
          cast (
               cast(b.PERIOD_YEAR_LY as varchar(4)) || '12'
          as decimal(18,0))
     )
     else null
     end
as PERIOD_LP,
Case 
     when (
          substr(cast(b.PERIOD as varchar(10)),5,2) in ('01','02','03','04','05','06','07','08','09','10','11')
     ) 
     then (b.PERIOD + 1)
     when (
          substr(cast(b.PERIOD as varchar(10)),5,2) in ('12')
     ) 
     then (
          cast (
               cast(b.PERIOD_YEAR_NY as varchar(4)) || '01'
          as decimal(18,0))
     )
     else null
     end
as PERIOD_NP,
cast (
     (
          cast(b.PERIOD_YEAR_LY as varchar(4)) || substr(cast(b.PERIOD as varchar(10)),5,2)
     ) as decimal(18,0)
) as PERIOD_LY_CP,
cast (
     (
          cast(b.PERIOD_YEAR_NY as varchar(4)) || substr(cast(b.PERIOD as varchar(10)),5,2)
     ) as decimal(18,0)
) as PERIOD_NY_CP,
b.PERIOD_QUARTER,
Case 
     when (
          substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1) in ('2','3','4')
     ) 
     then (b.PERIOD_QUARTER - 1)
     when (
          substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1) in ('1')
     ) 
     then (
          cast (
               cast(b.PERIOD_YEAR_LY as varchar(4)) || '4'
          as decimal(18,0))
     )
     else null
     end
as PERIOD_QUARTER_LQ,
Case 
     when (
          substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1) in ('1','2','3')
     ) 
     then (b.PERIOD_QUARTER + 1)
     when (
          substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1) in ('4')
     ) 
     then (
          cast (
               cast(b.PERIOD_YEAR_NY as varchar(4)) || '1'
          as decimal(18,0))
     )
     else null
     end
as PERIOD_QUARTER_NQ,
cast (
     (
          cast(b.PERIOD_YEAR_LY as varchar(4)) || substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1)
     ) as decimal(18,0)
) as PERIOD_QUARTER_LY_CQ,
cast (
     (
          cast(b.PERIOD_YEAR_NY as varchar(4)) || substr(cast(b.PERIOD_QUARTER as varchar(10)),5,1)
     ) as decimal(18,0)
) as PERIOD_QUARTER_NY_CQ,
b.PERIOD_YEAR,
b.PERIOD_YEAR_LY,
b.PERIOD_YEAR_NY

From
(
     Select unique
     a.GL_PERIOD_ID as PERIOD_ID,
     cast(
          (
               substr(trim(a.PERIOD_YEAR),0,5) || 
               (
                    case 
                         when cast(trim(a.PERIOD_NUM) as decimal(18,0)) between 0 and 9
                         then ('0' || trim(a.PERIOD_NUM))
                         else trim(a.PERIOD_NUM)
                         end 
               )
          ) as decimal(18,0)
     ) as PERIOD,
     cast(
          (
               substr(trim(a.PERIOD_YEAR),0,5) ||  trim(a.QUARTER_NUM)
          ) as decimal(18,0)
     ) as PERIOD_QUARTER,
     cast(
          (
               trim(a.PERIOD_YEAR)
          ) as decimal(18,0)
     ) as PERIOD_YEAR,
     (
          cast (trim(a.PERIOD_YEAR) as decimal(18,0)) - 1
     ) as PERIOD_YEAR_LY,
     (
          cast (trim(a.PERIOD_YEAR) as decimal(18,0)) + 1
     ) as PERIOD_YEAR_NY
     
     From
     FDW_TABLES_DB.OA3NF_GL_PERIODS a

     Where 
     a.GL_PERIOD_ID is not null
     AND a.GL_PERIOD_ID <> 'NA'
	 AND a.SET_OF_BOOKS_ID in ( SELECT SET_OF_BOOKS_ID from FDW_TABLES_DB.OA3NF_SET_OF_BOOKS where Set_of_books_name  in ('CBS Studios USD','CBS Distribution USD'))
) b;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_DIV_OWNER_GRPS AS (

MERGE INTO FDW_TABLES_DB.OASEM_BI_DIV_OWNER_GRPS
USING
(SELECT 
TRIM(PROD_DIVISION_OWNER_CODE) AS PROD_DIVISION_OWNER_CODE,
TRIM(DIVISION_OWNER_DESC) AS DIVISION_OWNER_DESC,
TRIM(RPT_GROUPING_DIVOWNER_01) AS RPT_GROUPING_DIVOWNER_01,
TRIM(RPT_GROUPING_DIVOWNER_02) AS RPT_GROUPING_DIVOWNER_02,
TRIM(RPT_GROUPING_DIVOWNER_03) AS RPT_GROUPING_DIVOWNER_03,
SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_BI_DIV_OWNER_GRPS_s)  AS LOAD_BI_DIV_OWNER_GRPS_s
ON ( FDW_TABLES_DB.OASEM_BI_DIV_OWNER_GRPS.PROD_DIVISION_OWNER_CODE=LOAD_BI_DIV_OWNER_GRPS_s.PROD_DIVISION_OWNER_CODE
AND FDW_TABLES_DB.OASEM_BI_DIV_OWNER_GRPS.SET_OF_BOOKS_ID=LOAD_BI_DIV_OWNER_GRPS_s.SET_OF_BOOKS_ID)

WHEN MATCHED THEN UPDATE
SET 
DIVISION_OWNER_DESC=LOAD_BI_DIV_OWNER_GRPS_s.DIVISION_OWNER_DESC,
RPT_GROUPING_DIVOWNER_01=LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_01,
RPT_GROUPING_DIVOWNER_02=LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_02,
RPT_GROUPING_DIVOWNER_03=LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_03

WHEN NOT MATCHED THEN INSERT
(
PROD_DIVISION_OWNER_CODE,
DIVISION_OWNER_DESC,
RPT_GROUPING_DIVOWNER_01,
RPT_GROUPING_DIVOWNER_02,
RPT_GROUPING_DIVOWNER_03,
SET_OF_BOOKS_ID

) VALUES
(
LOAD_BI_DIV_OWNER_GRPS_s.PROD_DIVISION_OWNER_CODE,
LOAD_BI_DIV_OWNER_GRPS_s.DIVISION_OWNER_DESC,
LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_01,
LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_02,
LOAD_BI_DIV_OWNER_GRPS_s.RPT_GROUPING_DIVOWNER_03,
LOAD_BI_DIV_OWNER_GRPS_s.SET_OF_BOOKS_ID
);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCTS_BAL_F
AS (

--DIRECTLY LOADING FROM OASEM_BI_GL_ACCT_BAL_F

REPLACE VIEW FDW_TABLES_DB.OASEM_BI_GL_ACCTS_BAL_F
(
   ACCOUNT_TYPE_KEY
   ,ACCOUNT__KEY
   ,ACTUAL_BEGIN_BALANCE_TXN
   ,ACTUAL_BEGIN_BALANCE_USD
   ,ACTUAL_ENDING_BALANCE_TXN
   ,ACTUAL_ENDING_BALANCE_USD
   ,BUDGET_BEGIN_BALANCE_TXN
   ,BUDGET_BEGIN_BALANCE_USD
   ,BUDGET_ENDING_BALANCE_TXN
   ,BUDGET_ENDING_BALANCE_USD
   ,BUSINESS_ENTITY_KEY
   ,CODE_COMBINATION_ID
   ,CURRENCY_KEY
   ,DEPARTMENT_KEY
   ,DETAIL_KEY
   ,VENDOR_KEY
   ,FUTURE_KEY
   ,GL_ACCOUNT_KEY
   ,GL_BUDGET_KEY
   ,INTERCOMPANY_KEY
   ,LAST_UPDATE_DATE
   ,MEDIUM_KEY
   ,PERIOD_KEY
   ,PERIOD_YEAR
   ,PRODUCT_SEASON_EPISODE_KEY
   ,PROJECT_TO_DATE_CR_TXN
   ,PROJECT_TO_DATE_CR_USD
   ,PROJECT_TO_DATE_DR_TXN
   ,PROJECT_TO_DATE_DR_USD
   ,PROJ_BAL_ACTUAL_TXN
   ,PROJ_BAL_ACTUAL_USD
   ,PROJ_BAL_BUDGET_TXN
   ,PROJ_BAL_BUDGET_USD
   ,PTD_ACTUAL_BEGIN_BAL_CR_TXN
   ,PTD_ACTUAL_BEGIN_BAL_CR_USD
   ,PTD_ACTUAL_BEGIN_BAL_DR_TXN
   ,PTD_ACTUAL_BEGIN_BAL_DR_USD
   ,PTD_ACTUAL_CREDITS_TXN
   ,PTD_ACTUAL_CREDITS_USD
   ,PTD_ACTUAL_DEBITS_TXN
   ,PTD_ACTUAL_DEBITS_USD
   ,PTD_ACTUAL_NET_ACTIVITY_TXN
   ,PTD_ACTUAL_NET_ACTIVITY_USD
   ,PTD_BUDGET_ACTIVITY_TXN
   ,PTD_BUDGET_ACTIVITY_USD
   ,PTD_BUDGET_BEGIN_BAL_CR_TXN
   ,PTD_BUDGET_BEGIN_BAL_CR_USD
   ,PTD_BUDGET_BEGIN_BAL_DR_TXN
   ,PTD_BUDGET_BEGIN_BAL_DR_USD
   ,PTD_BUDGET_CREDITS_TXN
   ,PTD_BUDGET_CREDITS_USD
   ,PTD_BUDGET_DEBITS_TXN
   ,PTD_BUDGET_DEBITS_USD
   ,PTD_BUDGET_NET_ACTIVITY_TXN
   ,PTD_BUDGET_NET_ACTIVITY_USD
   ,PTD_BUDGET_TXN
   ,PTD_BUDGET_USD
   ,PTD_VARIANCE_TXN
   ,PTD_VARIANCE_USD
   ,P_MTD_ACT_NET_ACTIVITY_TXN
   ,P_MTD_ACT_NET_ACTIVITY_USD
   ,P_QTD_ACT_NET_ACTIVITY_TXN
   ,P_QTD_ACT_NET_ACTIVITY_USD
   ,P_YR_ACT_NET_ACTIVITY_TXN
   ,P_YR_ACT_NET_ACTIVITY_USD
   ,P_YR_MTD_ACT_NET_ACTIVITY_TXN
   ,P_YR_MTD_ACT_NET_ACTIVITY_USD
   ,P_YR_QTD_ACT_NET_ACTIVITY_TXN
   ,P_YR_QTD_ACT_NET_ACTIVITY_USD
   ,P_YTD_ACT_NET_ACTIVITY_TXN
   ,P_YTD_ACT_NET_ACTIVITY_USD
   ,QBAL_ACTUAL_TXN
   ,QBAL_ACTUAL_USD
   ,QBAL_BUDGET_TXN
   ,QBAL_BUDGET_USD
   ,QTD_ACTUAL_CREDITS_TXN
   ,QTD_ACTUAL_CREDITS_USD
   ,QTD_ACTUAL_DEBITS_TXN
   ,QTD_ACTUAL_DEBITS_USD
   ,QTD_ACTUAL_NET_ACTIVITY_TXN
   ,QTD_ACTUAL_NET_ACTIVITY_USD
   ,QTD_BUDGET_CREDITS_TXN
   ,QTD_BUDGET_CREDITS_USD
   ,QTD_BUDGET_DEBITS_TXN
   ,QTD_BUDGET_DEBITS_USD
   ,QTD_BUDGET_NET_ACTIVITY_TXN
   ,QTD_BUDGET_NET_ACTIVITY_USD
   ,QTD_VARIANCE_TXN
   ,QTD_VARIANCE_USD
   ,SET_OF_BOOKS_KEY
   ,TEMPLATE_KEY
   ,TERRITORY_KEY
   ,USER_DEFINED_KEY
   ,YBAL_ACTUAL_TXN
   ,YBAL_ACTUAL_USD
   ,YBAL_BUDGET_TXN
   ,YBAL_BUDGET_USD
   ,YTD_ACTUAL_CREDITS_TXN
   ,YTD_ACTUAL_CREDITS_USD
   ,YTD_ACTUAL_DEBITS_TXN
   ,YTD_ACTUAL_DEBITS_USD
   ,YTD_ACTUAL_NET_ACTIVITY_TXN
   ,YTD_ACTUAL_NET_ACTIVITY_USD
   ,YTD_BUDGET_CREDITS_TXN
   ,YTD_BUDGET_CREDITS_USD
   ,YTD_BUDGET_DEBITS_TXN
   ,YTD_BUDGET_DEBITS_USD
   ,YTD_BUDGET_NET_ACTIVITY_TXN
   ,YTD_BUDGET_NET_ACTIVITY_USD
   ,YTD_VARIANCE_TXN
   ,YTD_VARIANCE_USD
   ,P_YR_CUR_MON_BEGBAL_TXN
   ,P_YR_CUR_MON_BEGBAL_USD
   ,P_YR_CUR_MON_ENDBAL_TXN
   ,P_YR_CUR_MON_ENDBAL_USD
   ,P_YR_PMTD_TXN
   ,P_YR_PMTD_USD
)
AS 
SELECT
   OASEM_BI_GL_ACCT_BAL_F.ACCOUNT_TYPE_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.ACCOUNT__KEY
   ,OASEM_BI_GL_ACCT_BAL_F.ACTUAL_BEGIN_BALANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.ACTUAL_BEGIN_BALANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.ACTUAL_ENDING_BALANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.ACTUAL_ENDING_BALANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.BUDGET_BEGIN_BALANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.BUDGET_BEGIN_BALANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.BUDGET_ENDING_BALANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.BUDGET_ENDING_BALANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.BUSINESS_ENTITY_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID
   ,OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.DEPARTMENT_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.DETAIL_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.VENDOR_KEY 
   ,OASEM_BI_GL_ACCT_BAL_F.FUTURE_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.GL_ACCOUNT_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.INTERCOMPANY_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.LAST_UPDATE_DATE
   ,OASEM_BI_GL_ACCT_BAL_F.MEDIUM_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.PERIOD_YEAR
   ,OASEM_BI_GL_ACCT_BAL_F.PRODUCT_SEASON_EPISODE_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.PROJECT_TO_DATE_CR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PROJECT_TO_DATE_CR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PROJECT_TO_DATE_DR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PROJECT_TO_DATE_DR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PROJ_BAL_ACTUAL_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PROJ_BAL_ACTUAL_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PROJ_BAL_BUDGET_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PROJ_BAL_BUDGET_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_BEGIN_BAL_CR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_BEGIN_BAL_CR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_BEGIN_BAL_DR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_BEGIN_BAL_DR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_ACTUAL_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_BEGIN_BAL_CR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_BEGIN_BAL_CR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_BEGIN_BAL_DR_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_BEGIN_BAL_DR_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_BUDGET_USD
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_VARIANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.PTD_VARIANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_MTD_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_MTD_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_QTD_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_QTD_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_MTD_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_MTD_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_QTD_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_QTD_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YTD_ACT_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YTD_ACT_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QBAL_ACTUAL_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QBAL_ACTUAL_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QBAL_BUDGET_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QBAL_BUDGET_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_ACTUAL_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_BUDGET_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_VARIANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.QTD_VARIANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.TEMPLATE_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.TERRITORY_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.USER_DEFINED_KEY
   ,OASEM_BI_GL_ACCT_BAL_F.YBAL_ACTUAL_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YBAL_ACTUAL_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YBAL_BUDGET_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YBAL_BUDGET_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_ACTUAL_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_CREDITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_CREDITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_DEBITS_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_DEBITS_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_NET_ACTIVITY_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_BUDGET_NET_ACTIVITY_USD
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_VARIANCE_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.YTD_VARIANCE_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_CUR_MON_BEGBAL_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_CUR_MON_BEGBAL_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_CUR_MON_ENDBAL_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_CUR_MON_ENDBAL_USD
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_PMTD_TXN
   ,OASEM_BI_GL_ACCT_BAL_F.P_YR_PMTD_USD
 FROM 
   FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCT_BAL_F
AS (

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s
where
   LOAD_BI_GL_ACCT_BAL_F_s.CODE_COMBINATION_ID = OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID
   AND LOAD_BI_GL_ACCT_BAL_F_s.CURRENCY_KEY = OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.GL_BUDGET_KEY = OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.PERIOD_KEY = OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.SET_OF_BOOKS_KEY = OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY
   );

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F ( 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD	)
SELECT 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD
   FROM FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s;
   
   

-------------BI_P_MTD_UPDATE------------------------
Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_MTD_UPDATE b1

Set 
P_MTD_ACT_NET_ACTIVITY_TXN = b1.P_MTD_ACT_NET_ACTIVITY_TXN,
P_MTD_ACT_NET_ACTIVITY_USD = b1.P_MTD_ACT_NET_ACTIVITY_USD,
P_YTD_ACT_NET_ACTIVITY_TXN = b1.P_YTD_ACT_NET_ACTIVITY_TXN,
P_YTD_ACT_NET_ACTIVITY_USD = b1.P_YTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_YR_MTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_YR_MTD_UPDATE b1

Set 
P_YR_MTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
P_YR_MTD_ACT_NET_ACTIVITY_USD = b1.P_YR_MTD_ACT_NET_ACTIVITY_USD,
P_YR_QTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
P_YR_QTD_ACT_NET_ACTIVITY_USD = b1.P_YR_QTD_ACT_NET_ACTIVITY_USD,
P_YR_ACT_NET_ACTIVITY_TXN = b1.P_YR_ACT_NET_ACTIVITY_TXN,
P_YR_ACT_NET_ACTIVITY_USD = b1.P_YR_ACT_NET_ACTIVITY_USD,
P_YR_CUR_MON_BEGBAL_TXN = b1.P_YR_CUR_MON_BEGBAL_TXN,
P_YR_CUR_MON_BEGBAL_USD = b1.P_YR_CUR_MON_BEGBAL_USD,
P_YR_CUR_MON_ENDBAL_TXN = b1.P_YR_CUR_MON_ENDBAL_TXN,
P_YR_CUR_MON_ENDBAL_USD = b1.P_YR_CUR_MON_ENDBAL_USD,
P_YR_PMTD_TXN = b1.P_YR_PMTD_TXN,
P_YR_PMTD_USD = b1.P_YR_PMTD_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_QTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F

From
FDW_SEM_DB.OASEM_BI_P_QTD_UPDATE b1

Set 
P_QTD_ACT_NET_ACTIVITY_TXN = b1.P_QTD_ACT_NET_ACTIVITY_TXN,
P_QTD_ACT_NET_ACTIVITY_USD = b1.P_QTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY = b1.PERIOD_KEY;
);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCT_BAL_F_N  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_N WHERE  OASEM_BI_GL_ACCT_BAL_F_N.period_key = :PARAM_PERIOD_KEY ;

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_N
SELECT    F.SET_OF_BOOKS_KEY, PERIOD_KEY, D.TEMPLATE_NAME AS FCS_ACCOUNT_NUM, BUSINESS_ENTITY_KEY,
        ACCOUNT__KEY, DEPARTMENT_KEY, PRODUCT_SEASON_EPISODE_KEY, MEDIUM_KEY,
        DETAIL_KEY, TERRITORY_KEY, INTERCOMPANY_KEY, USER_DEFINED_KEY,
        VENDOR_KEY, FUTURE_KEY, GL_ACCOUNT_KEY, GL_BUDGET_KEY, F.LAST_UPDATE_DATE,
        F.TEMPLATE_KEY, CODE_COMBINATION_ID, CURRENCY_KEY, 
		ACTUAL_BEGIN_BALANCE_TXN,
		ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
		BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
		BUDGET_ENDING_BALANCE_USD, 
		PROJECT_TO_DATE_CR_TXN,PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN, PROJECT_TO_DATE_DR_USD,
        PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD, PROJ_BAL_BUDGET_TXN,
        PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN, PTD_ACTUAL_BEGIN_BAL_CR_USD,
        PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD, PTD_ACTUAL_CREDITS_TXN,
        PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN, PTD_ACTUAL_DEBITS_USD,
        PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD, PTD_BUDGET_ACTIVITY_TXN,
        PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN, PTD_BUDGET_BEGIN_BAL_CR_USD,
        PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD, PTD_BUDGET_CREDITS_TXN,
        PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN, PTD_BUDGET_DEBITS_USD,
        PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD, PTD_BUDGET_TXN,
        PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD, P_MTD_ACT_NET_ACTIVITY_TXN,
        P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN, P_QTD_ACT_NET_ACTIVITY_USD,
        P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD, P_YR_MTD_ACT_NET_ACTIVITY_TXN,
        P_YR_MTD_ACT_NET_ACTIVITY_USD, P_YR_QTD_ACT_NET_ACTIVITY_TXN,
        P_YR_QTD_ACT_NET_ACTIVITY_USD, P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD,
        QBAL_ACTUAL_TXN, QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD,
        QTD_ACTUAL_CREDITS_TXN, QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN,
        QTD_ACTUAL_DEBITS_USD, QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD,
        QTD_BUDGET_CREDITS_TXN, QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN,
        QTD_BUDGET_DEBITS_USD, QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD,
        QTD_VARIANCE_TXN, QTD_VARIANCE_USD, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD,
        YBAL_BUDGET_TXN, YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
        YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
        YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
        YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
        YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
        P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
        P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
        FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F  F
      LEFT JOIN FDW_CTD_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    AND F.SET_OF_BOOKS_KEY = D.SET_OF_BOOKS_ID
where F.period_key = :PARAM_PERIOD_KEY and F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID and F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCT_BAL_F_O  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT,PARAM_BUDGET_KEY VARCHAR(50)) AS(

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_O  where  OASEM_BI_GL_ACCT_BAL_F_O.period_key = :PARAM_PERIOD_KEY ;

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_O
 SELECT    F.SET_OF_BOOKS_KEY, F.PERIOD_KEY, D.TEMPLATE_NAME AS FCS_ACCOUNT_NUM, BUSINESS_ENTITY_KEY,
        ACCOUNT__KEY, DEPARTMENT_KEY, PRODUCT_SEASON_EPISODE_KEY, MEDIUM_KEY,
        DETAIL_KEY, TERRITORY_KEY, INTERCOMPANY_KEY, USER_DEFINED_KEY,
        F.FUTURE_KEY AS VENDOR_KEY, '00000000' FUTURE_KEY, GL_ACCOUNT_KEY, GL_BUDGET_KEY, LAST_UPDATE_DATE,
        F.TEMPLATE_KEY, CODE_COMBINATION_ID, CURRENCY_KEY, COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) AS CONV_VENDOR_KEY,
	    ACTUAL_BEGIN_BALANCE_TXN,
		ACTUAL_BEGIN_BALANCE_USD, ACTUAL_ENDING_BALANCE_TXN, ACTUAL_ENDING_BALANCE_USD,
		BUDGET_BEGIN_BALANCE_TXN, BUDGET_BEGIN_BALANCE_USD, BUDGET_ENDING_BALANCE_TXN,
		BUDGET_ENDING_BALANCE_USD, 
        PROJECT_TO_DATE_CR_TXN, PROJECT_TO_DATE_CR_USD, PROJECT_TO_DATE_DR_TXN,
        PROJECT_TO_DATE_DR_USD, PROJ_BAL_ACTUAL_TXN, PROJ_BAL_ACTUAL_USD,
        PROJ_BAL_BUDGET_TXN, PROJ_BAL_BUDGET_USD, PTD_ACTUAL_BEGIN_BAL_CR_TXN,
        PTD_ACTUAL_BEGIN_BAL_CR_USD, PTD_ACTUAL_BEGIN_BAL_DR_TXN, PTD_ACTUAL_BEGIN_BAL_DR_USD,
        PTD_ACTUAL_CREDITS_TXN, PTD_ACTUAL_CREDITS_USD, PTD_ACTUAL_DEBITS_TXN,
        PTD_ACTUAL_DEBITS_USD, PTD_ACTUAL_NET_ACTIVITY_TXN, PTD_ACTUAL_NET_ACTIVITY_USD,
        PTD_BUDGET_ACTIVITY_TXN, PTD_BUDGET_ACTIVITY_USD, PTD_BUDGET_BEGIN_BAL_CR_TXN,
        PTD_BUDGET_BEGIN_BAL_CR_USD, PTD_BUDGET_BEGIN_BAL_DR_TXN, PTD_BUDGET_BEGIN_BAL_DR_USD,
        PTD_BUDGET_CREDITS_TXN, PTD_BUDGET_CREDITS_USD, PTD_BUDGET_DEBITS_TXN,
        PTD_BUDGET_DEBITS_USD, PTD_BUDGET_NET_ACTIVITY_TXN, PTD_BUDGET_NET_ACTIVITY_USD,
        PTD_BUDGET_TXN, PTD_BUDGET_USD, PTD_VARIANCE_TXN, PTD_VARIANCE_USD,
        P_MTD_ACT_NET_ACTIVITY_TXN, P_MTD_ACT_NET_ACTIVITY_USD, P_QTD_ACT_NET_ACTIVITY_TXN,
        P_QTD_ACT_NET_ACTIVITY_USD, P_YR_ACT_NET_ACTIVITY_TXN, P_YR_ACT_NET_ACTIVITY_USD,
        P_YR_MTD_ACT_NET_ACTIVITY_TXN, P_YR_MTD_ACT_NET_ACTIVITY_USD,
        P_YR_QTD_ACT_NET_ACTIVITY_TXN, P_YR_QTD_ACT_NET_ACTIVITY_USD,
        P_YTD_ACT_NET_ACTIVITY_TXN, P_YTD_ACT_NET_ACTIVITY_USD, QBAL_ACTUAL_TXN,
        QBAL_ACTUAL_USD, QBAL_BUDGET_TXN, QBAL_BUDGET_USD, QTD_ACTUAL_CREDITS_TXN,
        QTD_ACTUAL_CREDITS_USD, QTD_ACTUAL_DEBITS_TXN, QTD_ACTUAL_DEBITS_USD,
        QTD_ACTUAL_NET_ACTIVITY_TXN, QTD_ACTUAL_NET_ACTIVITY_USD, QTD_BUDGET_CREDITS_TXN,
        QTD_BUDGET_CREDITS_USD, QTD_BUDGET_DEBITS_TXN, QTD_BUDGET_DEBITS_USD,
        QTD_BUDGET_NET_ACTIVITY_TXN, QTD_BUDGET_NET_ACTIVITY_USD, QTD_VARIANCE_TXN,
        QTD_VARIANCE_USD, YBAL_ACTUAL_TXN, YBAL_ACTUAL_USD, YBAL_BUDGET_TXN,
        YBAL_BUDGET_USD, YTD_ACTUAL_CREDITS_TXN, YTD_ACTUAL_CREDITS_USD,
        YTD_ACTUAL_DEBITS_TXN, YTD_ACTUAL_DEBITS_USD, YTD_ACTUAL_NET_ACTIVITY_TXN,
        YTD_ACTUAL_NET_ACTIVITY_USD, YTD_BUDGET_CREDITS_TXN, YTD_BUDGET_CREDITS_USD,
        YTD_BUDGET_DEBITS_TXN, YTD_BUDGET_DEBITS_USD, YTD_BUDGET_NET_ACTIVITY_TXN,
        YTD_BUDGET_NET_ACTIVITY_USD, YTD_VARIANCE_TXN, YTD_VARIANCE_USD,
        P_YR_CUR_MON_BEGBAL_TXN, P_YR_CUR_MON_BEGBAL_USD, P_YR_CUR_MON_ENDBAL_TXN,
        P_YR_CUR_MON_ENDBAL_USD, P_YR_PMTD_TXN, P_YR_PMTD_USD
FROM FDM_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F  F   
    LEFT      JOIN FDM_SEM_DB.OASEM_TEMPLATE_D D
    ON F.TEMPLATE_KEY = D.TEMPLATE_KEY
    LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
WHERE F.period_key = :PARAM_PERIOD_KEY and F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID and F.GL_BUDGET_KEY = :PARAM_BUDGET_KEY
;

);
-- Execute in CBSPROD2

--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCT_BAL_F_SGI
AS (

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI
WHERE exists
(
select '1'
from 
   FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s
where
   LOAD_BI_GL_ACCT_BAL_F_s.CODE_COMBINATION_ID = OASEM_BI_GL_ACCT_BAL_F_SGI.CODE_COMBINATION_ID
   AND LOAD_BI_GL_ACCT_BAL_F_s.CURRENCY_KEY = OASEM_BI_GL_ACCT_BAL_F_SGI.CURRENCY_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.GL_BUDGET_KEY = OASEM_BI_GL_ACCT_BAL_F_SGI.GL_BUDGET_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.PERIOD_KEY = OASEM_BI_GL_ACCT_BAL_F_SGI.PERIOD_KEY
   AND LOAD_BI_GL_ACCT_BAL_F_s.SET_OF_BOOKS_KEY = OASEM_BI_GL_ACCT_BAL_F_SGI.SET_OF_BOOKS_KEY
   );

INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI ( 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD )
SELECT 
   ACCOUNT_TYPE_KEY,
   ACCOUNT__KEY,
   ACTUAL_BEGIN_BALANCE_TXN,
   ACTUAL_BEGIN_BALANCE_USD,
   ACTUAL_ENDING_BALANCE_TXN,
   ACTUAL_ENDING_BALANCE_USD,
   BUDGET_BEGIN_BALANCE_TXN,
   BUDGET_BEGIN_BALANCE_USD,
   BUDGET_ENDING_BALANCE_TXN,
   BUDGET_ENDING_BALANCE_USD,
   BUSINESS_ENTITY_KEY,
   CODE_COMBINATION_ID,
   CURRENCY_KEY,
   DEPARTMENT_KEY,
   DETAIL_KEY,
   VENDOR_KEY,
   FUTURE_KEY,
   GL_ACCOUNT_KEY,
   GL_BUDGET_KEY,
   INTERCOMPANY_KEY,
   LAST_UPDATE_DATE,
   MEDIUM_KEY,
   PERIOD_KEY,
   PERIOD_YEAR,
   PRODUCT_SEASON_EPISODE_KEY,
   PROJECT_TO_DATE_CR_TXN,
   PROJECT_TO_DATE_CR_USD,
   PROJECT_TO_DATE_DR_TXN,
   PROJECT_TO_DATE_DR_USD,
   PROJ_BAL_ACTUAL_TXN,
   PROJ_BAL_ACTUAL_USD,
   PROJ_BAL_BUDGET_TXN,
   PROJ_BAL_BUDGET_USD,
   PTD_ACTUAL_BEGIN_BAL_CR_TXN,
   PTD_ACTUAL_BEGIN_BAL_CR_USD,
   PTD_ACTUAL_BEGIN_BAL_DR_TXN,
   PTD_ACTUAL_BEGIN_BAL_DR_USD,
   PTD_ACTUAL_CREDITS_TXN,
   PTD_ACTUAL_CREDITS_USD,
   PTD_ACTUAL_DEBITS_TXN,
   PTD_ACTUAL_DEBITS_USD,
   PTD_ACTUAL_NET_ACTIVITY_TXN,
   PTD_ACTUAL_NET_ACTIVITY_USD,
   PTD_BUDGET_ACTIVITY_TXN,
   PTD_BUDGET_ACTIVITY_USD,
   PTD_BUDGET_BEGIN_BAL_CR_TXN,
   PTD_BUDGET_BEGIN_BAL_CR_USD,
   PTD_BUDGET_BEGIN_BAL_DR_TXN,
   PTD_BUDGET_BEGIN_BAL_DR_USD,
   PTD_BUDGET_CREDITS_TXN,
   PTD_BUDGET_CREDITS_USD,
   PTD_BUDGET_DEBITS_TXN,
   PTD_BUDGET_DEBITS_USD,
   PTD_BUDGET_NET_ACTIVITY_TXN,
   PTD_BUDGET_NET_ACTIVITY_USD,
   PTD_BUDGET_TXN,
   PTD_BUDGET_USD,
   PTD_VARIANCE_TXN,
   PTD_VARIANCE_USD,
   P_MTD_ACT_NET_ACTIVITY_TXN,
   P_MTD_ACT_NET_ACTIVITY_USD,
   P_QTD_ACT_NET_ACTIVITY_TXN,
   P_QTD_ACT_NET_ACTIVITY_USD,
   P_YR_ACT_NET_ACTIVITY_TXN,
   P_YR_ACT_NET_ACTIVITY_USD,
   P_YR_MTD_ACT_NET_ACTIVITY_TXN,
   P_YR_MTD_ACT_NET_ACTIVITY_USD,
   P_YR_QTD_ACT_NET_ACTIVITY_TXN,
   P_YR_QTD_ACT_NET_ACTIVITY_USD,
   P_YTD_ACT_NET_ACTIVITY_TXN,
   P_YTD_ACT_NET_ACTIVITY_USD,
   QBAL_ACTUAL_TXN,
   QBAL_ACTUAL_USD,
   QBAL_BUDGET_TXN,
   QBAL_BUDGET_USD,
   QTD_ACTUAL_CREDITS_TXN,
   QTD_ACTUAL_CREDITS_USD,
   QTD_ACTUAL_DEBITS_TXN,
   QTD_ACTUAL_DEBITS_USD,
   QTD_ACTUAL_NET_ACTIVITY_TXN,
   QTD_ACTUAL_NET_ACTIVITY_USD,
   QTD_BUDGET_CREDITS_TXN,
   QTD_BUDGET_CREDITS_USD,
   QTD_BUDGET_DEBITS_TXN,
   QTD_BUDGET_DEBITS_USD,
   QTD_BUDGET_NET_ACTIVITY_TXN,
   QTD_BUDGET_NET_ACTIVITY_USD,
   QTD_VARIANCE_TXN,
   QTD_VARIANCE_USD,
   SET_OF_BOOKS_KEY,
   TEMPLATE_KEY,
   TERRITORY_KEY,
   USER_DEFINED_KEY,
   YBAL_ACTUAL_TXN,
   YBAL_ACTUAL_USD,
   YBAL_BUDGET_TXN,
   YBAL_BUDGET_USD,
   YTD_ACTUAL_CREDITS_TXN,
   YTD_ACTUAL_CREDITS_USD,
   YTD_ACTUAL_DEBITS_TXN,
   YTD_ACTUAL_DEBITS_USD,
   YTD_ACTUAL_NET_ACTIVITY_TXN,
   YTD_ACTUAL_NET_ACTIVITY_USD,
   YTD_BUDGET_CREDITS_TXN,
   YTD_BUDGET_CREDITS_USD,
   YTD_BUDGET_DEBITS_TXN,
   YTD_BUDGET_DEBITS_USD,
   YTD_BUDGET_NET_ACTIVITY_TXN,
   YTD_BUDGET_NET_ACTIVITY_USD,
   YTD_VARIANCE_TXN,
   YTD_VARIANCE_USD,
   P_YR_CUR_MON_BEGBAL_TXN,
   P_YR_CUR_MON_BEGBAL_USD,
   P_YR_CUR_MON_ENDBAL_TXN,
   P_YR_CUR_MON_ENDBAL_USD,
   P_YR_PMTD_TXN,
   P_YR_PMTD_USD
   FROM FDW_STAGE_DB.LOAD_BI_GL_ACCT_BAL_F_s;
   
   

-------------BI_P_MTD_UPDATE------------------------
Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI

From
FDW_SEM_DB.OASEM_BI_P_MTD_UPDATE_SGI b1

Set 
P_MTD_ACT_NET_ACTIVITY_TXN = b1.P_MTD_ACT_NET_ACTIVITY_TXN,
P_MTD_ACT_NET_ACTIVITY_USD = b1.P_MTD_ACT_NET_ACTIVITY_USD,
P_YTD_ACT_NET_ACTIVITY_TXN = b1.P_YTD_ACT_NET_ACTIVITY_TXN,
P_YTD_ACT_NET_ACTIVITY_USD = b1.P_YTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F_SGI.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F_SGI.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_YR_MTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI

From
FDW_SEM_DB.OASEM_BI_P_YR_MTD_UPDATE_SGI b1

Set 
P_YR_MTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
P_YR_MTD_ACT_NET_ACTIVITY_USD = b1.P_YR_MTD_ACT_NET_ACTIVITY_USD,
P_YR_QTD_ACT_NET_ACTIVITY_TXN = b1.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
P_YR_QTD_ACT_NET_ACTIVITY_USD = b1.P_YR_QTD_ACT_NET_ACTIVITY_USD,
P_YR_ACT_NET_ACTIVITY_TXN = b1.P_YR_ACT_NET_ACTIVITY_TXN,
P_YR_ACT_NET_ACTIVITY_USD = b1.P_YR_ACT_NET_ACTIVITY_USD,
P_YR_CUR_MON_BEGBAL_TXN = b1.P_YR_CUR_MON_BEGBAL_TXN,
P_YR_CUR_MON_BEGBAL_USD = b1.P_YR_CUR_MON_BEGBAL_USD,
P_YR_CUR_MON_ENDBAL_TXN = b1.P_YR_CUR_MON_ENDBAL_TXN,
P_YR_CUR_MON_ENDBAL_USD = b1.P_YR_CUR_MON_ENDBAL_USD,
P_YR_PMTD_TXN = b1.P_YR_PMTD_TXN,
P_YR_PMTD_USD = b1.P_YR_PMTD_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F_SGI.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F_SGI.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.PERIOD_KEY = b1.PERIOD_KEY;

-------------BI_P_QTD_UPDATE------------------------

Update FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_SGI

From
FDW_SEM_DB.OASEM_BI_P_QTD_UPDATE_SGI b1

Set 
P_QTD_ACT_NET_ACTIVITY_TXN = b1.P_QTD_ACT_NET_ACTIVITY_TXN,
P_QTD_ACT_NET_ACTIVITY_USD = b1.P_QTD_ACT_NET_ACTIVITY_USD
     
Where
OASEM_BI_GL_ACCT_BAL_F_SGI.CODE_COMBINATION_ID = b1.CODE_COMBINATION_ID
AND OASEM_BI_GL_ACCT_BAL_F_SGI.CURRENCY_KEY = b1.CURRENCY_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.GL_BUDGET_KEY = b1.GL_BUDGET_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.SET_OF_BOOKS_KEY = b1.SET_OF_BOOKS_KEY
AND OASEM_BI_GL_ACCT_BAL_F_SGI.PERIOD_KEY = b1.PERIOD_KEY;
);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_GL_ACCT_BAL_F_V   (PARAM_PERIOD_KEY VARCHAR(50)) AS(

DELETE FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_V WHERE (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) ;


INSERT INTO FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F_V 
(
OSET_OF_BOOKS_KEY,
OPERIOD_KEY,
OFCS_ACCOUNT_NUM,
OBUSINESS_ENTITY_KEY,
OACCOUNT__KEY,
ODEPARTMENT_KEY,
OPRODUCT_SEASON_EPISODE_KEY,
OMEDIUM_KEY,
ODETAIL_KEY,
OTERRITORY_KEY,
OINTERCOMPANY_KEY,
OUSER_DEFINED_KEY,
OVENDOR_KEY,
OFUTURE_KEY,
OGL_ACCOUNT_KEY,
OGL_BUDGET_KEY,
OTEMPLATE_KEY,
OCODE_COMBINATION_ID,
OCURRENCY_KEY,
OCONV_VENDOR_KEY,

 OACTUAL_BEGIN_BALANCE_TXN ,
 OACTUAL_BEGIN_BALANCE_USD ,
 OACTUAL_ENDING_BALANCE_TXN ,
 OACTUAL_ENDING_BALANCE_USD ,
 OBUDGET_BEGIN_BALANCE_TXN ,
 OBUDGET_BEGIN_BALANCE_USD,
 OBUDGET_ENDING_BALANCE_TXN,
 OBUDGET_ENDING_BALANCE_USD ,

OPROJECT_TO_DATE_CR_TXN,
OPROJECT_TO_DATE_CR_USD,
OPROJECT_TO_DATE_DR_TXN,
OPROJECT_TO_DATE_DR_USD,
OPROJ_BAL_ACTUAL_TXN,
OPROJ_BAL_ACTUAL_USD,
OPROJ_BAL_BUDGET_TXN,
OPROJ_BAL_BUDGET_USD,
OPTD_ACTUAL_BEGIN_BAL_CR_TXN,
OPTD_ACTUAL_BEGIN_BAL_CR_USD,
OPTD_ACTUAL_BEGIN_BAL_DR_TXN,
OPTD_ACTUAL_BEGIN_BAL_DR_USD,
OPTD_ACTUAL_CREDITS_TXN,
OPTD_ACTUAL_CREDITS_USD,
OPTD_ACTUAL_DEBITS_TXN,
OPTD_ACTUAL_DEBITS_USD,
OPTD_ACTUAL_NET_ACTIVITY_TXN,
OPTD_ACTUAL_NET_ACTIVITY_USD,
OPTD_BUDGET_ACTIVITY_TXN,
OPTD_BUDGET_ACTIVITY_USD,
OPTD_BUDGET_BEGIN_BAL_CR_TXN,
OPTD_BUDGET_BEGIN_BAL_CR_USD,
OPTD_BUDGET_BEGIN_BAL_DR_TXN,
OPTD_BUDGET_BEGIN_BAL_DR_USD,
OPTD_BUDGET_CREDITS_TXN,
OPTD_BUDGET_CREDITS_USD,
OPTD_BUDGET_DEBITS_TXN,
OPTD_BUDGET_DEBITS_USD,
OPTD_BUDGET_NET_ACTIVITY_TXN,
OPTD_BUDGET_NET_ACTIVITY_USD,
OPTD_BUDGET_TXN,
OPTD_BUDGET_USD,
OPTD_VARIANCE_TXN,
OPTD_VARIANCE_USD,
OP_MTD_ACT_NET_ACTIVITY_TXN,
OP_MTD_ACT_NET_ACTIVITY_USD,
OP_QTD_ACT_NET_ACTIVITY_TXN,
OP_QTD_ACT_NET_ACTIVITY_USD,
OP_YR_ACT_NET_ACTIVITY_TXN,
OP_YR_ACT_NET_ACTIVITY_USD,
OP_YR_MTD_ACT_NET_ACTIVITY_TXN,
OP_YR_MTD_ACT_NET_ACTIVITY_USD,
OP_YR_QTD_ACT_NET_ACTIVITY_TXN,
OP_YR_QTD_ACT_NET_ACTIVITY_USD,
OP_YTD_ACT_NET_ACTIVITY_TXN,
OP_YTD_ACT_NET_ACTIVITY_USD,
OQBAL_ACTUAL_TXN,
OQBAL_ACTUAL_USD,
OQBAL_BUDGET_TXN,
OQBAL_BUDGET_USD,
OQTD_ACTUAL_CREDITS_TXN,
OQTD_ACTUAL_CREDITS_USD,
OQTD_ACTUAL_DEBITS_TXN,
OQTD_ACTUAL_DEBITS_USD,
OQTD_ACTUAL_NET_ACTIVITY_TXN,
OQTD_ACTUAL_NET_ACTIVITY_USD,
OQTD_BUDGET_CREDITS_TXN,
OQTD_BUDGET_CREDITS_USD,
OQTD_BUDGET_DEBITS_TXN,
OQTD_BUDGET_DEBITS_USD,
OQTD_BUDGET_NET_ACTIVITY_TXN,
OQTD_BUDGET_NET_ACTIVITY_USD,
OQTD_VARIANCE_TXN,
OQTD_VARIANCE_USD,
OYBAL_ACTUAL_TXN,
OYBAL_ACTUAL_USD,
OYBAL_BUDGET_TXN,
OYBAL_BUDGET_USD,
OYTD_ACTUAL_CREDITS_TXN,
OYTD_ACTUAL_CREDITS_USD,
OYTD_ACTUAL_DEBITS_TXN,
OYTD_ACTUAL_DEBITS_USD,
OYTD_ACTUAL_NET_ACTIVITY_TXN,
OYTD_ACTUAL_NET_ACTIVITY_USD,
OYTD_BUDGET_CREDITS_TXN,
OYTD_BUDGET_CREDITS_USD,
OYTD_BUDGET_DEBITS_TXN,
OYTD_BUDGET_DEBITS_USD,
OYTD_BUDGET_NET_ACTIVITY_TXN,
OYTD_BUDGET_NET_ACTIVITY_USD,
OYTD_VARIANCE_TXN,
OYTD_VARIANCE_USD,
OP_YR_CUR_MON_BEGBAL_TXN,
OP_YR_CUR_MON_BEGBAL_USD,
OP_YR_CUR_MON_ENDBAL_TXN,
OP_YR_CUR_MON_ENDBAL_USD,
OP_YR_PMTD_TXN,
OP_YR_PMTD_USD,
NSET_OF_BOOKS_KEY,
NPERIOD_KEY,
NFCS_ACCOUNT_NUM,
NBUSINESS_ENTITY_KEY,
NACCOUNT__KEY,
NDEPARTMENT_KEY,
NPRODUCT_SEASON_EPISODE_KEY,
NMEDIUM_KEY,
NDETAIL_KEY,
NTERRITORY_KEY,
NINTERCOMPANY_KEY,
NUSER_DEFINED_KEY,
NVENDOR_KEY,
NFUTURE_KEY,
NGL_ACCOUNT_KEY,
NGL_BUDGET_KEY,
NTEMPLATE_KEY,
NCODE_COMBINATION_ID,
NCURRENCY_KEY,

 NACTUAL_BEGIN_BALANCE_TXN ,
 NACTUAL_BEGIN_BALANCE_USD ,
 NACTUAL_ENDING_BALANCE_TXN ,
 NACTUAL_ENDING_BALANCE_USD ,
 NBUDGET_BEGIN_BALANCE_TXN ,
 NBUDGET_BEGIN_BALANCE_USD,
 NBUDGET_ENDING_BALANCE_TXN,
 NBUDGET_ENDING_BALANCE_USD ,

NPROJECT_TO_DATE_CR_TXN,
NPROJECT_TO_DATE_CR_USD,
NPROJECT_TO_DATE_DR_TXN,
NPROJECT_TO_DATE_DR_USD,
NPROJ_BAL_ACTUAL_TXN,
NPROJ_BAL_ACTUAL_USD,
NPROJ_BAL_BUDGET_TXN,
NPROJ_BAL_BUDGET_USD,
NPTD_ACTUAL_BEGIN_BAL_CR_TXN,
NPTD_ACTUAL_BEGIN_BAL_CR_USD,
NPTD_ACTUAL_BEGIN_BAL_DR_TXN,
NPTD_ACTUAL_BEGIN_BAL_DR_USD,
NPTD_ACTUAL_CREDITS_TXN,
NPTD_ACTUAL_CREDITS_USD,
NPTD_ACTUAL_DEBITS_TXN,
NPTD_ACTUAL_DEBITS_USD,
NPTD_ACTUAL_NET_ACTIVITY_TXN,
NPTD_ACTUAL_NET_ACTIVITY_USD,
NPTD_BUDGET_ACTIVITY_TXN,
NPTD_BUDGET_ACTIVITY_USD,
NPTD_BUDGET_BEGIN_BAL_CR_TXN,
NPTD_BUDGET_BEGIN_BAL_CR_USD,
NPTD_BUDGET_BEGIN_BAL_DR_TXN,
NPTD_BUDGET_BEGIN_BAL_DR_USD,
NPTD_BUDGET_CREDITS_TXN,
NPTD_BUDGET_CREDITS_USD,
NPTD_BUDGET_DEBITS_TXN,
NPTD_BUDGET_DEBITS_USD,
NPTD_BUDGET_NET_ACTIVITY_TXN,
NPTD_BUDGET_NET_ACTIVITY_USD,
NPTD_BUDGET_TXN,
NPTD_BUDGET_USD,
NPTD_VARIANCE_TXN,
NPTD_VARIANCE_USD,
NP_MTD_ACT_NET_ACTIVITY_TXN,
NP_MTD_ACT_NET_ACTIVITY_USD,
NP_QTD_ACT_NET_ACTIVITY_TXN,
NP_QTD_ACT_NET_ACTIVITY_USD,
NP_YR_ACT_NET_ACTIVITY_TXN,
NP_YR_ACT_NET_ACTIVITY_USD,
NP_YR_MTD_ACT_NET_ACTIVITY_TXN,
NP_YR_MTD_ACT_NET_ACTIVITY_USD,
NP_YR_QTD_ACT_NET_ACTIVITY_TXN,
NP_YR_QTD_ACT_NET_ACTIVITY_USD,
NP_YTD_ACT_NET_ACTIVITY_TXN,
NP_YTD_ACT_NET_ACTIVITY_USD,
NQBAL_ACTUAL_TXN,
NQBAL_ACTUAL_USD,
NQBAL_BUDGET_TXN,
NQBAL_BUDGET_USD,
NQTD_ACTUAL_CREDITS_TXN,
NQTD_ACTUAL_CREDITS_USD,
NQTD_ACTUAL_DEBITS_TXN,
NQTD_ACTUAL_DEBITS_USD,
NQTD_ACTUAL_NET_ACTIVITY_TXN,
NQTD_ACTUAL_NET_ACTIVITY_USD,
NQTD_BUDGET_CREDITS_TXN,
NQTD_BUDGET_CREDITS_USD,
NQTD_BUDGET_DEBITS_TXN,
NQTD_BUDGET_DEBITS_USD,
NQTD_BUDGET_NET_ACTIVITY_TXN,
NQTD_BUDGET_NET_ACTIVITY_USD,
NQTD_VARIANCE_TXN,
NQTD_VARIANCE_USD,
NYBAL_ACTUAL_TXN,
NYBAL_ACTUAL_USD,
NYBAL_BUDGET_TXN,
NYBAL_BUDGET_USD,
NYTD_ACTUAL_CREDITS_TXN,
NYTD_ACTUAL_CREDITS_USD,
NYTD_ACTUAL_DEBITS_TXN,
NYTD_ACTUAL_DEBITS_USD,
NYTD_ACTUAL_NET_ACTIVITY_TXN,
NYTD_ACTUAL_NET_ACTIVITY_USD,
NYTD_BUDGET_CREDITS_TXN,
NYTD_BUDGET_CREDITS_USD,
NYTD_BUDGET_DEBITS_TXN,
NYTD_BUDGET_DEBITS_USD,
NYTD_BUDGET_NET_ACTIVITY_TXN,
NYTD_BUDGET_NET_ACTIVITY_USD,
NYTD_VARIANCE_TXN,
NYTD_VARIANCE_USD,
NP_YR_CUR_MON_BEGBAL_TXN,
NP_YR_CUR_MON_BEGBAL_USD,
NP_YR_CUR_MON_ENDBAL_TXN,
NP_YR_CUR_MON_ENDBAL_USD,
NP_YR_PMTD_TXN,
NP_YR_PMTD_USD,
VSET_OF_BOOKS_KEY,
VPERIOD_KEY,
VFCS_ACCOUNT_NUM,
VBUSINESS_ENTITY_KEY,
VACCOUNT__KEY,
VDEPARTMENT_KEY,
VPRODUCT_SEASON_EPISODE_KEY,
VMEDIUM_KEY,
VDETAIL_KEY,
VTERRITORY_KEY,
VINTERCOMPANY_KEY,
VUSER_DEFINED_KEY,
VVENDOR_KEY,
VFUTURE_KEY,
VGL_ACCOUNT_KEY,
VGL_BUDGET_KEY,
VPROCESS_DATE,
VTEMPLATE_KEY,
VCODE_COMBINATION_ID,
VCURRENCY_KEY,

 VACTUAL_BEGIN_BALANCE_TXN ,
 VACTUAL_BEGIN_BALANCE_USD ,
 VACTUAL_ENDING_BALANCE_TXN ,
 VACTUAL_ENDING_BALANCE_USD ,
 VBUDGET_BEGIN_BALANCE_TXN ,
 VBUDGET_BEGIN_BALANCE_USD,
 VBUDGET_ENDING_BALANCE_TXN,
 VBUDGET_ENDING_BALANCE_USD ,

VPROJECT_TO_DATE_CR_TXN,
VPROJECT_TO_DATE_CR_USD,
VPROJECT_TO_DATE_DR_TXN,
VPROJECT_TO_DATE_DR_USD,
VPROJ_BAL_ACTUAL_TXN,
VPROJ_BAL_ACTUAL_USD,
VPROJ_BAL_BUDGET_TXN,
VPROJ_BAL_BUDGET_USD,
VPTD_ACTUAL_BEGIN_BAL_CR_TXN,
VPTD_ACTUAL_BEGIN_BAL_CR_USD,
VPTD_ACTUAL_BEGIN_BAL_DR_TXN,
VPTD_ACTUAL_BEGIN_BAL_DR_USD,
VPTD_ACTUAL_CREDITS_TXN,
VPTD_ACTUAL_CREDITS_USD,
VPTD_ACTUAL_DEBITS_TXN,
VPTD_ACTUAL_DEBITS_USD,
VPTD_ACTUAL_NET_ACTIVITY_TXN,
VPTD_ACTUAL_NET_ACTIVITY_USD,
VPTD_BUDGET_ACTIVITY_TXN,
VPTD_BUDGET_ACTIVITY_USD,
VPTD_BUDGET_BEGIN_BAL_CR_TXN,
VPTD_BUDGET_BEGIN_BAL_CR_USD,
VPTD_BUDGET_BEGIN_BAL_DR_TXN,
VPTD_BUDGET_BEGIN_BAL_DR_USD,
VPTD_BUDGET_CREDITS_TXN,
VPTD_BUDGET_CREDITS_USD,
VPTD_BUDGET_DEBITS_TXN,
VPTD_BUDGET_DEBITS_USD,
VPTD_BUDGET_NET_ACTIVITY_TXN,
VPTD_BUDGET_NET_ACTIVITY_USD,
VPTD_BUDGET_TXN,
VPTD_BUDGET_USD,
VPTD_VARIANCE_TXN,
VPTD_VARIANCE_USD,
VP_MTD_ACT_NET_ACTIVITY_TXN,
VP_MTD_ACT_NET_ACTIVITY_USD,
VP_QTD_ACT_NET_ACTIVITY_TXN,
VP_QTD_ACT_NET_ACTIVITY_USD,
VP_YR_ACT_NET_ACTIVITY_TXN,
VP_YR_ACT_NET_ACTIVITY_USD,
VP_YR_MTD_ACT_NET_ACTIVITY_TXN,
VP_YR_MTD_ACT_NET_ACTIVITY_USD,
VP_YR_QTD_ACT_NET_ACTIVITY_TXN,
VP_YR_QTD_ACT_NET_ACTIVITY_USD,
VP_YTD_ACT_NET_ACTIVITY_TXN,
VP_YTD_ACT_NET_ACTIVITY_USD,
VQBAL_ACTUAL_TXN,
VQBAL_ACTUAL_USD,
VQBAL_BUDGET_TXN,
VQBAL_BUDGET_USD,
VQTD_ACTUAL_CREDITS_TXN,
VQTD_ACTUAL_CREDITS_USD,
VQTD_ACTUAL_DEBITS_TXN,
VQTD_ACTUAL_DEBITS_USD,
VQTD_ACTUAL_NET_ACTIVITY_TXN,
VQTD_ACTUAL_NET_ACTIVITY_USD,
VQTD_BUDGET_CREDITS_TXN,
VQTD_BUDGET_CREDITS_USD,
VQTD_BUDGET_DEBITS_TXN,
VQTD_BUDGET_DEBITS_USD,
VQTD_BUDGET_NET_ACTIVITY_TXN,
VQTD_BUDGET_NET_ACTIVITY_USD,
VQTD_VARIANCE_TXN,
VQTD_VARIANCE_USD,
VYBAL_ACTUAL_TXN,
VYBAL_ACTUAL_USD,
VYBAL_BUDGET_TXN,
VYBAL_BUDGET_USD,
VYTD_ACTUAL_CREDITS_TXN,
VYTD_ACTUAL_CREDITS_USD,
VYTD_ACTUAL_DEBITS_TXN,
VYTD_ACTUAL_DEBITS_USD,
VYTD_ACTUAL_NET_ACTIVITY_TXN,
VYTD_ACTUAL_NET_ACTIVITY_USD,
VYTD_BUDGET_CREDITS_TXN,
VYTD_BUDGET_CREDITS_USD,
VYTD_BUDGET_DEBITS_TXN,
VYTD_BUDGET_DEBITS_USD,
VYTD_BUDGET_NET_ACTIVITY_TXN,
VYTD_BUDGET_NET_ACTIVITY_USD,
VYTD_VARIANCE_TXN,
VYTD_VARIANCE_USD,
VP_YR_CUR_MON_BEGBAL_TXN,
VP_YR_CUR_MON_BEGBAL_USD,
VP_YR_CUR_MON_ENDBAL_TXN,
VP_YR_CUR_MON_ENDBAL_USD,
VP_YR_PMTD_TXN,
VP_YR_PMTD_USD
)

SELECT 

OASEM_BI_GL_ACCT_BAL_F_O.SET_OF_BOOKS_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.PERIOD_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.FCS_ACCOUNT_NUM,
OASEM_BI_GL_ACCT_BAL_F_O.BUSINESS_ENTITY_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.ACCOUNT__KEY,
OASEM_BI_GL_ACCT_BAL_F_O.DEPARTMENT_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.PRODUCT_SEASON_EPISODE_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.MEDIUM_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.DETAIL_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.TERRITORY_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.INTERCOMPANY_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.USER_DEFINED_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.VENDOR_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.FUTURE_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.GL_ACCOUNT_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.GL_BUDGET_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.TEMPLATE_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.CODE_COMBINATION_ID,
OASEM_BI_GL_ACCT_BAL_F_O.CURRENCY_KEY,
OASEM_BI_GL_ACCT_BAL_F_O.CONV_VENDOR_KEY,

 OASEM_BI_GL_ACCT_BAL_F_O.ACTUAL_BEGIN_BALANCE_TXN ,
 OASEM_BI_GL_ACCT_BAL_F_O.ACTUAL_BEGIN_BALANCE_USD ,
 OASEM_BI_GL_ACCT_BAL_F_O.ACTUAL_ENDING_BALANCE_TXN ,
 OASEM_BI_GL_ACCT_BAL_F_O.ACTUAL_ENDING_BALANCE_USD ,
 OASEM_BI_GL_ACCT_BAL_F_O.BUDGET_BEGIN_BALANCE_TXN ,
 OASEM_BI_GL_ACCT_BAL_F_O.BUDGET_BEGIN_BALANCE_USD,
 OASEM_BI_GL_ACCT_BAL_F_O.BUDGET_ENDING_BALANCE_TXN,
 OASEM_BI_GL_ACCT_BAL_F_O.BUDGET_ENDING_BALANCE_USD ,

OASEM_BI_GL_ACCT_BAL_F_O.PROJECT_TO_DATE_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PROJECT_TO_DATE_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PROJECT_TO_DATE_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PROJECT_TO_DATE_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PROJ_BAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PROJ_BAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PROJ_BAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PROJ_BAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_ACTUAL_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_BEGIN_BAL_CR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_BEGIN_BAL_CR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_BEGIN_BAL_DR_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_BEGIN_BAL_DR_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_CREDITS_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_DEBITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_DEBITS_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_VARIANCE_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.PTD_VARIANCE_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_MTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_MTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_QTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_YR_QTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.P_YTD_ACT_NET_ACTIVITY_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.P_YTD_ACT_NET_ACTIVITY_USD,
OASEM_BI_GL_ACCT_BAL_F_O.QBAL_ACTUAL_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.QBAL_ACTUAL_USD,
OASEM_BI_GL_ACCT_BAL_F_O.QBAL_BUDGET_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.QBAL_BUDGET_USD,
OASEM_BI_GL_ACCT_BAL_F_O.QTD_ACTUAL_CREDITS_TXN,
OASEM_BI_GL_ACCT_BAL_F_O.QTD_ACTUAL_CREDITS_USD,
OASEM
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_LIB_CODE_GRPS AS (

MERGE INTO FDW_TABLES_DB.OASEM_BI_LIB_CODE_GRPS
USING
(SELECT 
TRIM(RPT_GROUPING_CURRENTLIBRARY_01) AS RPT_GROUPING_CURRENTLIBRARY_01,
TRIM(CURRENT_LIB_CODE) AS CURRENT_LIB_CODE,
TRIM(CURRENT_LIB_CODE_DESC) AS CURRENT_LIB_CODE_DESC,
SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID
FROM FDW_STAGE_DB.LOAD_BI_LIB_CODE_GRPS_s)  AS LOAD_BI_LIB_CODE_GRPS_s
ON ( FDW_TABLES_DB.OASEM_BI_LIB_CODE_GRPS.CURRENT_LIB_CODE=LOAD_BI_LIB_CODE_GRPS_s.CURRENT_LIB_CODE
AND FDW_TABLES_DB.OASEM_BI_LIB_CODE_GRPS.SET_OF_BOOKS_ID=LOAD_BI_LIB_CODE_GRPS_s.SET_OF_BOOKS_ID)

WHEN MATCHED THEN UPDATE
SET 
RPT_GROUPING_CURRENTLIBRARY_01=LOAD_BI_LIB_CODE_GRPS_s.RPT_GROUPING_CURRENTLIBRARY_01,
CURRENT_LIB_CODE_DESC=LOAD_BI_LIB_CODE_GRPS_s.CURRENT_LIB_CODE_DESC

WHEN NOT MATCHED THEN INSERT
(
RPT_GROUPING_CURRENTLIBRARY_01,
      CURRENT_LIB_CODE, 
      CURRENT_LIB_CODE_DESC,
      SET_OF_BOOKS_ID


) VALUES
(
LOAD_BI_LIB_CODE_GRPS_s.RPT_GROUPING_CURRENTLIBRARY_01,
LOAD_BI_LIB_CODE_GRPS_s.CURRENT_LIB_CODE, 
LOAD_BI_LIB_CODE_GRPS_s.CURRENT_LIB_CODE_DESC,
LOAD_BI_LIB_CODE_GRPS_s.SET_OF_BOOKS_ID
);
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_SECURITY_TABLE1 AS (
DELETE FROM FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE1
WHERE  SET_OF_BOOKS_ID NOT IN ( '1002') ;

--INSERT AR VALUES
INSERT INTO FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE1

SELECT UNIQUE 
B.SET_OF_BOOKS_ID,
B.SHORT_NAME, 
H.APPLICATION_NAME, 
UPPER(I.ROLE_USER),  
UPPER(I.DESCRIPTION), 
G.RESPONSIBILITY_NAME,
B.FLEX_VALUE_SET_NAME,
A.FLEX_VALUE_RULE_NAME,
A.DESCRIPTION,
B.SEGMENT_NAME,
CASE
     WHEN C.INCLUDE_EXCLUDE_INDICATOR IN ('E')
     THEN 'EXCLUDE'
     WHEN C.INCLUDE_EXCLUDE_INDICATOR IN ('I')
     THEN 'INCLUDE'
     ELSE NULL
     END,
C.FLEX_VALUE_LOW,
C.FLEX_VALUE_HIGH,
C.LAST_UPDATE_DATE,
A.ERROR_MESSAGE,
I.SECURITY_GROUP_KEY,
I.START_DATE START_DATE,
I.END_DATE END_DATE

FROM 
FDW_TABLES_DB.OA3NF_FLX_VAL_RL_VL A

INNER JOIN (
     SELECT 
     A3.SET_OF_BOOKS_ID,
     A3.OA_PERIOD_SET_NAME AS NAME,
     A3.OA_SHORT_NAME AS SHORT_NAME,
     A2.FLEX_VALUE_SET_ID, 
     A2.FLEX_VALUE_SET_NAME,
     A1.SEGMENT_NAME 

     FROM 
     FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS A2

     INNER JOIN (
          SELECT 
          AA1.COA_SEGMENT_ID AS FLEX_VALUE_SET_ID,
          AA1.COA_SEGMENT_NAME AS SEGMENT_NAME,
          AA1.COA_STRUCTURE_ID AS ID_FLEX_NUM,
		  AA1.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID 
          FROM 
          FDW_TABLES_DB.OA3NF_COA_SEGMENT AA1

          WHERE 
          AA1.COA_STRUCTURE_ID IN(50454)
     ) A1
          ON A2.FLEX_VALUE_SET_ID = A1.FLEX_VALUE_SET_ID
		  and A2.SET_OF_BOOKS_ID =A1.SET_OF_BOOKS_ID
          
     INNER JOIN FDW_TABLES_DB.OA3NF_SET_OF_BOOKS A3
          ON A1.SET_OF_BOOKS_ID =A3.SET_OF_BOOKS_ID
			--and A1.ID_FLEX_NUM = A3.COA_STRUCTURE_ID
) B

     ON A.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID
	 AND A.SET_OF_BOOKS_ID =B.SET_OF_BOOKS_ID
     --AND B.FLEX_VALUE_SET_NAME LIKE 'DIS_STU%'

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_LN C
     ON A.FLEX_VALUE_RULE_ID = C.FLEX_VALUE_RULE_ID
     AND A.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID
     AND C.INCLUDE_EXCLUDE_INDICATOR IN ( 'I','E')
	 AND A.SET_OF_BOOKS_ID =C.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_USER D
     ON C.CREATED_BY = D.USER_ID
     AND A.SET_OF_BOOKS_ID =D.SET_OF_BOOKS_ID
	 
LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_USER E
     ON C.LAST_UPDATED_BY = E.USER_ID
     AND A.SET_OF_BOOKS_ID =E.SET_OF_BOOKS_ID
	 
LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_UG F
     ON A.FLEX_VALUE_RULE_ID  = F.FLEX_VALUE_RULE_ID
     AND A.SET_OF_BOOKS_ID =F.SET_OF_BOOKS_ID
	 
LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL G
     ON F.APPLICATION_ID = G.APPLICATION_ID
     AND F.RESPONSIBILITY_ID = G.RESPONSIBILITY_ID
     AND G.LANGUAGE_ = 'US'
	 AND A.SET_OF_BOOKS_ID =G.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_APPL_TL H
     ON F.APPLICATION_ID = H.APPLICATION_ID
     AND H.APPLICATION_ID = 200
     AND H.LANGUAGE_ = 'US'
	 AND A.SET_OF_BOOKS_ID =H.SET_OF_BOOKS_ID

INNER JOIN (
     SELECT UNIQUE
     I7.USER_NAME ROLE_USER, 
     I5.RESPONSIBILITY_ID, 
     I2.FUNCTION_NAME FUNCTION_NAME, 
     I3.USER_FUNCTION_NAME USER_FUNCTION_NAME, 
     I7.DESCRIPTION ,
     D1.SECURITY_GROUP_KEY SECURITY_GROUP_KEY,
	   I4.START_DATE ,
	   I4.END_DATE END_DATE

     FROM 
     FDW_TABLES_DB.OA3NF_FND_CMPD_MENU_FUNC I1

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_FORM_FUNC I2
          ON I1.FUNCTION_ID = I2.FUNCTION_ID
		  AND I1.SET_OF_BOOKS_ID =I2.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_FORM_FUNC_TL I3
          ON I2.FUNCTION_ID = I3.FUNCTION_ID
		  AND I1.SET_OF_BOOKS_ID =I3.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY I4
          ON I1.MENU_ID = I4.MENU_ID
          AND I4.APPLICATION_ID = 200
		  AND I1.SET_OF_BOOKS_ID =I4.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL I5
          ON I4.RESPONSIBILITY_ID = I5.RESPONSIBILITY_ID
		  AND I1.SET_OF_BOOKS_ID =I5.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_USR_RESP_GRPS I6
          ON I4.RESPONSIBILITY_ID = I6.RESPONSIBILITY_ID
          AND I4.APPLICATION_ID = I6.RESPONSIBILITY_APPLICATION_ID
		  AND I1.SET_OF_BOOKS_ID =I6.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_USER I7
          ON I6.USER_ID = I7.USER_ID
		  AND I1.SET_OF_BOOKS_ID =I7.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_SECURITY_GRPS D1
          ON D1.SECURITY_GROUP_ID=I6.SECURITY_GROUP_ID
		  AND I1.SET_OF_BOOKS_ID =D1.SET_OF_BOOKS_ID
     WHERE 
     I1.GRANT_FLAG ='Y'
) I
     ON F.RESPONSIBILITY_ID = I.RESPONSIBILITY_ID;

--INSERT GL VALUES
INSERT INTO FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE1
SELECT UNIQUE 
B.SET_OF_BOOKS_ID,
B.SHORT_NAME, 
H.APPLICATION_NAME, 
UPPER(I.ROLE_USER),  
UPPER(I.DESCRIPTION), 
G.RESPONSIBILITY_NAME,
B.FLEX_VALUE_SET_NAME,
A.FLEX_VALUE_RULE_NAME,
A.DESCRIPTION,
B.SEGMENT_NAME,
CASE
     WHEN C.INCLUDE_EXCLUDE_INDICATOR IN ('E')
     THEN 'EXCLUDE'
     WHEN C.INCLUDE_EXCLUDE_INDICATOR IN ('I')
     THEN 'INCLUDE'
     ELSE NULL
     END,
C.FLEX_VALUE_LOW,
C.FLEX_VALUE_HIGH,
C.LAST_UPDATE_DATE,
A.ERROR_MESSAGE,
I.SECURITY_GROUP_KEY,
I.START_DATE START_DATE,
I.END_DATE END_DATE

FROM 
FDW_TABLES_DB.OA3NF_FLX_VAL_RL_VL A

INNER JOIN (
     SELECT 
     A3.SET_OF_BOOKS_ID,
     A3.OA_PERIOD_SET_NAME AS NAME,
     A3.OA_SHORT_NAME AS SHORT_NAME,
     A2.FLEX_VALUE_SET_ID, 
     A2.FLEX_VALUE_SET_NAME,
     A1.SEGMENT_NAME 

     FROM 
     FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS A2

     INNER JOIN (
          SELECT 
          AA1.COA_SEGMENT_ID AS FLEX_VALUE_SET_ID,
          AA1.COA_SEGMENT_NAME AS SEGMENT_NAME,
          AA1.COA_STRUCTURE_ID AS ID_FLEX_NUM,
		  AA1.SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID
          FROM 
          FDW_TABLES_DB.OA3NF_COA_SEGMENT AA1

          WHERE 
          AA1.COA_STRUCTURE_ID IN(50454)
     ) A1
          ON A2.FLEX_VALUE_SET_ID = A1.FLEX_VALUE_SET_ID
          
     INNER JOIN FDW_TABLES_DB.OA3NF_SET_OF_BOOKS A3
          ON A1.SET_OF_BOOKS_ID = A3.SET_OF_BOOKS_ID
		  --A1.ID_FLEX_NUM = A3.COA_STRUCTURE_ID
) B
     ON A.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID
	 AND A.SET_OF_BOOKS_ID = B.SET_OF_BOOKS_ID
     AND B.FLEX_VALUE_SET_NAME LIKE 'DIS_STU%'

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_LN C
     ON A.FLEX_VALUE_RULE_ID = C.FLEX_VALUE_RULE_ID
     AND A.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID
     AND C.INCLUDE_EXCLUDE_INDICATOR IN ( 'I','E')
	 AND A.SET_OF_BOOKS_ID = C.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_USER D
     ON C.CREATED_BY = D.USER_ID
	 AND A.SET_OF_BOOKS_ID = D.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_USER E
     ON C.LAST_UPDATED_BY = E.USER_ID
	 AND A.SET_OF_BOOKS_ID = E.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FLX_VAL_RUL_UG F
     ON A.FLEX_VALUE_RULE_ID  = F.FLEX_VALUE_RULE_ID
	 AND A.SET_OF_BOOKS_ID = F.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL G
     ON F.APPLICATION_ID = G.APPLICATION_ID
     AND F.RESPONSIBILITY_ID = G.RESPONSIBILITY_ID
     AND G.LANGUAGE_ = 'US'
	 AND A.SET_OF_BOOKS_ID = G.SET_OF_BOOKS_ID

LEFT OUTER JOIN FDW_TABLES_DB.OA3NF_FND_APPL_TL H
     ON F.APPLICATION_ID = H.APPLICATION_ID
     AND H.APPLICATION_ID = 101
     AND H.LANGUAGE_ = 'US'
	 AND A.SET_OF_BOOKS_ID = H.SET_OF_BOOKS_ID

INNER JOIN (
     SELECT UNIQUE
     I7.USER_NAME ROLE_USER, 
     I5.RESPONSIBILITY_ID, 
     I2.FUNCTION_NAME FUNCTION_NAME, 
     I3.USER_FUNCTION_NAME USER_FUNCTION_NAME, 
     I7.DESCRIPTION ,
     D1.SECURITY_GROUP_KEY SECURITY_GROUP_KEY,
	   I4.START_DATE ,
	   I4.END_DATE END_DATE

     FROM 
     FDW_TABLES_DB.OA3NF_FND_CMPD_MENU_FUNC I1

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_FORM_FUNC I2
          ON I1.FUNCTION_ID = I2.FUNCTION_ID
		  AND I1.SET_OF_BOOKS_ID = I2.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_FORM_FUNC_TL I3
          ON I2.FUNCTION_ID = I3.FUNCTION_ID
		  AND I1.SET_OF_BOOKS_ID = I3.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY I4
          ON I1.MENU_ID = I4.MENU_ID
          AND I4.APPLICATION_ID = 101
		  AND I1.SET_OF_BOOKS_ID = I4.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_RESPNSBLTY_TL I5
          ON I4.RESPONSIBILITY_ID = I5.RESPONSIBILITY_ID
		  AND I1.SET_OF_BOOKS_ID = I5.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_USR_RESP_GRPS I6
          ON I4.RESPONSIBILITY_ID = I6.RESPONSIBILITY_ID
          AND I4.APPLICATION_ID = I6.RESPONSIBILITY_APPLICATION_ID
		  AND I1.SET_OF_BOOKS_ID = I6.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_USER I7
          ON I6.USER_ID = I7.USER_ID
		  AND I1.SET_OF_BOOKS_ID = I7.SET_OF_BOOKS_ID

     INNER JOIN FDW_TABLES_DB.OA3NF_FND_SECURITY_GRPS D1
          ON D1.SECURITY_GROUP_ID=I6.SECURITY_GROUP_ID
		  AND I1.SET_OF_BOOKS_ID = D1.SET_OF_BOOKS_ID
     WHERE 
     I1.GRANT_FLAG ='Y'
) I
     ON F.RESPONSIBILITY_ID = I.RESPONSIBILITY_ID;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_SECURITY_TABLE2 AS (
--INSERT  VALUES FROM CURRENT PRODUCTION DW2
INSERT INTO FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE2 
(ORACLE_USER_ID, 
AD_USER_ID,
LAST_UPDATE_DATE,
SET_OF_BOOKS_ID)  
SELECT	
ORACLE_USER_ID, 
AD_USER_ID, 
LAST_UPDATE_DATE,
'1002' AS SET_OF_BOOKS_ID
FROM FDM_SEM_DB.OASEM_BI_SECURITY_TABLE2 
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BI_SECURITY_TABLE3 AS (
DELETE FROM FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE3
WHERE
   OASEM_BI_SECURITY_TABLE3.SET_OF_BOOKS_ID NOT IN ( '1002')
;

--INSERT VALUES

INSERT INTO FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE3
SELECT UNIQUE
A.SET_OF_BOOKS_ID,
A.SET_OF_BOOKS_NAME,
A.APPLICATION_NAME,
B.ORACLE_USER_ID,
A.USER_NAME,
B.AD_USER_ID,
A.VALUE_SET,
C.BUSINESS_ENTITY_KEY,
A.DESCRIPTION,
A.LAST_UPDATE_DATE,
A.SECURITY_GROUP_KEY,
A.START_DATE,
A.END_DATE

FROM 
FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE1 A

INNER JOIN FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE2 B
     ON A.ORACLE_USER_ID = B.ORACLE_USER_ID

INNER JOIN FDW_CTD_SEM_DB.OASEM_BUSINESS_ENTITY_D C
     ON A.FROM_ <= C.BUSINESS_ENTITY_KEY
     AND A.TO_ >= C.BUSINESS_ENTITY_KEY
     AND C.BUSINESS_ENTITY_KEY BETWEEN '0000' AND '9999'

WHERE
A.TYPE_ IN ('INCLUDE');

--DELETE VALUES

DELETE
FROM FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE3
WHERE 
(
     SET_OF_BOOKS_ID,
     SET_OF_BOOKS_NAME,
     APPLICATION_NAME,
     ORACLE_USER_ID,
     USER_NAME,
     AD_USER_ID,
     SEGMENT_NAME,
     SEGMENT_VALUE,
     DESCRIPTION,
     SECURITY_GROUP_KEY,
     START_DATE,
     END_DATE
)
IN (
SELECT
A.SET_OF_BOOKS_ID,
A.SET_OF_BOOKS_NAME,
A.APPLICATION_NAME,
B.ORACLE_USER_ID,
A.USER_NAME,
B.AD_USER_ID,
A.VALUE_SET,
C.BUSINESS_ENTITY_KEY,
A.DESCRIPTION,
A.SECURITY_GROUP_KEY,
A.START_DATE,
A.END_DATE

FROM 
FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE1 A

INNER JOIN FDW_TABLES_DB.OASEM_BI_SECURITY_TABLE2 B
     ON A.ORACLE_USER_ID = B.ORACLE_USER_ID

INNER JOIN FDW_CTD_SEM_DB.OASEM_BUSINESS_ENTITY_D C
     ON A.FROM_ <= C.BUSINESS_ENTITY_KEY
     AND A.TO_ >= C.BUSINESS_ENTITY_KEY
     AND C.BUSINESS_ENTITY_KEY BETWEEN '0000' AND '9999'

WHERE
A.TYPE_ IN ('EXCLUDE')
);

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_BUSINESS__HIER_D (CBS_Studio INT, CBS_Distribution INT)  AS(

DELETE FROM FDW_TABLES_DB.OASEM_BUSINESS__HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_BUSINESS__HIER_D (
BUSINESS_ENTITY_KEY
,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
)
SELECT 
CHILD_VALUE as BUSINESS_ENTITY_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio AS SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_BUSINESS_ENTITY'))
UNION ALL
SELECT 
CHILD_VALUE as BUSINESS_ENTITY_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution AS SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_BUSINESS_ENTITY'));
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_DETAIL_HIER_D (CBS_Studio INT, CBS_Distribution INT) AS(

DELETE FROM FDW_TABLES_DB.OASEM_DETAIL_HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_DETAIL_HIER_D (
DETAIL_KEY,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
)
SELECT 
CHILD_VALUE as DETAIL_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio AS SET_OF_BOOKS_ID from FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_DETAIL'))
UNION ALL 
SELECT 
CHILD_VALUE as DETAIL_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution AS SET_OF_BOOKS_ID from FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_DETAIL'));
);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_N  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_N WHERE period_key = :PARAM_PERIOD_KEY  ;

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_N
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, FUTURE_KEY, INTERCOMPANY_KEY,
		MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY, USER_DEFINED_KEY,
		CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY, LEG_GLACCT, LEG_SLACCT,
		LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT, LEG_FUTURE_USERDEF,
		LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT, LEG_AP_VENDOR_NUM,
		LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID, LEG_AP_VENDOR, LEG_PRODUCT,
		LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY,
		EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC, LEGACY_CONTEXT,
		ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC
 FROM FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F where period_key = :PARAM_PERIOD_KEY and set_of_books_key = :PARAM_SET_OF_BOOKS_ID
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_O  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_O    where period_key = :PARAM_PERIOD_KEY ;


INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_O
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, 
		F.FUTURE_KEY AS VENDOR_KEY, 
		COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) AS CONV_VENDOR_KEY, 
		'00000000' As FUTURE_KEY,
		INTERCOMPANY_KEY, MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY,
		USER_DEFINED_KEY, CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY,
		LEG_GLACCT, LEG_SLACCT, LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT,
		LEG_FUTURE_USERDEF, LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT,
		LEG_AP_VENDOR_NUM, LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID,
		LEG_AP_VENDOR, LEG_PRODUCT, LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY, EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC,
		LEGACY_CONTEXT, ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC
       FROM FDM_SEM_DB.OASEM_GL_DETAIL_F F
	   LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
      ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
       where period_key = :PARAM_PERIOD_KEY and set_of_books_key = :PARAM_SET_OF_BOOKS_ID 
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UN_CTD  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN WHERE period_key = :PARAM_PERIOD_KEY  and set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, FUTURE_KEY, INTERCOMPANY_KEY,
		MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY, USER_DEFINED_KEY,
		CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY, LEG_GLACCT, LEG_SLACCT,
		LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT, LEG_FUTURE_USERDEF,
		LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT, LEG_AP_VENDOR_NUM,
		LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID, LEG_AP_VENDOR, LEG_PRODUCT,
		LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY,
		EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC, LEGACY_CONTEXT,
		ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC, LEGACY_GL_JE_LINE_KEY
		
FROM FDW_CTD_SEM_DB.OASEM_GL_DETAIL_F_HIST where period_key = :PARAM_PERIOD_KEY and set_of_books_key = :PARAM_SET_OF_BOOKS_ID
 AND BUSINESS_ENTITY_KEY  between '0000' and '5999'
 --and BATCH_SOURCE_NAME not  in ('PBK', 'FLO') 
and 
(coalesce(BASE_CREDIT_AMOUNT,0) - coalesce(BASE_DEBIT_AMOUNT,0) <> 0
OR coalesce(TRX_CREDIT_AMOUNT,0) - coalesce(TRX_DEBIT_AMOUNT,0) <> 0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UN_STU  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN WHERE period_key = :PARAM_PERIOD_KEY  and set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, FUTURE_KEY, INTERCOMPANY_KEY,
		MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY, USER_DEFINED_KEY,
		CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY, LEG_GLACCT, LEG_SLACCT,
		LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT, LEG_FUTURE_USERDEF,
		LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT, LEG_AP_VENDOR_NUM,
		LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID, LEG_AP_VENDOR, LEG_PRODUCT,
		LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY,
		EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC, LEGACY_CONTEXT,
		ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC, LEGACY_GL_JE_LINE_KEY
		
 FROM FDW_STU_SEM_DB.OASEM_GL_DETAIL_F 
where  period_key = :PARAM_PERIOD_KEY and set_of_books_key = :PARAM_SET_OF_BOOKS_ID
 AND BUSINESS_ENTITY_KEY  between '6000' and '9999'
--  AND BATCH_SOURCE_NAME not  in ('PBK', 'FLO')
and 
(BASE_CREDIT_AMOUNT - BASE_DEBIT_AMOUNT <> 0
OR TRX_CREDIT_AMOUNT - TRX_DEBIT_AMOUNT <> 0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UO_CTD  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO WHERE period_key = :PARAM_PERIOD_KEY  and set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, 
		F.FUTURE_KEY AS VENDOR_KEY, 
		COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) AS CONV_VENDOR_KEY, 
		'00000000' As FUTURE_KEY,
		INTERCOMPANY_KEY, MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY,
		USER_DEFINED_KEY, CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY,
		LEG_GLACCT, LEG_SLACCT, LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT,
		LEG_FUTURE_USERDEF, LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT,
		LEG_AP_VENDOR_NUM, LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID,
		LEG_AP_VENDOR, LEG_PRODUCT, LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY, EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC,
		LEGACY_CONTEXT, ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC
 FROM FDM_SEM_DB.OASEM_GL_DETAIL_F F
	   LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
      ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
	  where F.period_key = :PARAM_PERIOD_KEY  and F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID
 AND F.BUSINESS_ENTITY_KEY  between '0000' and '5999'
 --and BATCH_SOURCE_NAME not  in ('PBK', 'FLO') 
and 
(coalesce(BASE_CREDIT_AMOUNT,0) - coalesce(BASE_DEBIT_AMOUNT,0) <> 0
OR coalesce(TRX_CREDIT_AMOUNT,0) - coalesce(TRX_DEBIT_AMOUNT,0) <> 0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UO_STU  (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO WHERE period_key = :PARAM_PERIOD_KEY  and set_of_books_key = :PARAM_SET_OF_BOOKS_ID;

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO
SELECT	GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
		coalesce(BASE_CREDIT_AMOUNT,0) AS BASE_CREDIT_AMOUNT, 
		coalesce(BASE_DEBIT_AMOUNT,0) AS  BASE_DEBIT_AMOUNT,
		BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
		BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
		GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
		LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
		SOURCE_SYSTEM_ID, 
		coalesce(TRX_CREDIT_AMOUNT,0) AS  TRX_CREDIT_AMOUNT, 
		TRX_CURRENCY_KEY ,
		coalesce(TRX_DEBIT_AMOUNT ,0) AS TRX_DEBIT_AMOUNT,
		coalesce(BASE_BALANCE ,0) AS  BASE_BALANCE, 
		coalesce(TRX_BALANCE,0) AS  TRX_BALANCE, 
		ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
		DEPARTMENT_KEY, DETAIL_KEY, 
		F.FUTURE_KEY AS VENDOR_KEY, 
		--COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,'NA') AS CONV_VENDOR_KEY,
		COALESCE(LOAD_VENDOR_MAP.NEW_VENDOR_NBR,F.FUTURE_KEY) AS CONV_VENDOR_KEY, 
		'00000000' As FUTURE_KEY,
		INTERCOMPANY_KEY, MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY,
		USER_DEFINED_KEY, CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY,
		LEG_GLACCT, LEG_SLACCT, LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT,
		LEG_FUTURE_USERDEF, LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT,
		LEG_AP_VENDOR_NUM, LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID,
		LEG_AP_VENDOR, LEG_PRODUCT, LEG_VENDOR, POSTED_BY, 
		coalesce(CURRENCY_CONVERSION_RATE,0) AS  CURRENCY_CONVERSION_RATE ,
		LAST_UPDATED_BY, EFFECTIVE_DATE, OA_CREATED_BY, JE_HEADER_DESC,
		LEGACY_CONTEXT, ACCRUAL_REV_FLAG, PS_LINE_REFERENCE, PS_LINE_DESC
   FROM FDM_SEM_DB.OASEM_GL_DETAIL_F F  
	   LEFT JOIN fdw_stage_DB.LOAD_VENDOR_MAP  LOAD_VENDOR_MAP
      ON(F.FUTURE_KEY=LOAD_VENDOR_MAP.OLD_VENDOR_NBR)
	  where F.period_key = :PARAM_PERIOD_KEY  and F.set_of_books_key = :PARAM_SET_OF_BOOKS_ID
 AND BUSINESS_ENTITY_KEY  between '6000' and '9999'
 --AND BATCH_SOURCE_NAME not  in ('PBK', 'FLO')
and 
(coalesce(BASE_CREDIT_AMOUNT,0) - coalesce(BASE_DEBIT_AMOUNT,0) <> 0
OR coalesce(TRX_CREDIT_AMOUNT,0) - coalesce(TRX_DEBIT_AMOUNT,0) <> 0)
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UV_CTD   (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UV 	WHERE 
(OBUSINESS_ENTITY_KEY  between '0000' and '5999' or NSET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  )
AND (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) ;
	

INSERT FDW_TABLES_DB.OASEM_GL_DETAIL_F_UV 
SELECT N.GL_JE_LINE_KEY, N.ACCOUNT_TYPE_KEY, N.AP_INVOICE_NUM, N.AP_VENDOR_NAME,
		N.BASE_CREDIT_AMOUNT, N.BASE_DEBIT_AMOUNT, N.BATCH_ACTUAL_FLAG,
		N.BATCH_CATEGORY_NAME, N.BATCH_NAME, N.BATCH_SOURCE_NAME, N.GL_BATCH_CATEGORY_KEY,
		N.GL_DTL_CREATE_BY_KEY, N.GL_POSTED_DATE_KEY, N.HEADER_NAME, N.JE_LINE_DESCRIPTION,
		N.JE_LINE_NUMBER, N.LAST_UPDATE_DATE, N.PERIOD_KEY, N.POSTED_DATE,
		N.POSTING_STATUS, N.SET_OF_BOOKS_KEY, N.SOURCE_SYSTEM_ID, N.TRX_CREDIT_AMOUNT,
		N.TRX_CURRENCY_KEY, N.TRX_DEBIT_AMOUNT, N.BASE_BALANCE, N.TRX_BALANCE,
		N.ACCOUNT__KEY, N.BUSINESS_ENTITY_KEY, N.DEPARTMENT_KEY, N.DETAIL_KEY,
		N.VENDOR_KEY, N.FUTURE_KEY, N.INTERCOMPANY_KEY, N.MEDIUM_KEY, N.PRODUCT_SEASON_EPISODE_KEY,
		N.TERRITORY_KEY, N.USER_DEFINED_KEY, N.CHART_OF_ACCOUNT_KEY, N.TEMPLATE_KEY,
		N.LEG_ENTITY, N.LEG_GLACCT, N.LEG_SLACCT, N.LEG_DEPT, N.LEG_LOCATION,
		N.LEG_MEDIUM, N.LEG_PROJECT, N.LEG_FUTURE_USERDEF, N.LEG_INTERCO,
		N.LEG_COMPANY, N.LEG_CHECKNUM, N.LEG_CHECKDT, N.LEG_AP_VENDOR_NUM,
		N.LEG_INVOICE, N.LEG_CHARGE_DT, N.LEG_JOURNAL_ID, N.LEG_AP_VENDOR,
		N.LEG_PRODUCT, N.LEG_VENDOR, N.POSTED_BY, N.CURRENCY_CONVERSION_RATE,
		N.LAST_UPDATED_BY, N.EFFECTIVE_DATE, N.OA_CREATED_BY, N.JE_HEADER_DESC,
		N.LEGACY_CONTEXT, N.ACCRUAL_REV_FLAG, N.PS_LINE_REFERENCE, N.PS_LINE_DESC,
		
    	O.GL_JE_LINE_KEY, O.ACCOUNT_TYPE_KEY, O.AP_INVOICE_NUM, O.AP_VENDOR_NAME,
		O.BASE_CREDIT_AMOUNT, O.BASE_DEBIT_AMOUNT, O.BATCH_ACTUAL_FLAG,
		O.BATCH_CATEGORY_NAME, O.BATCH_NAME, O.BATCH_SOURCE_NAME, O.GL_BATCH_CATEGORY_KEY,
		O.GL_DTL_CREATE_BY_KEY, O.GL_POSTED_DATE_KEY, O.HEADER_NAME, O.JE_LINE_DESCRIPTION,
		O.JE_LINE_NUMBER, O.LAST_UPDATE_DATE, O.PERIOD_KEY, O.POSTED_DATE,
		O.POSTING_STATUS, O.SET_OF_BOOKS_KEY, O.SOURCE_SYSTEM_ID, O.TRX_CREDIT_AMOUNT,
		O.TRX_CURRENCY_KEY, O.TRX_DEBIT_AMOUNT, O.BASE_BALANCE, O.TRX_BALANCE,
		O.ACCOUNT__KEY, O.BUSINESS_ENTITY_KEY, O.DEPARTMENT_KEY, O.DETAIL_KEY,
		O.VENDOR_KEY, O.CONV_VENDOR_KEY, O.FUTURE_KEY, O.INTERCOMPANY_KEY,
		O.MEDIUM_KEY, O.PRODUCT_SEASON_EPISODE_KEY, O.TERRITORY_KEY, O.USER_DEFINED_KEY,
		O.CHART_OF_ACCOUNT_KEY, O.TEMPLATE_KEY, O.LEG_ENTITY, O.LEG_GLACCT,
		O.LEG_SLACCT, O.LEG_DEPT, O.LEG_LOCATION, O.LEG_MEDIUM, O.LEG_PROJECT,
		O.LEG_FUTURE_USERDEF, O.LEG_INTERCO, O.LEG_COMPANY, O.LEG_CHECKNUM,
		O.LEG_CHECKDT, O.LEG_AP_VENDOR_NUM, O.LEG_INVOICE, O.LEG_CHARGE_DT,
		O.LEG_JOURNAL_ID, O.LEG_AP_VENDOR, O.LEG_PRODUCT, O.LEG_VENDOR, O.POSTED_BY,
		O.CURRENCY_CONVERSION_RATE, O.LAST_UPDATED_BY, O.EFFECTIVE_DATE,
		O.OA_CREATED_BY, O.JE_HEADER_DESC, O.LEGACY_CONTEXT, O.ACCRUAL_REV_FLAG,
		O.PS_LINE_REFERENCE, O.PS_LINE_DESC, 
		
		(	CASE	WHEN	coalesce(N.GL_JE_LINE_KEY,0)	<>	coalesce(O.GL_JE_LINE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VGL_JE_LINE_KEY, 
		(	CASE	WHEN	coalesce(N.ACCOUNT_TYPE_KEY,0)	<>	coalesce(O.ACCOUNT_TYPE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As  VACCOUNT_TYPE_KEY,
		(	CASE	WHEN	coalesce(N.AP_INVOICE_NUM,0)	<>	coalesce(O.AP_INVOICE_NUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VAP_INVOICE_NUM, 
		(	CASE	WHEN	coalesce(N.AP_VENDOR_NAME,0)	<>	coalesce(O.AP_VENDOR_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VAP_VENDOR_NAME, 
		( coalesce(N.BASE_CREDIT_AMOUNT,0) - coalesce(O.BASE_CREDIT_AMOUNT ,0) ) AS VBASE_CREDIT_AMOUNT,
		( coalesce(N.BASE_DEBIT_AMOUNT,0) - coalesce(O.BASE_DEBIT_AMOUNT,0) ) AS VBASE_DEBIT_AMOUNT,
		(	CASE	WHEN	coalesce(N.BATCH_ACTUAL_FLAG,0)	<>	coalesce(O.BATCH_ACTUAL_FLAG,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_ACTUAL_FLAG,
		(	CASE	WHEN	coalesce(N.BATCH_CATEGORY_NAME,0)	<>	coalesce(O.BATCH_CATEGORY_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_CATEGORY_NAME,
		(	CASE	WHEN	coalesce(N.BATCH_NAME,0)	<>	coalesce(O.BATCH_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_NAME,
		(	CASE	WHEN	coalesce(N.BATCH_SOURCE_NAME,0)	<>	coalesce(O.BATCH_SOURCE_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_SOURCE_NAME,
		(	CASE	WHEN	coalesce(N.GL_BATCH_CATEGORY_KEY,0)	<>	coalesce(O.GL_BATCH_CATEGORY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_BATCH_CATEGORY_KEY, 
		--(	CASE	WHEN	coalesce(N.GL_DTL_CREATE_BY_KEY,0)	<>	coalesce(O.GL_DTL_CREATE_BY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_DTL_CREATE_BY_KEY,
		( coalesce(N.GL_DTL_CREATE_BY_KEY,0) - coalesce(O.GL_DTL_CREATE_BY_KEY,0) ) AS  VGL_DTL_CREATE_BY_KEY, 
		(case when  N.GL_POSTED_DATE_KEY =  O.GL_POSTED_DATE_KEY then 'TRUE' ELSE 'FALSE' end)   AS  VGL_POSTED_DATE_KEY,
		--(	CASE	WHEN	coalesce(N.GL_POSTED_DATE_KEY,0)	<>	coalesce(O.GL_POSTED_DATE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_POSTED_DATE_KEY,
		(	CASE	WHEN	coalesce(N.HEADER_NAME,0)	<>	coalesce(O.HEADER_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VHEADER_NAME, 
		(	CASE	WHEN	coalesce(N.JE_LINE_DESCRIPTION,0)	<>	coalesce(O.JE_LINE_DESCRIPTION,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_LINE_DESCRIPTION, 
		(	coalesce(N.JE_LINE_NUMBER,0)	-	coalesce(O.JE_LINE_NUMBER,0)		) As 		VJE_LINE_NUMBER,
		(case when  N.LAST_UPDATE_DATE =  O.LAST_UPDATE_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VLAST_UPDATE_DATE,
		(	CASE	WHEN	coalesce(N.PERIOD_KEY,0)	<>	coalesce(O.PERIOD_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPERIOD_KEY, 
		--(coalesce( trunc(N.POSTED_DATE) - trunc(O.POSTED_DATE) , 0)) AS  VPOSTED_DATE,
		(case when  N.POSTED_DATE =  O.POSTED_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VPOSTED_DATE,
		
		(	CASE	WHEN	coalesce(N.POSTING_STATUS,0)	<>	coalesce(O.POSTING_STATUS,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPOSTING_STATUS, 
		( coalesce(N.SET_OF_BOOKS_KEY,0) - coalesce(O.SET_OF_BOOKS_KEY,0) ) AS VSET_OF_BOOKS_KEY,
		(	CASE	WHEN	coalesce(N.SOURCE_SYSTEM_ID,0)	<>	coalesce(O.SOURCE_SYSTEM_ID,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VSOURCE_SYSTEM_ID, 
		( coalesce(N.TRX_CREDIT_AMOUNT,0) - coalesce(O.TRX_CREDIT_AMOUNT,0) ) AS VTRX_CREDIT_AMOUNT,
		(	CASE	WHEN	coalesce(N.TRX_CURRENCY_KEY,0)	<>	coalesce(O.TRX_CURRENCY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTRX_CURRENCY_KEY, 
		( coalesce(N.TRX_DEBIT_AMOUNT,0) - coalesce(O.TRX_DEBIT_AMOUNT,0) ) AS VTRX_DEBIT_AMOUNT,
		( coalesce(N.BASE_BALANCE,0) - coalesce(O.BASE_BALANCE,0) ) AS VBASE_BALANCE, 
		( coalesce(N.TRX_BALANCE,0) - coalesce(O.TRX_BALANCE,0) ) AS VTRX_BALANCE, 
		(	CASE	WHEN	coalesce(N.ACCOUNT__KEY,0)	<>	coalesce(O.ACCOUNT__KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCOUNT__KEY, 
		(	CASE	WHEN	coalesce(N.BUSINESS_ENTITY_KEY,0)	<>	coalesce(O.BUSINESS_ENTITY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBUSINESS_ENTITY_KEY,
		(	CASE	WHEN	coalesce(N.DEPARTMENT_KEY,0)	<>	coalesce(O.DEPARTMENT_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDEPARTMENT_KEY, 
		(	CASE	WHEN	coalesce(N.DETAIL_KEY,0)	<>	coalesce(O.DETAIL_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDETAIL_KEY, 
		(	CASE	WHEN	coalesce(N.VENDOR_KEY,0)	<>	coalesce(O.CONV_VENDOR_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VVENDOR_KEY, 
		(	CASE	WHEN	coalesce(N.FUTURE_KEY,0)	<>	coalesce(O.FUTURE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VFUTURE_KEY, 
		(	CASE	WHEN	coalesce(N.INTERCOMPANY_KEY,0)	<>	coalesce(O.INTERCOMPANY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VINTERCOMPANY_KEY,
		(	CASE	WHEN	coalesce(N.MEDIUM_KEY,0)	<>	coalesce(O.MEDIUM_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VMEDIUM_KEY, 
		(	CASE	WHEN	coalesce(N.PRODUCT_SEASON_EPISODE_KEY,0)	<>	coalesce(O.PRODUCT_SEASON_EPISODE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPRODUCT_SEASON_EPISODE_KEY, 
		(	CASE	WHEN	coalesce(N.TERRITORY_KEY,0)	<>	coalesce(O.TERRITORY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTERRITORY_KEY, 
		(	CASE	WHEN	coalesce(N.USER_DEFINED_KEY,0)	<>	coalesce(O.USER_DEFINED_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VUSER_DEFINED_KEY,
		(	coalesce(N.CHART_OF_ACCOUNT_KEY,0) - coalesce(O.CHART_OF_ACCOUNT_KEY,0)	) As VCHART_OF_ACCOUNT_KEY, 
		(	coalesce(N.TEMPLATE_KEY,0) - coalesce(O.TEMPLATE_KEY,0)	) As VTEMPLATE_KEY, 
		(	CASE	WHEN	coalesce(N.LEG_ENTITY,0)	<>	coalesce(O.LEG_ENTITY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_ENTITY, 
		(	CASE	WHEN	coalesce(N.LEG_GLACCT,0)	<>	coalesce(O.LEG_GLACCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_GLACCT,
		(	CASE	WHEN	coalesce(N.LEG_SLACCT,0)	<>	coalesce(O.LEG_SLACCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_SLACCT, 
		(	CASE	WHEN	coalesce(N.LEG_DEPT,0)	<>	coalesce(O.LEG_DEPT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_DEPT, 
		(	CASE	WHEN	coalesce(N.LEG_LOCATION,0)	<>	coalesce(O.LEG_LOCATION,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_LOCATION, 
		(	CASE	WHEN	coalesce(N.LEG_MEDIUM,0)	<>	coalesce(O.LEG_MEDIUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_MEDIUM, 
		(	CASE	WHEN	coalesce(N.LEG_PROJECT,0)	<>	coalesce(O.LEG_PROJECT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PROJECT,
		(	CASE	WHEN	coalesce(N.LEG_FUTURE_USERDEF,0)	<>	coalesce(O.LEG_FUTURE_USERDEF,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_FUTURE_USERDEF, 
		(	CASE	WHEN	coalesce(N.LEG_INTERCO,0)	<>	coalesce(O.LEG_INTERCO,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INTERCO, 
		(	CASE	WHEN	coalesce(N.LEG_COMPANY,0)	<>	coalesce(O.LEG_COMPANY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_COMPANY,
		(	CASE	WHEN	coalesce(N.LEG_CHECKNUM,0)	<>	coalesce(O.LEG_CHECKNUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKNUM,
		(	CASE	WHEN	coalesce(N.LEG_CHECKDT,0)	<>	coalesce(O.LEG_CHECKDT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKDT, -- 
		(	CASE	WHEN	coalesce(N.LEG_AP_VENDOR_NUM,0)	<>	coalesce(O.LEG_AP_VENDOR_NUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR_NUM, 
		(	CASE	WHEN	coalesce(N.LEG_INVOICE,0)	<>	coalesce(O.LEG_INVOICE,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INVOICE, 
		(	CASE	WHEN	coalesce(N.LEG_CHARGE_DT,0)	<>	coalesce(O.LEG_CHARGE_DT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHARGE_DT,
		(	CASE	WHEN	coalesce(N.LEG_JOURNAL_ID,0)	<>	coalesce(O.LEG_JOURNAL_ID,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_JOURNAL_ID, 
		(	CASE	WHEN	coalesce(N.LEG_AP_VENDOR,0)	<>	coalesce(O.LEG_AP_VENDOR,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR, 
		(	CASE	WHEN	coalesce(N.LEG_PRODUCT,0)	<>	coalesce(O.LEG_PRODUCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PRODUCT, 
		(	CASE	WHEN	coalesce(N.LEG_VENDOR,0)	<>	coalesce(O.LEG_VENDOR,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_VENDOR, 
		(	coalesce(N.POSTED_BY,0)	-	coalesce(O.POSTED_BY,0)	) As  VPOSTED_BY,
		(	coalesce(N.CURRENCY_CONVERSION_RATE,0)	-	coalesce(O.CURRENCY_CONVERSION_RATE,0)	) As VCURRENCY_CONVERSION_RATE, 
		(	coalesce(N.LAST_UPDATED_BY,0)	-	coalesce(O.LAST_UPDATED_BY,0)	) As VLAST_UPDATED_BY, 
		--(	trunc(N.EFFECTIVE_DATE)	-	trunc(O.EFFECTIVE_DATE)	) As VEFFECTIVE_DATE,
		(case when  N.EFFECTIVE_DATE =  O.EFFECTIVE_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VEFFECTIVE_DATE,
		(	coalesce(N.OA_CREATED_BY,0)	-	coalesce(O.OA_CREATED_BY,0)	) As VOA_CREATED_BY, 
		(	CASE	WHEN	coalesce(N.JE_HEADER_DESC,0)	<>	coalesce(O.JE_HEADER_DESC,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_HEADER_DESC, 
		(	CASE	WHEN	coalesce(N.LEGACY_CONTEXT,0)	<>	coalesce(O.LEGACY_CONTEXT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEGACY_CONTEXT, 
		(	CASE	WHEN	coalesce(N.ACCRUAL_REV_FLAG,0)	<>	coalesce(O.ACCRUAL_REV_FLAG,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCRUAL_REV_FLAG,
		(	CASE	WHEN	coalesce(N.PS_LINE_REFERENCE,0)	<>	coalesce(O.PS_LINE_REFERENCE,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_REFERENCE, 
		(	CASE	WHEN	coalesce(N.PS_LINE_DESC,0)	<>	coalesce(O.PS_LINE_DESC,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_DESC
		
FROM    FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN N
	 FULL OUTER JOIN    FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO O
	 ON N.ATTRIBUTE19 = O.GL_JE_LINE_KEY
	-- ON trim (substr(N.ATTRIBUTE19, INSTR(ATTRIBUTE19, '.', -1, 2)+1)) =  trim (substr(O.GL_JE_LINE_KEY, 1, INSTR(O.GL_JE_LINE_KEY, '-', -1)-1))||'.'|| trim (substr(O.GL_JE_LINE_KEY, INSTR(O.GL_JE_LINE_KEY, '-', -1)+1 ))
	WHERE 
(O.BUSINESS_ENTITY_KEY  between '0000' and '5999' or N.SET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  )
AND (   O.PERIOD_KEY = :PARAM_PERIOD_KEY or N.PERIOD_KEY = :PARAM_PERIOD_KEY )  
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_UV_STU   (PARAM_PERIOD_KEY VARCHAR(50),PARAM_SET_OF_BOOKS_ID INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_UV 	WHERE 
(OBUSINESS_ENTITY_KEY  between '6000' and '9999' or NSET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  )
AND (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) ;
	

INSERT FDW_TABLES_DB.OASEM_GL_DETAIL_F_UV 
SELECT N.GL_JE_LINE_KEY, N.ACCOUNT_TYPE_KEY, N.AP_INVOICE_NUM, N.AP_VENDOR_NAME,
		N.BASE_CREDIT_AMOUNT, N.BASE_DEBIT_AMOUNT, N.BATCH_ACTUAL_FLAG,
		N.BATCH_CATEGORY_NAME, N.BATCH_NAME, N.BATCH_SOURCE_NAME, N.GL_BATCH_CATEGORY_KEY,
		N.GL_DTL_CREATE_BY_KEY, N.GL_POSTED_DATE_KEY, N.HEADER_NAME, N.JE_LINE_DESCRIPTION,
		N.JE_LINE_NUMBER, N.LAST_UPDATE_DATE, N.PERIOD_KEY, N.POSTED_DATE,
		N.POSTING_STATUS, N.SET_OF_BOOKS_KEY, N.SOURCE_SYSTEM_ID, N.TRX_CREDIT_AMOUNT,
		N.TRX_CURRENCY_KEY, N.TRX_DEBIT_AMOUNT, N.BASE_BALANCE, N.TRX_BALANCE,
		N.ACCOUNT__KEY, N.BUSINESS_ENTITY_KEY, N.DEPARTMENT_KEY, N.DETAIL_KEY,
		N.VENDOR_KEY, N.FUTURE_KEY, N.INTERCOMPANY_KEY, N.MEDIUM_KEY, N.PRODUCT_SEASON_EPISODE_KEY,
		N.TERRITORY_KEY, N.USER_DEFINED_KEY, N.CHART_OF_ACCOUNT_KEY, N.TEMPLATE_KEY,
		N.LEG_ENTITY, N.LEG_GLACCT, N.LEG_SLACCT, N.LEG_DEPT, N.LEG_LOCATION,
		N.LEG_MEDIUM, N.LEG_PROJECT, N.LEG_FUTURE_USERDEF, N.LEG_INTERCO,
		N.LEG_COMPANY, N.LEG_CHECKNUM, N.LEG_CHECKDT, N.LEG_AP_VENDOR_NUM,
		N.LEG_INVOICE, N.LEG_CHARGE_DT, N.LEG_JOURNAL_ID, N.LEG_AP_VENDOR,
		N.LEG_PRODUCT, N.LEG_VENDOR, N.POSTED_BY, N.CURRENCY_CONVERSION_RATE,
		N.LAST_UPDATED_BY, N.EFFECTIVE_DATE, N.OA_CREATED_BY, N.JE_HEADER_DESC,
		N.LEGACY_CONTEXT, N.ACCRUAL_REV_FLAG, N.PS_LINE_REFERENCE, N.PS_LINE_DESC,
		
    	O.GL_JE_LINE_KEY, O.ACCOUNT_TYPE_KEY, O.AP_INVOICE_NUM, O.AP_VENDOR_NAME,
		O.BASE_CREDIT_AMOUNT, O.BASE_DEBIT_AMOUNT, O.BATCH_ACTUAL_FLAG,
		O.BATCH_CATEGORY_NAME, O.BATCH_NAME, O.BATCH_SOURCE_NAME, O.GL_BATCH_CATEGORY_KEY,
		O.GL_DTL_CREATE_BY_KEY, O.GL_POSTED_DATE_KEY, O.HEADER_NAME, O.JE_LINE_DESCRIPTION,
		O.JE_LINE_NUMBER, O.LAST_UPDATE_DATE, O.PERIOD_KEY, O.POSTED_DATE,
		O.POSTING_STATUS, O.SET_OF_BOOKS_KEY, O.SOURCE_SYSTEM_ID, O.TRX_CREDIT_AMOUNT,
		O.TRX_CURRENCY_KEY, O.TRX_DEBIT_AMOUNT, O.BASE_BALANCE, O.TRX_BALANCE,
		O.ACCOUNT__KEY, O.BUSINESS_ENTITY_KEY, O.DEPARTMENT_KEY, O.DETAIL_KEY,
		O.VENDOR_KEY, O.CONV_VENDOR_KEY, O.FUTURE_KEY, O.INTERCOMPANY_KEY,
		O.MEDIUM_KEY, O.PRODUCT_SEASON_EPISODE_KEY, O.TERRITORY_KEY, O.USER_DEFINED_KEY,
		O.CHART_OF_ACCOUNT_KEY, O.TEMPLATE_KEY, O.LEG_ENTITY, O.LEG_GLACCT,
		O.LEG_SLACCT, O.LEG_DEPT, O.LEG_LOCATION, O.LEG_MEDIUM, O.LEG_PROJECT,
		O.LEG_FUTURE_USERDEF, O.LEG_INTERCO, O.LEG_COMPANY, O.LEG_CHECKNUM,
		O.LEG_CHECKDT, O.LEG_AP_VENDOR_NUM, O.LEG_INVOICE, O.LEG_CHARGE_DT,
		O.LEG_JOURNAL_ID, O.LEG_AP_VENDOR, O.LEG_PRODUCT, O.LEG_VENDOR, O.POSTED_BY,
		O.CURRENCY_CONVERSION_RATE, O.LAST_UPDATED_BY, O.EFFECTIVE_DATE,
		O.OA_CREATED_BY, O.JE_HEADER_DESC, O.LEGACY_CONTEXT, O.ACCRUAL_REV_FLAG,
		O.PS_LINE_REFERENCE, O.PS_LINE_DESC, 
		
		(	CASE	WHEN	coalesce(N.GL_JE_LINE_KEY,0)	<>	coalesce(O.GL_JE_LINE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VGL_JE_LINE_KEY, 
		(	CASE	WHEN	coalesce(N.ACCOUNT_TYPE_KEY,0)	<>	coalesce(O.ACCOUNT_TYPE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As  VACCOUNT_TYPE_KEY,
		(	CASE	WHEN	coalesce(N.AP_INVOICE_NUM,0)	<>	coalesce(O.AP_INVOICE_NUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VAP_INVOICE_NUM, 
		(	CASE	WHEN	coalesce(N.AP_VENDOR_NAME,0)	<>	coalesce(O.AP_VENDOR_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VAP_VENDOR_NAME, 
		( coalesce(N.BASE_CREDIT_AMOUNT,0) - coalesce(O.BASE_CREDIT_AMOUNT ,0) ) AS VBASE_CREDIT_AMOUNT,
		( coalesce(N.BASE_DEBIT_AMOUNT,0) - coalesce(O.BASE_DEBIT_AMOUNT,0) ) AS VBASE_DEBIT_AMOUNT,
		(	CASE	WHEN	coalesce(N.BATCH_ACTUAL_FLAG,0)	<>	coalesce(O.BATCH_ACTUAL_FLAG,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_ACTUAL_FLAG,
		(	CASE	WHEN	coalesce(N.BATCH_CATEGORY_NAME,0)	<>	coalesce(O.BATCH_CATEGORY_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_CATEGORY_NAME,
		(	CASE	WHEN	coalesce(N.BATCH_NAME,0)	<>	coalesce(O.BATCH_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_NAME,
		(	CASE	WHEN	coalesce(N.BATCH_SOURCE_NAME,0)	<>	coalesce(O.BATCH_SOURCE_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_SOURCE_NAME,
		(	CASE	WHEN	coalesce(N.GL_BATCH_CATEGORY_KEY,0)	<>	coalesce(O.GL_BATCH_CATEGORY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_BATCH_CATEGORY_KEY, 
		--(	CASE	WHEN	coalesce(N.GL_DTL_CREATE_BY_KEY,0)	<>	coalesce(O.GL_DTL_CREATE_BY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_DTL_CREATE_BY_KEY,
		( coalesce(N.GL_DTL_CREATE_BY_KEY,0) - coalesce(O.GL_DTL_CREATE_BY_KEY,0) ) AS  VGL_DTL_CREATE_BY_KEY, 
		(case when  N.GL_POSTED_DATE_KEY =  O.GL_POSTED_DATE_KEY then 'TRUE' ELSE 'FALSE' end)   AS  VGL_POSTED_DATE_KEY,
		--(	CASE	WHEN	coalesce(N.GL_POSTED_DATE_KEY,0)	<>	coalesce(O.GL_POSTED_DATE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_POSTED_DATE_KEY,
		(	CASE	WHEN	coalesce(N.HEADER_NAME,0)	<>	coalesce(O.HEADER_NAME,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VHEADER_NAME, 
		(	CASE	WHEN	coalesce(N.JE_LINE_DESCRIPTION,0)	<>	coalesce(O.JE_LINE_DESCRIPTION,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_LINE_DESCRIPTION, 
		(	coalesce(N.JE_LINE_NUMBER,0)	-	coalesce(O.JE_LINE_NUMBER,0)		) As 		VJE_LINE_NUMBER,
		(case when  N.LAST_UPDATE_DATE =  O.LAST_UPDATE_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VLAST_UPDATE_DATE,
		(	CASE	WHEN	coalesce(N.PERIOD_KEY,0)	<>	coalesce(O.PERIOD_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPERIOD_KEY, 
		--(coalesce( trunc(N.POSTED_DATE) - trunc(O.POSTED_DATE) , 0)) AS  VPOSTED_DATE,
		(case when  N.POSTED_DATE =  O.POSTED_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VPOSTED_DATE,
		
		(	CASE	WHEN	coalesce(N.POSTING_STATUS,0)	<>	coalesce(O.POSTING_STATUS,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPOSTING_STATUS, 
		( coalesce(N.SET_OF_BOOKS_KEY,0) - coalesce(O.SET_OF_BOOKS_KEY,0) ) AS VSET_OF_BOOKS_KEY,
		(	CASE	WHEN	coalesce(N.SOURCE_SYSTEM_ID,0)	<>	coalesce(O.SOURCE_SYSTEM_ID,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VSOURCE_SYSTEM_ID, 
		( coalesce(N.TRX_CREDIT_AMOUNT,0) - coalesce(O.TRX_CREDIT_AMOUNT,0) ) AS VTRX_CREDIT_AMOUNT,
		(	CASE	WHEN	coalesce(N.TRX_CURRENCY_KEY,0)	<>	coalesce(O.TRX_CURRENCY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTRX_CURRENCY_KEY, 
		( coalesce(N.TRX_DEBIT_AMOUNT,0) - coalesce(O.TRX_DEBIT_AMOUNT,0) ) AS VTRX_DEBIT_AMOUNT,
		( coalesce(N.BASE_BALANCE,0) - coalesce(O.BASE_BALANCE,0) ) AS VBASE_BALANCE, 
		( coalesce(N.TRX_BALANCE,0) - coalesce(O.TRX_BALANCE,0) ) AS VTRX_BALANCE, 
		(	CASE	WHEN	coalesce(N.ACCOUNT__KEY,0)	<>	coalesce(O.ACCOUNT__KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCOUNT__KEY, 
		(	CASE	WHEN	coalesce(N.BUSINESS_ENTITY_KEY,0)	<>	coalesce(O.BUSINESS_ENTITY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBUSINESS_ENTITY_KEY,
		(	CASE	WHEN	coalesce(N.DEPARTMENT_KEY,0)	<>	coalesce(O.DEPARTMENT_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDEPARTMENT_KEY, 
		(	CASE	WHEN	coalesce(N.DETAIL_KEY,0)	<>	coalesce(O.DETAIL_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDETAIL_KEY, 
		(	CASE	WHEN	coalesce(N.VENDOR_KEY,0)	<>	coalesce(O.CONV_VENDOR_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VVENDOR_KEY, 
		(	CASE	WHEN	coalesce(N.FUTURE_KEY,0)	<>	coalesce(O.FUTURE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VFUTURE_KEY, 
		(	CASE	WHEN	coalesce(N.INTERCOMPANY_KEY,0)	<>	coalesce(O.INTERCOMPANY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VINTERCOMPANY_KEY,
		(	CASE	WHEN	coalesce(N.MEDIUM_KEY,0)	<>	coalesce(O.MEDIUM_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VMEDIUM_KEY, 
		(	CASE	WHEN	coalesce(N.PRODUCT_SEASON_EPISODE_KEY,0)	<>	coalesce(O.PRODUCT_SEASON_EPISODE_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPRODUCT_SEASON_EPISODE_KEY, 
		(	CASE	WHEN	coalesce(N.TERRITORY_KEY,0)	<>	coalesce(O.TERRITORY_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTERRITORY_KEY, 
		(	CASE	WHEN	coalesce(N.USER_DEFINED_KEY,0)	<>	coalesce(O.USER_DEFINED_KEY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VUSER_DEFINED_KEY,
		(	coalesce(N.CHART_OF_ACCOUNT_KEY,0) - coalesce(O.CHART_OF_ACCOUNT_KEY,0)	) As VCHART_OF_ACCOUNT_KEY, 
		(	coalesce(N.TEMPLATE_KEY,0) - coalesce(O.TEMPLATE_KEY,0)	) As VTEMPLATE_KEY, 
		(	CASE	WHEN	coalesce(N.LEG_ENTITY,0)	<>	coalesce(O.LEG_ENTITY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_ENTITY, 
		(	CASE	WHEN	coalesce(N.LEG_GLACCT,0)	<>	coalesce(O.LEG_GLACCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_GLACCT,
		(	CASE	WHEN	coalesce(N.LEG_SLACCT,0)	<>	coalesce(O.LEG_SLACCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_SLACCT, 
		(	CASE	WHEN	coalesce(N.LEG_DEPT,0)	<>	coalesce(O.LEG_DEPT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_DEPT, 
		(	CASE	WHEN	coalesce(N.LEG_LOCATION,0)	<>	coalesce(O.LEG_LOCATION,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_LOCATION, 
		(	CASE	WHEN	coalesce(N.LEG_MEDIUM,0)	<>	coalesce(O.LEG_MEDIUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_MEDIUM, 
		(	CASE	WHEN	coalesce(N.LEG_PROJECT,0)	<>	coalesce(O.LEG_PROJECT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PROJECT,
		(	CASE	WHEN	coalesce(N.LEG_FUTURE_USERDEF,0)	<>	coalesce(O.LEG_FUTURE_USERDEF,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_FUTURE_USERDEF, 
		(	CASE	WHEN	coalesce(N.LEG_INTERCO,0)	<>	coalesce(O.LEG_INTERCO,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INTERCO, 
		(	CASE	WHEN	coalesce(N.LEG_COMPANY,0)	<>	coalesce(O.LEG_COMPANY,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_COMPANY,
		(	CASE	WHEN	coalesce(N.LEG_CHECKNUM,0)	<>	coalesce(O.LEG_CHECKNUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKNUM,
		(	CASE	WHEN	coalesce(N.LEG_CHECKDT,0)	<>	coalesce(O.LEG_CHECKDT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKDT, -- 
		(	CASE	WHEN	coalesce(N.LEG_AP_VENDOR_NUM,0)	<>	coalesce(O.LEG_AP_VENDOR_NUM,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR_NUM, 
		(	CASE	WHEN	coalesce(N.LEG_INVOICE,0)	<>	coalesce(O.LEG_INVOICE,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INVOICE, 
		(	CASE	WHEN	coalesce(N.LEG_CHARGE_DT,0)	<>	coalesce(O.LEG_CHARGE_DT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHARGE_DT,
		(	CASE	WHEN	coalesce(N.LEG_JOURNAL_ID,0)	<>	coalesce(O.LEG_JOURNAL_ID,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_JOURNAL_ID, 
		(	CASE	WHEN	coalesce(N.LEG_AP_VENDOR,0)	<>	coalesce(O.LEG_AP_VENDOR,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR, 
		(	CASE	WHEN	coalesce(N.LEG_PRODUCT,0)	<>	coalesce(O.LEG_PRODUCT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PRODUCT, 
		(	CASE	WHEN	coalesce(N.LEG_VENDOR,0)	<>	coalesce(O.LEG_VENDOR,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_VENDOR, 
		(	coalesce(N.POSTED_BY,0)	-	coalesce(O.POSTED_BY,0)	) As  VPOSTED_BY,
		(	coalesce(N.CURRENCY_CONVERSION_RATE,0)	-	coalesce(O.CURRENCY_CONVERSION_RATE,0)	) As VCURRENCY_CONVERSION_RATE, 
		(	coalesce(N.LAST_UPDATED_BY,0)	-	coalesce(O.LAST_UPDATED_BY,0)	) As VLAST_UPDATED_BY, 
		--(	trunc(N.EFFECTIVE_DATE)	-	trunc(O.EFFECTIVE_DATE)	) As VEFFECTIVE_DATE,
		(case when  N.EFFECTIVE_DATE =  O.EFFECTIVE_DATE then 'TRUE' ELSE 'FALSE' end)   AS  VEFFECTIVE_DATE,
		(	coalesce(N.OA_CREATED_BY,0)	-	coalesce(O.OA_CREATED_BY,0)	) As VOA_CREATED_BY, 
		(	CASE	WHEN	coalesce(N.JE_HEADER_DESC,0)	<>	coalesce(O.JE_HEADER_DESC,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_HEADER_DESC, 
		(	CASE	WHEN	coalesce(N.LEGACY_CONTEXT,0)	<>	coalesce(O.LEGACY_CONTEXT,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEGACY_CONTEXT, 
		(	CASE	WHEN	coalesce(N.ACCRUAL_REV_FLAG,0)	<>	coalesce(O.ACCRUAL_REV_FLAG,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCRUAL_REV_FLAG,
		(	CASE	WHEN	coalesce(N.PS_LINE_REFERENCE,0)	<>	coalesce(O.PS_LINE_REFERENCE,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_REFERENCE, 
		(	CASE	WHEN	coalesce(N.PS_LINE_DESC,0)	<>	coalesce(O.PS_LINE_DESC,0)	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_DESC
		
FROM    FDW_TABLES_DB.OASEM_GL_DETAIL_F_UN N
	 FULL OUTER JOIN    FDW_TABLES_DB.OASEM_GL_DETAIL_F_UO O
	 ON N.ATTRIBUTE19 = O.GL_JE_LINE_KEY
	 --ON trim (substr(N.ATTRIBUTE19, INSTR(ATTRIBUTE19, '.', -1, 2)+1)) =  trim (substr(O.GL_JE_LINE_KEY, 1, INSTR(O.GL_JE_LINE_KEY, '-', -1)-1))||'.'|| trim (substr(O.GL_JE_LINE_KEY, INSTR(O.GL_JE_LINE_KEY, '-', -1)+1 ))
WHERE 
(O.BUSINESS_ENTITY_KEY  between '6000' and '9999' or N.SET_OF_BOOKS_KEY = :PARAM_SET_OF_BOOKS_ID  )
AND (   O.PERIOD_KEY = :PARAM_PERIOD_KEY or N.PERIOD_KEY = :PARAM_PERIOD_KEY )
;

);
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_V   (PARAM_PERIOD_KEY VARCHAR(50)) AS (

DELETE FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_V WHERE 
 (   OPERIOD_KEY = :PARAM_PERIOD_KEY or NPERIOD_KEY = :PARAM_PERIOD_KEY ) ;
	

INSERT FDW_TABLES_DB.OASEM_GL_DETAIL_F_V
SELECT N.GL_JE_LINE_KEY, N.ACCOUNT_TYPE_KEY, N.AP_INVOICE_NUM, N.AP_VENDOR_NAME,
		N.BASE_CREDIT_AMOUNT, N.BASE_DEBIT_AMOUNT, N.BATCH_ACTUAL_FLAG,
		N.BATCH_CATEGORY_NAME, N.BATCH_NAME, N.BATCH_SOURCE_NAME, N.GL_BATCH_CATEGORY_KEY,
		N.GL_DTL_CREATE_BY_KEY, N.GL_POSTED_DATE_KEY, N.HEADER_NAME, N.JE_LINE_DESCRIPTION,
		N.JE_LINE_NUMBER, N.LAST_UPDATE_DATE, N.PERIOD_KEY, N.POSTED_DATE,
		N.POSTING_STATUS, N.SET_OF_BOOKS_KEY, N.SOURCE_SYSTEM_ID, N.TRX_CREDIT_AMOUNT,
		N.TRX_CURRENCY_KEY, N.TRX_DEBIT_AMOUNT, N.BASE_BALANCE, N.TRX_BALANCE,
		N.ACCOUNT__KEY, N.BUSINESS_ENTITY_KEY, N.DEPARTMENT_KEY, N.DETAIL_KEY,
		N.VENDOR_KEY, N.FUTURE_KEY, N.INTERCOMPANY_KEY, N.MEDIUM_KEY, N.PRODUCT_SEASON_EPISODE_KEY,
		N.TERRITORY_KEY, N.USER_DEFINED_KEY, N.CHART_OF_ACCOUNT_KEY, N.TEMPLATE_KEY,
		N.LEG_ENTITY, N.LEG_GLACCT, N.LEG_SLACCT, N.LEG_DEPT, N.LEG_LOCATION,
		N.LEG_MEDIUM, N.LEG_PROJECT, N.LEG_FUTURE_USERDEF, N.LEG_INTERCO,
		N.LEG_COMPANY, N.LEG_CHECKNUM, N.LEG_CHECKDT, N.LEG_AP_VENDOR_NUM,
		N.LEG_INVOICE, N.LEG_CHARGE_DT, N.LEG_JOURNAL_ID, N.LEG_AP_VENDOR,
		N.LEG_PRODUCT, N.LEG_VENDOR, N.POSTED_BY, N.CURRENCY_CONVERSION_RATE,
		N.LAST_UPDATED_BY, N.EFFECTIVE_DATE, N.OA_CREATED_BY, N.JE_HEADER_DESC,
		N.LEGACY_CONTEXT, N.ACCRUAL_REV_FLAG, N.PS_LINE_REFERENCE, N.PS_LINE_DESC,
		
    	O.GL_JE_LINE_KEY, O.ACCOUNT_TYPE_KEY, O.AP_INVOICE_NUM, O.AP_VENDOR_NAME,
		O.BASE_CREDIT_AMOUNT, O.BASE_DEBIT_AMOUNT, O.BATCH_ACTUAL_FLAG,
		O.BATCH_CATEGORY_NAME, O.BATCH_NAME, O.BATCH_SOURCE_NAME, O.GL_BATCH_CATEGORY_KEY,
		O.GL_DTL_CREATE_BY_KEY, O.GL_POSTED_DATE_KEY, O.HEADER_NAME, O.JE_LINE_DESCRIPTION,
		O.JE_LINE_NUMBER, O.LAST_UPDATE_DATE, O.PERIOD_KEY, O.POSTED_DATE,
		O.POSTING_STATUS, O.SET_OF_BOOKS_KEY, O.SOURCE_SYSTEM_ID, O.TRX_CREDIT_AMOUNT,
		O.TRX_CURRENCY_KEY, O.TRX_DEBIT_AMOUNT, O.BASE_BALANCE, O.TRX_BALANCE,
		O.ACCOUNT__KEY, O.BUSINESS_ENTITY_KEY, O.DEPARTMENT_KEY, O.DETAIL_KEY,
		O.VENDOR_KEY, O.CONV_VENDOR_KEY, O.FUTURE_KEY, O.INTERCOMPANY_KEY,
		O.MEDIUM_KEY, O.PRODUCT_SEASON_EPISODE_KEY, O.TERRITORY_KEY, O.USER_DEFINED_KEY,
		O.CHART_OF_ACCOUNT_KEY, O.TEMPLATE_KEY, O.LEG_ENTITY, O.LEG_GLACCT,
		O.LEG_SLACCT, O.LEG_DEPT, O.LEG_LOCATION, O.LEG_MEDIUM, O.LEG_PROJECT,
		O.LEG_FUTURE_USERDEF, O.LEG_INTERCO, O.LEG_COMPANY, O.LEG_CHECKNUM,
		O.LEG_CHECKDT, O.LEG_AP_VENDOR_NUM, O.LEG_INVOICE, O.LEG_CHARGE_DT,
		O.LEG_JOURNAL_ID, O.LEG_AP_VENDOR, O.LEG_PRODUCT, O.LEG_VENDOR, O.POSTED_BY,
		O.CURRENCY_CONVERSION_RATE, O.LAST_UPDATED_BY, O.EFFECTIVE_DATE,
		O.OA_CREATED_BY, O.JE_HEADER_DESC, O.LEGACY_CONTEXT, O.ACCRUAL_REV_FLAG,
		O.PS_LINE_REFERENCE, O.PS_LINE_DESC, 
		
		(	CASE	WHEN	N.GL_JE_LINE_KEY	<>	O.GL_JE_LINE_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VGL_JE_LINE_KEY, 
		(	CASE	WHEN	N.ACCOUNT_TYPE_KEY	<>	O.ACCOUNT_TYPE_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As  VACCOUNT_TYPE_KEY,
		(	CASE	WHEN	N.AP_INVOICE_NUM	<>	O.AP_INVOICE_NUM	THEN	'FALSE'	ELSE	'TRUE'	END	) As VAP_INVOICE_NUM, 
		(	CASE	WHEN	N.AP_VENDOR_NAME	<>	O.AP_VENDOR_NAME	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VAP_VENDOR_NAME, 
		( N.BASE_CREDIT_AMOUNT - O.BASE_CREDIT_AMOUNT ) AS VBASE_CREDIT_AMOUNT,
		( N.BASE_DEBIT_AMOUNT - O.BASE_DEBIT_AMOUNT) AS VBASE_DEBIT_AMOUNT,
		(	CASE	WHEN	N.BATCH_ACTUAL_FLAG	<>	O.BATCH_ACTUAL_FLAG	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_ACTUAL_FLAG,
		(	CASE	WHEN	N.BATCH_CATEGORY_NAME	<>	O.BATCH_CATEGORY_NAME	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBATCH_CATEGORY_NAME,
		(	CASE	WHEN	N.BATCH_NAME	<>	O.BATCH_NAME	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_NAME,
		(	CASE	WHEN	N.BATCH_SOURCE_NAME	<>	O.BATCH_SOURCE_NAME	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VBATCH_SOURCE_NAME,
		(	CASE	WHEN	N.GL_BATCH_CATEGORY_KEY	<>	O.GL_BATCH_CATEGORY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As 		VGL_BATCH_CATEGORY_KEY, 
		( N.GL_DTL_CREATE_BY_KEY - O.GL_DTL_CREATE_BY_KEY ) AS  VGL_DTL_CREATE_BY_KEY, 
		(coalesce( N.GL_POSTED_DATE_KEY - O.GL_POSTED_DATE_KEY ,0)) AS  VGL_POSTED_DATE_KEY,
		(	CASE	WHEN	N.HEADER_NAME	<>	O.HEADER_NAME	THEN	'FALSE'	ELSE	'TRUE'	END	) As VHEADER_NAME, 
		(	CASE	WHEN	N.JE_LINE_DESCRIPTION	<>	O.JE_LINE_DESCRIPTION	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_LINE_DESCRIPTION, 
		( N.JE_LINE_NUMBER - O.JE_LINE_NUMBER ) AS VJE_LINE_NUMBER, 
		( trunc(N.LAST_UPDATE_DATE) - trunc(O.LAST_UPDATE_DATE) ) AS VLAST_UPDATE_DATE,
		(	CASE	WHEN	N.PERIOD_KEY	<>	O.PERIOD_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPERIOD_KEY, 
		(coalesce( trunc(N.POSTED_DATE) - trunc(O.POSTED_DATE) , 0)) AS  VPOSTED_DATE,
		
				(	CASE	WHEN	N.POSTING_STATUS	<>	O.POSTING_STATUS	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPOSTING_STATUS, 
		( N.SET_OF_BOOKS_KEY - O.SET_OF_BOOKS_KEY ) AS VSET_OF_BOOKS_KEY,
		(	CASE	WHEN	N.SOURCE_SYSTEM_ID	<>	O.SOURCE_SYSTEM_ID	THEN	'FALSE'	ELSE	'TRUE'	END	) As VSOURCE_SYSTEM_ID, 
		( N.TRX_CREDIT_AMOUNT - O.TRX_CREDIT_AMOUNT ) AS VTRX_CREDIT_AMOUNT,
		(	CASE	WHEN	N.TRX_CURRENCY_KEY	<>	O.TRX_CURRENCY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTRX_CURRENCY_KEY, 
		( N.TRX_DEBIT_AMOUNT - O.TRX_DEBIT_AMOUNT ) AS VTRX_DEBIT_AMOUNT,
		( N.BASE_BALANCE - O.BASE_BALANCE ) AS VBASE_BALANCE, 
		( N.TRX_BALANCE - O.TRX_BALANCE ) AS VTRX_BALANCE, 
		(	CASE	WHEN	N.ACCOUNT__KEY	<>	O.ACCOUNT__KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCOUNT__KEY, 
		(	CASE	WHEN	N.BUSINESS_ENTITY_KEY	<>	O.BUSINESS_ENTITY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VBUSINESS_ENTITY_KEY,
		(	CASE	WHEN	N.DEPARTMENT_KEY	<>	O.DEPARTMENT_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDEPARTMENT_KEY, 
		(	CASE	WHEN	N.DETAIL_KEY	<>	O.DETAIL_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VDETAIL_KEY, 
		(	CASE	WHEN	N.VENDOR_KEY	<>	O.CONV_VENDOR_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VVENDOR_KEY, 
		(	CASE	WHEN	N.FUTURE_KEY	<>	O.FUTURE_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VFUTURE_KEY, 
		(	CASE	WHEN	N.INTERCOMPANY_KEY	<>	O.INTERCOMPANY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VINTERCOMPANY_KEY,
		(	CASE	WHEN	N.MEDIUM_KEY	<>	O.MEDIUM_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VMEDIUM_KEY, 
		(	CASE	WHEN	N.PRODUCT_SEASON_EPISODE_KEY	<>	O.PRODUCT_SEASON_EPISODE_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPRODUCT_SEASON_EPISODE_KEY, 
		(	CASE	WHEN	N.TERRITORY_KEY	<>	O.TERRITORY_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VTERRITORY_KEY, 
		(	CASE	WHEN	N.USER_DEFINED_KEY	<>	O.USER_DEFINED_KEY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VUSER_DEFINED_KEY,
		(	N.CHART_OF_ACCOUNT_KEY - O.CHART_OF_ACCOUNT_KEY	) As VCHART_OF_ACCOUNT_KEY, 
		(	N.TEMPLATE_KEY - O.TEMPLATE_KEY	) As VTEMPLATE_KEY, 
		(	CASE	WHEN	N.LEG_ENTITY	<>	O.LEG_ENTITY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_ENTITY, 
		(	CASE	WHEN	N.LEG_GLACCT	<>	O.LEG_GLACCT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_GLACCT,
		(	CASE	WHEN	N.LEG_SLACCT	<>	O.LEG_SLACCT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_SLACCT, 
		(	CASE	WHEN	N.LEG_DEPT	<>	O.LEG_DEPT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_DEPT, 
		(	CASE	WHEN	N.LEG_LOCATION	<>	O.LEG_LOCATION	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_LOCATION, 
		(	CASE	WHEN	N.LEG_MEDIUM	<>	O.LEG_MEDIUM	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_MEDIUM, 
		(	CASE	WHEN	N.LEG_PROJECT	<>	O.LEG_PROJECT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PROJECT,
		(	CASE	WHEN	N.LEG_FUTURE_USERDEF	<>	O.LEG_FUTURE_USERDEF	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_FUTURE_USERDEF, 
		(	CASE	WHEN	N.LEG_INTERCO	<>	O.LEG_INTERCO	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INTERCO, 
		(	CASE	WHEN	N.LEG_COMPANY	<>	O.LEG_COMPANY	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_COMPANY,
		(	CASE	WHEN	N.LEG_CHECKNUM	<>	O.LEG_CHECKNUM	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKNUM,
		(	CASE	WHEN	N.LEG_CHECKDT	<>	O.LEG_CHECKDT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHECKDT, -- 
		(	CASE	WHEN	N.LEG_AP_VENDOR_NUM	<>	O.LEG_AP_VENDOR_NUM	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR_NUM, 
		(	CASE	WHEN	N.LEG_INVOICE	<>	O.LEG_INVOICE	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_INVOICE, 
		(	CASE	WHEN	N.LEG_CHARGE_DT	<>	O.LEG_CHARGE_DT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_CHARGE_DT,
		(	CASE	WHEN	N.LEG_JOURNAL_ID	<>	O.LEG_JOURNAL_ID	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_JOURNAL_ID, 
		(	CASE	WHEN	N.LEG_AP_VENDOR	<>	O.LEG_AP_VENDOR	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_AP_VENDOR, 
		(	CASE	WHEN	N.LEG_PRODUCT	<>	O.LEG_PRODUCT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_PRODUCT, 
		(	CASE	WHEN	N.LEG_VENDOR	<>	O.LEG_VENDOR	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEG_VENDOR, 
		(	coalesce((N.POSTED_BY	-	O.POSTED_BY),0)	) As  VPOSTED_BY,
		(	N.CURRENCY_CONVERSION_RATE	-	O.CURRENCY_CONVERSION_RATE	) As VCURRENCY_CONVERSION_RATE, 
		(	N.LAST_UPDATED_BY	-	O.LAST_UPDATED_BY	) As VLAST_UPDATED_BY, 
		(	trunc(N.EFFECTIVE_DATE)	-	trunc(O.EFFECTIVE_DATE)	) As VEFFECTIVE_DATE,
		(	N.OA_CREATED_BY	-	O.OA_CREATED_BY	) As VOA_CREATED_BY, 
		(	CASE	WHEN	N.JE_HEADER_DESC	<>	O.JE_HEADER_DESC	THEN	'FALSE'	ELSE	'TRUE'	END	) As VJE_HEADER_DESC, 
		(	CASE	WHEN	N.LEGACY_CONTEXT	<>	O.LEGACY_CONTEXT	THEN	'FALSE'	ELSE	'TRUE'	END	) As VLEGACY_CONTEXT, 
		(	CASE	WHEN	N.ACCRUAL_REV_FLAG	<>	O.ACCRUAL_REV_FLAG	THEN	'FALSE'	ELSE	'TRUE'	END	) As VACCRUAL_REV_FLAG,
		(	CASE	WHEN	N.PS_LINE_REFERENCE	<>	O.PS_LINE_REFERENCE	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_REFERENCE, 
		(	CASE	WHEN	N.PS_LINE_DESC	<>	O.PS_LINE_DESC	THEN	'FALSE'	ELSE	'TRUE'	END	) As VPS_LINE_DESC
        FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_N N
		  FULL OUTER JOIN    FDW_TABLES_DB.OASEM_GL_DETAIL_F_O O
			ON  N.GL_JE_LINE_KEY	=	O.GL_JE_LINE_KEY  
			and  N.period_key = O.period_key
			WHERE 
 (   O.PERIOD_KEY = :PARAM_PERIOD_KEY or N.PERIOD_KEY = :PARAM_PERIOD_KEY ) 
;

);
----- OASEM_GL_DETAIL_F_XLA_CTD
REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_DETAIL_F_XLA_CTD
AS (

DELETE  FROM FDW_TABLES_DB.OASEM_GL_DETAIL_F_XLA_CTD where period_key in (select distinct period_key from FDW_STAGE_DB.LOAD_GL_DETAIL_F_XLA_CTD_s);

--WHERE exists
--(
--select '1'
--from 
  -- FDW_STAGE_DB.LOAD_GL_DETAIL_F_XLA_CTD_s
--where
  -- LOAD_GL_DETAIL_F_XLA_CTD_s.GL_JE_LINE_KEY = OASEM_GL_DETAIL_F_XLA_CTD.GL_JE_LINE_KEY
   --AND LOAD_GL_DETAIL_F_XLA_CTD_s.PERIOD_KEY = OASEM_GL_DETAIL_F_XLA_CTD.PERIOD_KEY
   --AND LOAD_GL_DETAIL_F_XLA_CTD_s.SET_OF_BOOKS_KEY = OASEM_GL_DETAIL_F_XLA_CTD.SET_OF_BOOKS_KEY
   --AND LOAD_GL_DETAIL_F_XLA_CTD_s.CHART_OF_ACCOUNT_KEY = OASEM_GL_DETAIL_F_XLA_CTD.CHART_OF_ACCOUNT_KEY
   --AND LOAD_GL_DETAIL_F_XLA_CTD_s.GL_SL_LINK_ID = OASEM_GL_DETAIL_F_XLA_CTD.GL_SL_LINK_ID
  -- );

INSERT INTO FDW_TABLES_DB.OASEM_GL_DETAIL_F_XLA_CTD 
(GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
  BASE_CREDIT_AMOUNT, BASE_DEBIT_AMOUNT, BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
  BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
  GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
  LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
  SOURCE_SYSTEM_ID, TRX_CREDIT_AMOUNT, TRX_CURRENCY_KEY, TRX_DEBIT_AMOUNT,
  BASE_BALANCE, TRX_BALANCE, ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
  DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, FUTURE_KEY, INTERCOMPANY_KEY,
  MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY, USER_DEFINED_KEY,
  CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY, LEG_GLACCT, LEG_SLACCT,
  LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT, LEG_FUTURE_USERDEF,
  LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT, LEG_AP_VENDOR_NUM,
  LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID, LEG_AP_VENDOR, LEG_PRODUCT,
  LEG_VENDOR, POSTED_BY, POSTED_BY_NAME, CURRENCY_CONVERSION_RATE,
  LAST_UPDATED_BY, LAST_UPDATED_BY_NAME, EFFECTIVE_DATE, OA_CREATED_BY,
  OA_CREATED_BY_NAME, JE_HEADER_DESC, LEGACY_CONTEXT, ACCRUAL_REV_FLAG,
  PS_LINE_REFERENCE, PS_LINE_DESC, LEGACY_GL_JE_LINE_KEY, CONCATENATED_SEGMENTS,
  LEDGER_ID, CODE_COMBINATION_ID, GL_SL_LINK_ID, JE_HEADER_ID,
  JE_LINE_NUM, PERIOD_NAME, ENTITY_CODE, SLA_DISTR_NET_AMT_BASE,
  SLA_DISTR_DETAIL_AMT_DR_BASE, SLA_DISTR_DETAIL_AMT_CR_BASE, SLA_DISTR_DETAIL_AMT,
  SLA_DISTR_DETAIL_AMT_DR, SLA_DISTR_DETAIL_AMT_CR, SLA_DISTR_DETAIL_LINE_NUMBER,
  SLA_LINE_NET_AMT, SLA_LINE_AMT_DR, SLA_LINE_AMT_CR, SLA_LINE_NET_AMT_BASE,
  SLA_LINE_AMT_DR_BASE, SLA_LINE_AMT_CR_BASE, SLA_CURRENCY_CODE,
  SLA_HEADER_DESCRIPTION, SLA_LINE_DESCRIPTION, SLA_ACCTG_EVENT_CLASS_NAME,
  SLA_ACCOUNTING_EVENT_DATE, SLA_ACCTG_EVENT_LINE_NUMBER, SLA_ACCOUNTING_EVENT_NUMBER,
  SLA_ACCOUNTING_EVENT_TYPE_NAME, SLA_LINE_EXCHANGE_RATE, SLA_LINE_EXCHANGE_RATE_DATE,
  SLA_LINE_EXCHANGE_RATE_TYPE, SLA_GL_DATE_KEY, SLA_GL_TRANSFER_DATE,
  LOCAL_INVOICE_AMOUNT, INVOICE_AMOUNT, INVOICE_BASE_AMOUNT, INVOICE_CURRENCY_CODE,
  INVOICE_AMT_PAID, INVOICE_DATE, INVOICE_DESCRIPTION, INVOICE_NUMBER,
  INVOICE_PAYMENT_STATUS, PAYMENT_METHOD, INVOICE_SOURCE_CODE,
  INVOICE_TAX_AMOUNT, PAYMENT_CURRENCY_CODE, INV_EXCHANGE_RATE,
  DISTR_AMOUNT, DISTR_ACCTG_DATE, DISTR_LINE_NUM, DISTR_DESCR,
  AP_VENDOR_NUMBER, VENDOR_TYPE_LOOKUP_CODE, VENDOR_SITE_CODE,
  ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, ZIP,
  COUNTRY, ACCOUNTING_ENTRY_STATUS, ACCOUNTING_ENTRY_TYPE, ACCOUNTING_EVENT_STATUS,
  ACCOUNTING_CLASS, GL_TRANSFER_MODE, GL_TRANSFER_STATUS, ACCT_EVENT_PROCESS_STATUS,
  CHECK_AMOUNT, CHECK_BASE_AMOUNT, CHECK_CLEARED_AMOUNT, CHECK_CLEARED_BASE_AMOUNT,
  CHECK_CLEARED_DATE, CHECK_CURRENCY_CODE, CHECK_DATE, CHECK_NUMBER,
  CHECK_RELEASED_DATE, CHECK_STATUS_CODE, CHECK_STOPPED_DATE, CHECK_VOID_DATE,
  CHECK_STOPPED_FLAG, CHECK_VOUCHER_NUMBER, PAYMENT_ACCRUAL_POSTED_FLAG,
  PAYMENT_AMOUNT, PAYMENT_BASE_AMOUNT, PAYMENT_BANK_ACCOUNT_NAME,
  PAYMENT_BANK_ACCOUNT_NUMBER, PAYMENT_BANK_ACCT_TYPE_CODE, PAYMENT_BANK_NUMBER,
  PAYMENT_CASH_POSTED_FLAG, PAYMENT_ACCOUNTING_DATE, PAYMENT_PERIOD_NAME,
  PAYMENT_CREATION_DATE, PAYMENT_DISC_LOST_AMOUNT, PAYMENT_DISC_TAKEN_AMOUNT,
  PAYMENT_EXCHANGE_RATE, PAYMENT_NUMBER, PAYMENT_POSTED_FLAG, JOURNAL_ID)
SELECT GL_JE_LINE_KEY, ACCOUNT_TYPE_KEY, AP_INVOICE_NUM, AP_VENDOR_NAME,
  BASE_CREDIT_AMOUNT, BASE_DEBIT_AMOUNT, BATCH_ACTUAL_FLAG, BATCH_CATEGORY_NAME,
  BATCH_NAME, BATCH_SOURCE_NAME, GL_BATCH_CATEGORY_KEY, GL_DTL_CREATE_BY_KEY,
  GL_POSTED_DATE_KEY, HEADER_NAME, JE_LINE_DESCRIPTION, JE_LINE_NUMBER,
  LAST_UPDATE_DATE, PERIOD_KEY, POSTED_DATE, POSTING_STATUS, SET_OF_BOOKS_KEY,
  SOURCE_SYSTEM_ID, TRX_CREDIT_AMOUNT, TRX_CURRENCY_KEY, TRX_DEBIT_AMOUNT,
  BASE_BALANCE, TRX_BALANCE, ACCOUNT__KEY, BUSINESS_ENTITY_KEY,
  DEPARTMENT_KEY, DETAIL_KEY, VENDOR_KEY, FUTURE_KEY, INTERCOMPANY_KEY,
  MEDIUM_KEY, PRODUCT_SEASON_EPISODE_KEY, TERRITORY_KEY, USER_DEFINED_KEY,
  CHART_OF_ACCOUNT_KEY, TEMPLATE_KEY, LEG_ENTITY, LEG_GLACCT, LEG_SLACCT,
  LEG_DEPT, LEG_LOCATION, LEG_MEDIUM, LEG_PROJECT, LEG_FUTURE_USERDEF,
  LEG_INTERCO, LEG_COMPANY, LEG_CHECKNUM, LEG_CHECKDT, LEG_AP_VENDOR_NUM,
  LEG_INVOICE, LEG_CHARGE_DT, LEG_JOURNAL_ID, LEG_AP_VENDOR, LEG_PRODUCT,
  LEG_VENDOR, POSTED_BY, POSTED_BY_NAME, CURRENCY_CONVERSION_RATE,
  LAST_UPDATED_BY, LAST_UPDATED_BY_NAME, EFFECTIVE_DATE, OA_CREATED_BY,
  OA_CREATED_BY_NAME, JE_HEADER_DESC, LEGACY_CONTEXT, ACCRUAL_REV_FLAG,
  PS_LINE_REFERENCE, PS_LINE_DESC, LEGACY_GL_JE_LINE_KEY, CONCATENATED_SEGMENTS,
  LEDGER_ID, CODE_COMBINATION_ID, GL_SL_LINK_ID, JE_HEADER_ID,
  JE_LINE_NUM, PERIOD_NAME, ENTITY_CODE, SLA_DISTR_NET_AMT_BASE,
  SLA_DISTR_DETAIL_AMT_DR_BASE, SLA_DISTR_DETAIL_AMT_CR_BASE, SLA_DISTR_DETAIL_AMT,
  SLA_DISTR_DETAIL_AMT_DR, SLA_DISTR_DETAIL_AMT_CR, SLA_DISTR_DETAIL_LINE_NUMBER,
  SLA_LINE_NET_AMT, SLA_LINE_AMT_DR, SLA_LINE_AMT_CR, SLA_LINE_NET_AMT_BASE,
  SLA_LINE_AMT_DR_BASE, SLA_LINE_AMT_CR_BASE, SLA_CURRENCY_CODE,
  SLA_HEADER_DESCRIPTION, SLA_LINE_DESCRIPTION, SLA_ACCTG_EVENT_CLASS_NAME,
  SLA_ACCOUNTING_EVENT_DATE, SLA_ACCTG_EVENT_LINE_NUMBER, SLA_ACCOUNTING_EVENT_NUMBER,
  SLA_ACCOUNTING_EVENT_TYPE_NAME, SLA_LINE_EXCHANGE_RATE, SLA_LINE_EXCHANGE_RATE_DATE,
  SLA_LINE_EXCHANGE_RATE_TYPE, SLA_GL_DATE_KEY, SLA_GL_TRANSFER_DATE,
  LOCAL_INVOICE_AMOUNT, INVOICE_AMOUNT, INVOICE_BASE_AMOUNT, INVOICE_CURRENCY_CODE,
  INVOICE_AMT_PAID, INVOICE_DATE, INVOICE_DESCRIPTION, INVOICE_NUMBER,
  INVOICE_PAYMENT_STATUS, PAYMENT_METHOD, INVOICE_SOURCE_CODE,
  INVOICE_TAX_AMOUNT, PAYMENT_CURRENCY_CODE, INV_EXCHANGE_RATE,
  DISTR_AMOUNT, DISTR_ACCTG_DATE, DISTR_LINE_NUM, DISTR_DESCR,
  AP_VENDOR_NUMBER, VENDOR_TYPE_LOOKUP_CODE, VENDOR_SITE_CODE,
  ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, ZIP,
  COUNTRY, ACCOUNTING_ENTRY_STATUS, ACCOUNTING_ENTRY_TYPE, ACCOUNTING_EVENT_STATUS,
  ACCOUNTING_CLASS, GL_TRANSFER_MODE, GL_TRANSFER_STATUS, ACCT_EVENT_PROCESS_STATUS,
  CHECK_AMOUNT, CHECK_BASE_AMOUNT, CHECK_CLEARED_AMOUNT, CHECK_CLEARED_BASE_AMOUNT,
  CHECK_CLEARED_DATE, CHECK_CURRENCY_CODE, CHECK_DATE, CHECK_NUMBER,
  CHECK_RELEASED_DATE, CHECK_STATUS_CODE, CHECK_STOPPED_DATE, CHECK_VOID_DATE,
  CHECK_STOPPED_FLAG, CHECK_VOUCHER_NUMBER, PAYMENT_ACCRUAL_POSTED_FLAG,
  PAYMENT_AMOUNT, PAYMENT_BASE_AMOUNT, PAYMENT_BANK_ACCOUNT_NAME,
  PAYMENT_BANK_ACCOUNT_NUMBER, PAYMENT_BANK_ACCT_TYPE_CODE, PAYMENT_BANK_NUMBER,
  PAYMENT_CASH_POSTED_FLAG, PAYMENT_ACCOUNTING_DATE, PAYMENT_PERIOD_NAME,
  PAYMENT_CREATION_DATE, PAYMENT_DISC_LOST_AMOUNT, PAYMENT_DISC_TAKEN_AMOUNT,
  PAYMENT_EXCHANGE_RATE, PAYMENT_NUMBER, PAYMENT_POSTED_FLAG, JOURNAL_ID
FROM FDW_STAGE_DB.LOAD_GL_DETAIL_F_XLA_CTD_s
;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_GL_PERIOD_CURRENT
AS (
DELETE FROM FDW_TABLES_DB.OASEM_GL_PERIOD_CURRENT where SET_OF_BOOKS_ID <>1002;

INSERT INTO FDW_TABLES_DB.OASEM_GL_PERIOD_CURRENT
( 
   CURRENT_PERIOD
   ,CURRENT_QUARTER
   ,CURRENT_YEAR
   ,PERIOD_SET_NAME
   ,PERIOD_TYPE
   ,SET_OF_BOOKS_ID
) 
SELECT
   OASEM_GL_PERIOD.PERIOD_NUM_GEN
   ,OASEM_GL_PERIOD.PERIOD_YEAR * 4 + OASEM_GL_PERIOD.QUARTER_NUM
   ,OASEM_GL_PERIOD.PERIOD_YEAR
   ,COALESCE(CAST(OASEM_GL_PERIOD.PERIOD_SET_NAME AS VARCHAR(256)), 'NA')
   ,COALESCE(CAST(OASEM_GL_PERIOD.PERIOD_TYPE AS VARCHAR(256)), 'NA')
   ,SET_OF_BOOKS_ID
 FROM 
   FDW_STU_SEM_DB.OASEM_GL_PERIOD
WHERE
   CAST(CURRENT_DATE AS DATE FORMAT 'DD-MMM-YYYY') BETWEEN  OASEM_GL_PERIOD.START_DATE AND OASEM_GL_PERIOD.END_DATE
    AND OASEM_GL_PERIOD.ADJUSTMENT_PERIOD_FLAG <>'Y' 
 AND  SET_OF_BOOKS_ID = 2248
 UNION ALL
 SELECT
   OASEM_GL_PERIOD.PERIOD_NUM_GEN
   ,OASEM_GL_PERIOD.PERIOD_YEAR * 4 + OASEM_GL_PERIOD.QUARTER_NUM
   ,OASEM_GL_PERIOD.PERIOD_YEAR
   ,COALESCE(CAST(OASEM_GL_PERIOD.PERIOD_SET_NAME AS VARCHAR(256)), 'NA')
   ,COALESCE(CAST(OASEM_GL_PERIOD.PERIOD_TYPE AS VARCHAR(256)), 'NA')
   ,SET_OF_BOOKS_ID
 FROM 
   FDW_CTD_SEM_DB.OASEM_GL_PERIOD
WHERE
   CAST(CURRENT_DATE AS DATE FORMAT 'DD-MMM-YYYY') BETWEEN  OASEM_GL_PERIOD.START_DATE AND OASEM_GL_PERIOD.END_DATE
    AND OASEM_GL_PERIOD.ADJUSTMENT_PERIOD_FLAG <>'Y'
 AND  SET_OF_BOOKS_ID = 2249 ;
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_INTERCOMP_HIER_D (CBS_Studio INT, CBS_Distribution INT) AS(

DELETE FROM FDW_TABLES_DB.OASEM_INTERCOMP_HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_INTERCOMP_HIER_D (
INTERCOMPANY_KEY,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
)
SELECT 
CHILD_VALUE as INTERCOMPANY_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio AS SET_OF_BOOKS_ID from FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_BUSINESS_ENTITY_INTERCOMPANY'))
UNION ALL
SELECT 
CHILD_VALUE as INTERCOMPANY_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution AS SET_OF_BOOKS_ID from FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_BUSINESS_ENTITY_INTERCOMPANY'));
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_MEDIUM_HIER_D (CBS_Studio INT, CBS_Distribution INT) AS(

DELETE FROM FDW_TABLES_DB.OASEM_MEDIUM_HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_MEDIUM_HIER_D (
MEDIUM_KEY,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
)
select 
CHILD_VALUE as MEDIUM_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio SET_OF_BOOKS_ID  FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_MEDIUM'))
UNION ALL
select 
CHILD_VALUE as MEDIUM_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_MEDIUM'));
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_TERRITORY_HIER_D (CBS_Studio INT, CBS_Distribution INT) AS (

DELETE FROM FDW_TABLES_DB.OASEM_TERRITORY_HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_TERRITORY_HIER_D
( 
TERRITORY_KEY
,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
) 
SELECT 
CHILD_VALUE as TERRITORY_KEY
,CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_TERRITORY'))
UNION ALL
SELECT 
CHILD_VALUE as TERRITORY_KEY
,CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_TERRITORY'));
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MAC_OASEM_USER_DEFI_HIER_D  (CBS_Studio INT, CBS_Distribution INT) AS(

DELETE FROM FDW_TABLES_DB.OASEM_USER_DEFI_HIER_D;

INSERT INTO FDW_TABLES_DB.OASEM_USER_DEFI_HIER_D (
USER_DEFINED_KEY,LEVEL_2
,LEVEL_2_DESC
,LEVEL_1
,LEVEL_1_DESC
,SET_OF_BOOKS_ID
)
SELECT 
CHILD_VALUE as USER_DEFINED_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Studio AS SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_USER_DEFINED'))
UNION ALL
SELECT 
CHILD_VALUE as USER_DEFINED_KEY
, CHILD_VALUE as LEVEL_2
,DESCRIPTION as LEVEL_2_DESC
,PARENT_VALUE
,TOP_VALUE
,:CBS_Distribution AS SET_OF_BOOKS_ID FROM FDW_TABLES_DB.OA3NF_HIERARCHY_S WHERE FLEX_VALUE_SET_ID IN (SELECT  distinct FLEX_VALUE_SET_ID  from FDW_TABLES_DB.OA3NF_FND_FLX_VAL_SETS 
where FLEX_VALUE_SET_NAME in ('DIS_STU_GL_USER_DEFINED'));
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MC_OA3NF_BAL_GL_BALANCES_PH_TB
AS (

  DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_PH_TB
  
WHERE CAST(PROCESS_DATE AS DATE) 
        NOT BETWEEN 

    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD)
         ;
         
/*
======================================================================================
OA3NF_BAL_GL_BALANCES_TD_TB  : Populate Teradata Trial Balance Table
======================================================================================
*/


INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_PH_TB

(
GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,BUSINESS_ENTITY_KEY
,CURRENCY_CD
,SET_OF_BOOKS_ID
, ACTUAL_ENDING_BALANCE_USD
, ACTUAL_ENDING_BALANCE_TXN
)



SELECT


OA3NF_BAL_GL_BALANCES_SUM .GL_PERIOD_ID AS GL_PERIOD_ID            
,OA3NF_BAL_GL_BALANCES_SUM .ACCOUNT_KEY AS ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM .PROCESS_DATE AS PROCESS_DATE 
,OA3NF_BAL_GL_BALANCES_SUM .BUSINESS_ENTITY_KEY AS BUSINESS_ENTITY_KEY 
,OA3NF_BAL_GL_BALANCES_SUM .CURRENCY_CD AS  CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM.SET_OF_BOOKS_ID AS  SET_OF_BOOKS_ID
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_USD) AS  ACTUAL_ENDING_BALANCE_USD
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_TXN) AS ACTUAL_ENDING_BALANCE_TXN

 FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM 
 
 GROUP BY 
 OA3NF_BAL_GL_BALANCES_SUM .GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES_SUM .ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM .PROCESS_DATE
,OA3NF_BAL_GL_BALANCES_SUM .BUSINESS_ENTITY_KEY
,OA3NF_BAL_GL_BALANCES_SUM .CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM.SET_OF_BOOKS_ID
WHERE SRC_SYSTEM='TERADATA-PHX'

AND CAST(PROCESS_DATE AS DATE) 
IN

( SELECT CAST(PD.PROCESS_DATE AS DATE)
  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
  )

;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.MC_OA3NF_BAL_GL_BALANCES_TD_TB
AS (

  DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB WHERE SET_OF_BOOKS_ID NOT IN(1002)
  AND
   CAST(OA3NF_BAL_GL_BALANCES_TD_TB.PROCESS_DATE AS DATE) 
        NOT BETWEEN 

    (SELECT CAST(OA3NF_BAL_GL_PROCESS_DATE.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE)
      AND 
    (SELECT CAST(OA3NF_BAL_GL_PROCESS_DATE.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE)
;         
  
/*
==================================================================================
OA3NF_BAL_GL_BALANCES_TD_TB  : Populate Teradata Trial Balance Table
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_TD_TB
(
GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,BUSINESS_ENTITY_KEY
,CURRENCY_CD
,SET_OF_BOOKS_ID
, ACTUAL_ENDING_BALANCE_USD
, ACTUAL_ENDING_BALANCE_TXN
)



SELECT


OA3NF_BAL_GL_BALANCES_SUM.GL_PERIOD_ID AS GL_PERIOD_ID            
,OA3NF_BAL_GL_BALANCES_SUM.ACCOUNT_KEY AS ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM.PROCESS_DATE AS PROCESS_DATE 
,OA3NF_BAL_GL_BALANCES_SUM.BUSINESS_ENTITY_KEY AS BUSINESS_ENTITY_KEY 
,OA3NF_BAL_GL_BALANCES_SUM.CURRENCY_CD AS  CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM.SET_OF_BOOKS_ID AS  SET_OF_BOOKS_ID
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_USD) AS  ACTUAL_ENDING_BALANCE_USD
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_TXN) AS ACTUAL_ENDING_BALANCE_TXN

 FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM 
 
 GROUP BY 
 OA3NF_BAL_GL_BALANCES_SUM.GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES_SUM.ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM.PROCESS_DATE
,OA3NF_BAL_GL_BALANCES_SUM.BUSINESS_ENTITY_KEY
,OA3NF_BAL_GL_BALANCES_SUM.CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM.SET_OF_BOOKS_ID

WHERE SRC_SYSTEM='TERADATA-L/A'
AND CAST(PROCESS_DATE AS DATE) IN

(
SELECT CAST(PROCESS_DATE AS DATE)
FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE 
)
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.M_OA3NF_BAL_GL_BALANCES_ORA_TB
AS (


  DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB
  WHERE CAST(PROCESS_DATE AS DATE) 
        NOT BETWEEN 

    (SELECT CAST(PD.PROCESS_DATE_MINUS_14 AS DATE) FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD  )
      AND 
    (SELECT CAST(PD.PROCESS_DATE AS DATE) - 1  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD)
    
    ;         

/*
==================================================================================
OA3NF_BAL_GL_BALANCES_ORA_TB : Populate Oracle Trial Balance Table
==================================================================================
*/

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_ORA_TB
(
GL_PERIOD_ID
,ACCOUNT_KEY
,PROCESS_DATE
,BUSINESS_ENTITY_KEY
,CURRENCY_CD
,SET_OF_BOOKS_ID
, ACTUAL_ENDING_BALANCE_USD
, ACTUAL_ENDING_BALANCE_TXN
)



SELECT
OA3NF_BAL_GL_BALANCES_SUM .GL_PERIOD_ID AS GL_PERIOD_ID            
,OA3NF_BAL_GL_BALANCES_SUM .ACCOUNT_KEY AS ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM .PROCESS_DATE AS PROCESS_DATE 
,OA3NF_BAL_GL_BALANCES_SUM .BUSINESS_ENTITY_KEY AS BUSINESS_ENTITY_KEY 
,OA3NF_BAL_GL_BALANCES_SUM .CURRENCY_CD AS  CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM .SET_OF_BOOKS_ID AS  SET_OF_BOOKS_ID
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_USD) AS  ACTUAL_ENDING_BALANCE_USD
,SUM(OA3NF_BAL_GL_BALANCES_SUM.ACTUAL_ENDING_BALANCE_TXN) AS ACTUAL_ENDING_BALANCE_TXN

 FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM 
 
 GROUP BY 
 OA3NF_BAL_GL_BALANCES_SUM .GL_PERIOD_ID
,OA3NF_BAL_GL_BALANCES_SUM .ACCOUNT_KEY
,OA3NF_BAL_GL_BALANCES_SUM .PROCESS_DATE
,OA3NF_BAL_GL_BALANCES_SUM .BUSINESS_ENTITY_KEY
,OA3NF_BAL_GL_BALANCES_SUM .CURRENCY_CD
,OA3NF_BAL_GL_BALANCES_SUM .SET_OF_BOOKS_ID

WHERE SRC_SYSTEM='ORACLE'

AND CAST(PROCESS_DATE AS DATE) 
IN

( SELECT CAST(PD.PROCESS_DATE AS DATE)
  FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE AS PD
)
;

);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.M_OA3NF_BAL_GL_BALANCES_SUM_PH (CBS_Studio INT, CBS_Distribution INT)
AS (

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM_PH;

INSERT INTO FDW_TABLES_DB.OA3NF_BAL_GL_BALANCES_SUM_PH


                (
                  GL_PERIOD_ID
                , ACCOUNT_KEY
                , PROCESS_DATE
                , CHART_OF_ACCOUNT_ID
                , BUSINESS_ENTITY_KEY
                , SRC_SYSTEM
                , CURRENCY_CD
				,SET_OF_BOOKS_ID
                , ACTUAL_ENDING_BALANCE_USD
                , ACTUAL_ENDING_BALANCE_TXN

                )
         SELECT
		 OASEM_BI_GL_ACCT_BAL_F.PERIOD_KEY   AS GL_PERIOD_ID
		,OASEM_BI_GL_ACCT_BAL_F.ACCOUNT__KEY   AS ACCOUNT_KEY
		,CURRENT_TIMESTAMP                AS PROCESS_DATE
		,OASEM_BI_GL_ACCT_BAL_F.CODE_COMBINATION_ID  AS CHART_OF_ACCOUNT_ID
		,OASEM_BI_GL_ACCT_BAL_F.BUSINESS_ENTITY_KEY  AS BUSINESS_ENTITY_KEY
		,'TERADATA-PHX'     AS SRC_SYSTEM
		,OASEM_BI_GL_ACCT_BAL_F.CURRENCY_KEY   AS CURRENCY_CD
		,OASEM_BI_GL_ACCT_BAL_F.SET_OF_BOOKS_KEY AS SET_OF_BOOKS_KEY
		,SUM(ACTUAL_ENDING_BALANCE_USD)   AS ACTUAL_ENDING_BALANCE_USD
		,SUM(ACTUAL_ENDING_BALANCE_TXN)   AS ACTUAL_ENDING_BALANCE_TXN
        FROM FDW_TABLES_DB.OASEM_BI_GL_ACCT_BAL_F  OASEM_BI_GL_ACCT_BAL_F

	    GROUP BY GL_PERIOD_ID
			,ACCOUNT_KEY
			,PROCESS_DATE
			,CHART_OF_ACCOUNT_ID
			,BUSINESS_ENTITY_KEY
			,SRC_SYSTEM
			,CURRENCY_CD
			,SET_OF_BOOKS_KEY
                
				WHERE SET_OF_BOOKS_KEY IN (:CBS_Studio,:CBS_Distribution) AND GL_PERIOD_ID IN 
   (
                (SEL UPPER(CAST ((CAST(CURRENT_DATE AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(CURRENT_DATE AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID),
                (SEL UPPER(CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'MMM')) AS CHAR(3))
                || '-' || CAST ((CAST(ADD_MONTHS(CURRENT_DATE,-1) AS FORMAT 'YY')) AS CHAR(2)))  AS PERIOD_ID)
                ); 
							
);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.OA3NF_BAL_GL_PROCESS_DATE
AS (

--DELETE

DELETE FROM FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE;


--INSERT CURRENT_TIMESTAMP AND 

INSERT INTO  FDW_TABLES_DB.OA3NF_BAL_GL_PROCESS_DATE(
PROCESS_DATE,
PROCESS_DATE_MINUS_14)
SELECT
CAST(CAST(CURRENT_DATE AS FORMAT 'YYYY-MM-DD') || ' ' || CAST(CAST(CURRENT_TIME AS FORMAT 'HH:MI:SS') AS CHAR(8)) AS TIMESTAMP(6))
,CAST(CAST(CURRENT_DATE AS FORMAT 'YYYY-MM-DD') || ' ' || CAST(CAST(CURRENT_TIME AS FORMAT 'HH:MI:SS') AS CHAR(8)) AS TIMESTAMP(6));


);
--------------------------------------------------------------------------------

--- Request Text
--------------------------------------------------------------------------------


REPLACE MACRO FDW_MACROS_DB.OA3NF_PO_DISTRIBUTIONS AS (

MERGE INTO FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS
USING
(SELECT 
PO_DISTRIBUTION_ID AS PO_DISTRIBUTION_ID,
SOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID ,
TRIM(AUTHORIZATION_STATUS) AS AUTHORIZATION_STATUS,
LAST_UPDATE_DTTM AS LAST_UPDATE_DTTM,
VENDOR_PO_ID AS VENDOR_PO_ID,
VENDOR_PO_LINE_ID AS VENDOR_PO_LINE_ID,
PO_LINE_LOCATION_ID AS PO_LINE_LOCATION_ID,
SET_OF_BOOKS_ID AS SET_OF_BOOKS_ID,
CHART_OF_ACCOUNT_ID AS CHART_OF_ACCOUNT_ID,
QUANTITY_ORDERED AS QUANTITY_ORDERED,
CREATION_DATE AS CREATION_DATE,
QUANTITY_DELIVERED AS QUANTITY_DELIVERED,
QUANTITY_BILLED AS QUANTITY_BILLED,
QUANTITY_CANCELLED AS QUANTITY_CANCELLED,
DELIVER_TO_PERSON_ID AS DELIVER_TO_PERSON_ID,
RATE AS RATE,
AMOUNT_BILLED AS AMOUNT_BILLED,
TRIM(VENDOR_PO_LN_ACCRUED_CD) AS VENDOR_PO_LN_ACCRUED_CD,
TRIM(ENCUMBERED_FLAG) AS ENCUMBERED_FLAG,
GL_CANCELLED_DATE AS GL_CANCELLED_DATE,
TRIM(DESTINATION_TYPE_CODE) AS DESTINATION_TYPE_CODE,
DISTRIBUTION_NUM AS DISTRIBUTION_NUM,
P_AMOUNT_BILLED AS P_AMOUNT_BILLED,
P_NONRECOVERABLE_TAX AS P_NONRECOVERABLE_TAX,
P_SET_OF_BOOKS_ID AS P_SET_OF_BOOKS_ID,
PROJECT_ID AS PROJECT_ID,
TASK_ID AS TASK_ID,
TRIM(EXPENDITURE_TYPE) AS EXPENDITURE_TYPE,
EXPENDITURE_ORGANIZATION_ID AS EXPENDITURE_ORGANIZATION_ID,
GL_CLOSED_DATE AS GL_CLOSED_DATE,
TRIM(ACCRUE_ON_RECEIPT_CD) AS ACCRUE_ON_RECEIPT_CD,
EXPENDITURE_ITEM_DATE AS EXPENDITURE_ITEM_DATE,
ORG_ID AS ORG_ID,
AWARD_ID AS AWARD_ID,
AWARD_ID AS NONRECOVERABLE_TAX
FROM FDW_STAGE_DB.LOAD_PO_DISTRIBUTIONS_s)  AS LOAD_PO_DISTRIBUTIONS_s
ON ( FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS.PO_LINE_LOCATION_ID=LOAD_PO_DISTRIBUTIONS_s.PO_LINE_LOCATION_ID
AND
FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS.CHART_OF_ACCOUNT_ID=LOAD_PO_DISTRIBUTIONS_s.CHART_OF_ACCOUNT_ID
AND
FDW_TABLES_DB.OA3NF_PO_DISTRIBUTIONS.SET_OF_BOOKS_ID=LOAD_PO_DISTRIBUTIONS_s.SET_OF_BOOKS_ID)

WHEN MATCHED THEN UPDATE
SET PO_DISTRIBUTION_ID = LOAD_PO_DISTRIBUTIONS_s.PO_DISTRIBUTION_ID,
 SOURCE_SYSTEM_ID=LOAD_PO_DISTRIBUTIONS_s.SOURCE_SYSTEM_ID,
 AUTHORIZATION_STATUS=LOAD_PO_DISTRIBUTIONS_s.AUTHORIZATION_STATUS,
 LAST_UPDATE_DTTM=LOAD_PO_DISTRIBUTIONS_s.LAST_UPDATE_DTTM,
 VENDOR_PO_ID=LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_ID,
 VENDOR_PO_LINE_ID=LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_LINE_ID,
 QUANTITY_ORDERED=LOAD_PO_DISTRIBUTIONS_s.QUANTITY_ORDERED,
 CREATION_DATE=LOAD_PO_DISTRIBUTIONS_s.CREATION_DATE,
 QUANTITY_DELIVERED=LOAD_PO_DISTRIBUTIONS_s.QUANTITY_DELIVERED,
 QUANTITY_BILLED=LOAD_PO_DISTRIBUTIONS_s.QUANTITY_BILLED,
 QUANTITY_CANCELLED=LOAD_PO_DISTRIBUTIONS_s.QUANTITY_CANCELLED,
 DELIVER_TO_PERSON_ID=LOAD_PO_DISTRIBUTIONS_s.DELIVER_TO_PERSON_ID,
 RATE=LOAD_PO_DISTRIBUTIONS_s.RATE,
 AMOUNT_BILLED=LOAD_PO_DISTRIBUTIONS_s.AMOUNT_BILLED,
 VENDOR_PO_LN_ACCRUED_CD=LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_LN_ACCRUED_CD,
 ENCUMBERED_FLAG=LOAD_PO_DISTRIBUTIONS_s.ENCUMBERED_FLAG,
 GL_CANCELLED_DATE=LOAD_PO_DISTRIBUTIONS_s.GL_CANCELLED_DATE,
 DESTINATION_TYPE_CODE=LOAD_PO_DISTRIBUTIONS_s.DESTINATION_TYPE_CODE,
 DISTRIBUTION_NUM=LOAD_PO_DISTRIBUTIONS_s.DISTRIBUTION_NUM,
 P_AMOUNT_BILLED=LOAD_PO_DISTRIBUTIONS_s.P_AMOUNT_BILLED,
 P_NONRECOVERABLE_TAX=LOAD_PO_DISTRIBUTIONS_s.P_NONRECOVERABLE_TAX,
 P_SET_OF_BOOKS_ID=LOAD_PO_DISTRIBUTIONS_s.P_SET_OF_BOOKS_ID,
 PROJECT_ID=LOAD_PO_DISTRIBUTIONS_s.PROJECT_ID,
 TASK_ID=LOAD_PO_DISTRIBUTIONS_s.TASK_ID,
 EXPENDITURE_TYPE=LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_TYPE,
 EXPENDITURE_ORGANIZATION_ID=LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_ORGANIZATION_ID,
 GL_CLOSED_DATE=LOAD_PO_DISTRIBUTIONS_s.GL_CLOSED_DATE,
 ACCRUE_ON_RECEIPT_CD=LOAD_PO_DISTRIBUTIONS_s.ACCRUE_ON_RECEIPT_CD,
 EXPENDITURE_ITEM_DATE=LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_ITEM_DATE,
 ORG_ID=LOAD_PO_DISTRIBUTIONS_s.ORG_ID,
 AWARD_ID=LOAD_PO_DISTRIBUTIONS_s.AWARD_ID,
 NONRECOVERABLE_TAX=LOAD_PO_DISTRIBUTIONS_s.NONRECOVERABLE_TAX
WHEN NOT MATCHED THEN INSERT
(
PO_DISTRIBUTION_ID,
SOURCE_SYSTEM_ID,
AUTHORIZATION_STATUS,
LAST_UPDATE_DTTM,
VENDOR_PO_ID,
VENDOR_PO_LINE_ID,
PO_LINE_LOCATION_ID,
SET_OF_BOOKS_ID,
CHART_OF_ACCOUNT_ID,
QUANTITY_ORDERED,
CREATION_DATE,
QUANTITY_DELIVERED,
QUANTITY_BILLED,
QUANTITY_CANCELLED,
DELIVER_TO_PERSON_ID,
RATE,
AMOUNT_BILLED,
VENDOR_PO_LN_ACCRUED_CD,
ENCUMBERED_FLAG,
GL_CANCELLED_DATE,
DESTINATION_TYPE_CODE,
DISTRIBUTION_NUM,
P_AMOUNT_BILLED,
P_NONRECOVERABLE_TAX,
P_SET_OF_BOOKS_ID,
PROJECT_ID,
TASK_ID,
EXPENDITURE_TYPE,
EXPENDITURE_ORGANIZATION_ID,
GL_CLOSED_DATE,
ACCRUE_ON_RECEIPT_CD,
EXPENDITURE_ITEM_DATE,
ORG_ID,
AWARD_ID,
NONRECOVERABLE_TAX
) VALUES
(
LOAD_PO_DISTRIBUTIONS_s.PO_DISTRIBUTION_ID,
LOAD_PO_DISTRIBUTIONS_s.SOURCE_SYSTEM_ID,
LOAD_PO_DISTRIBUTIONS_s.AUTHORIZATION_STATUS,
LOAD_PO_DISTRIBUTIONS_s.LAST_UPDATE_DTTM,
LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_ID,
LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_LINE_ID,
LOAD_PO_DISTRIBUTIONS_s.PO_LINE_LOCATION_ID,
LOAD_PO_DISTRIBUTIONS_s.SET_OF_BOOKS_ID,
LOAD_PO_DISTRIBUTIONS_s.CHART_OF_ACCOUNT_ID,
LOAD_PO_DISTRIBUTIONS_s.QUANTITY_ORDERED,
LOAD_PO_DISTRIBUTIONS_s.CREATION_DATE,
LOAD_PO_DISTRIBUTIONS_s.QUANTITY_DELIVERED,
LOAD_PO_DISTRIBUTIONS_s.QUANTITY_BILLED,
LOAD_PO_DISTRIBUTIONS_s.QUANTITY_CANCELLED,
LOAD_PO_DISTRIBUTIONS_s.DELIVER_TO_PERSON_ID,
LOAD_PO_DISTRIBUTIONS_s.RATE,
LOAD_PO_DISTRIBUTIONS_s.AMOUNT_BILLED,
LOAD_PO_DISTRIBUTIONS_s.VENDOR_PO_LN_ACCRUED_CD,
LOAD_PO_DISTRIBUTIONS_s.ENCUMBERED_FLAG,
LOAD_PO_DISTRIBUTIONS_s.GL_CANCELLED_DATE,
LOAD_PO_DISTRIBUTIONS_s.DESTINATION_TYPE_CODE,
LOAD_PO_DISTRIBUTIONS_s.DISTRIBUTION_NUM,
LOAD_PO_DISTRIBUTIONS_s.P_AMOUNT_BILLED,
LOAD_PO_DISTRIBUTIONS_s.P_NONRECOVERABLE_TAX,
LOAD_PO_DISTRIBUTIONS_s.P_SET_OF_BOOKS_ID,
LOAD_PO_DISTRIBUTIONS_s.PROJECT_ID,
LOAD_PO_DISTRIBUTIONS_s.TASK_ID,
LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_TYPE,
LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_ORGANIZATION_ID,
LOAD_PO_DISTRIBUTIONS_s.GL_CLOSED_DATE,
LOAD_PO_DISTRIBUTIONS_s.ACCRUE_ON_RECEIPT_CD,
LOAD_PO_DISTRIBUTIONS_s.EXPENDITURE_ITEM_DATE,
LOAD_PO_DISTRIBUTIONS_s.ORG_ID,
LOAD_PO_DISTRIBUTIONS_s.AWARD_ID,
LOAD_PO_DISTRIBUTIONS_s.NONRECOVERABLE_TAX
);
);
